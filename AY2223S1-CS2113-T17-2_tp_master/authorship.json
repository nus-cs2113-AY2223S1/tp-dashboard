[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"Zhai-Yuxin":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |        Name         | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"--------|:-------------------:|:--------------:|:---------:","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |        Insaf        | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Zhai Yuxin      | [Github](https://github.com/Zhai-Yuxin) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Brandon Owen Sjarif | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Ishita Mandal    | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"insafhere":1,"Brandon-OS":2,"ishitamandal06":1,"-":3,"Zhai-Yuxin":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"The general class structure of our program is pictured in the following class diagram:","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"![GeneralClassDiagram.png](diagrams/GeneralClassDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"The class structure of our commands are listed below:","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"![CommandClassDiagram.png](diagrams/CommandClassDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Brandon-OS"},"content":"All the commands shown in the command class diagram above are features that will be described below.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"### Addition feature","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"The addition mechanism is facilitated by \u0027Parser\u0027, \u0027Add\u0027, \u0027ModuleList\u0027 and \u0027UI\u0027, where a Module object will be created according to the content inputted by the user and stored in the module list.","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"Below is an example usage scenario and how the addition mechanism behaves at each step:","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"Step 1: The user launches the application for the first time. A ModuleList object will be initiated with empty content.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"Step 2: The user input of \"add m/cs2113 s/y2s1 mc/4 g/a\" will be taken in for parser and an object of class \u0027Add\u0027 will be returned.","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Brandon-OS"},"content":"Step 3: The execute method in the Add class that is overrides will be called with parameter of moduleList and module to be added passed. This will add the Module into the module list created in step 1.","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Brandon-OS"},"content":"The sequence diagram below illustrates this add mechanism:","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"![AddUML.png](diagrams/AddUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"### Deletion feature","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Brandon-OS"},"content":"The deletion mechanism is facilitated by \u0027Parser\u0027, \u0027Add\u0027, \u0027ModuleList\u0027 and \u0027UI\u0027, where a Module object will be deleted according to the module code inputted by the user and removed from the module list.","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Brandon-OS"},"content":"Below is an example usage scenario and how the addition mechanism behaves at each step:","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Brandon-OS"},"content":"Step 1: Assume that the user has already added a module named CS2113 into the ModuleList using the following command, \"add m/cs2113 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Brandon-OS"},"content":"Step 2: The user input of \"delete m/cs2113\" will be taken in for the parser and an object of class \u0027Delete\u0027 will be returned.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Brandon-OS"},"content":"Step 3: The execute method in the Delete class that is overrides will be called with parameter of the modCode and will iterate through moduleList looking for a Module that matches. It will then remove the Module from the moduleList.","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Brandon-OS"},"content":"The sequence diagram below illustrates this delete mechanism:","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"Zhai-Yuxin"},"content":"![DeleteUML.png](diagrams/DeleteUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"Zhai-Yuxin"},"content":"### View feature","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"The View mechanism is facilitated by \u0027Parser\u0027, \u0027View\u0027, \u0027ModuleList\u0027, and \u0027UI\u0027, where the user enters","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"insafhere"},"content":"a semester and the total number of mcs taken that semester is calculated and displayed.","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"Below is an example usage scenario and how the view mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"Step 1: Assume that the user has already added two modules to y2s1:","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"The first module is CS2113, a 4 MC module which was added using the following command \"add m/cs2113 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"The second module is CS2030, a 4 MC module which was added using the following command \"add m/cs2030 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"Step 2: The user input of \"view s/y2s1\" will be taken in for the parser and an object of class \u0027View\u0027 will be returned.","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"Step 3: The execute method of View class that is overrides will be called with parameter of the semester and will iterate through","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"the moduleList. If the semester in which a particular module is taken matches the semester given as the argument, then the module will be added to an ArrayList called matchingModules. In the end, the arrayList matchingModules will be returned.","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"The sequence diagram below illustrates this view mechanism.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Zhai-Yuxin"},"content":"![viewUML.png](diagrams/viewUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"insafhere"},"content":"### Mcs feature","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"The mcs mechanism is facilitated by \u0027Parser\u0027, \u0027Mcs\u0027, \u0027ModuleList\u0027, and \u0027UI\u0027, where the user enters","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"a semester and the total number of mcs taken that semester is calculated and displayed. ","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"Below is an example usage scenario and how the mcs mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"Step 1: Assume that the user has already added two modules to y2s1:","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"The first module is CS2113, a 4 MC module which was added using the following command \"add m/cs2113 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"The second module is CS2030, a 4 MC module which was added using the following command \"add m/cs2030 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"Step 2: The user input of \"mcs s/y2s1\" will be taken in for the parser and an object of class \u0027Mcs\u0027 will be returned.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"Step 3: The execute method of MCs class that is overrides will be called with parameter of the semester and will iterate through ","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"the moduleList. If the semester in which a particular module is taken matches the semester given as the argument, then mcsCount variable ","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"will be increased by the number of Mcs of the module taken. In the end, mcsCount will be returned.","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"The sequence diagram below illustrates this mcs mechanism.","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"![McsUML.png](diagrams/McsUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"### Find feature","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"Zhai-Yuxin"},"content":"The find mechanism is facilitated by \u0027Parser\u0027, \u0027Find\u0027, \u0027ModuleList\u0027, and \u0027UI\u0027, where the user enters","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"Zhai-Yuxin"},"content":"a keyword and the modules containing the keyword in one of its fields will be displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"Zhai-Yuxin"},"content":"Below is an example usage scenario and how the find mechanism behaves at each step.","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"Zhai-Yuxin"},"content":"Step 1: Assume that the user has already added two modules to y2s1:","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"Zhai-Yuxin"},"content":"The first module is CS2113, a 4 MC module which was added using the following command \"add m/cs2113 s/y2s1 mc/4 g/a\"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"Zhai-Yuxin"},"content":"The second module is CS2030, a 4 MC module which was added using the following command \"add m/cs2030 s/y2s1 mc/4 g/b\"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"Zhai-Yuxin"},"content":"Step 2: The user input of \"find a\" will be taken in for the parser and an object of class \u0027Find\u0027 will be returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"Zhai-Yuxin"},"content":"Step 3: The execute method of Find class that is overrides will be called with parameter of the keyword inputted and will iterate through","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"Zhai-Yuxin"},"content":"the moduleList. If the keyword matches a field of a particular module, the module will be added to a separate array list ","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"Zhai-Yuxin"},"content":"which will then be displayed to the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"Zhai-Yuxin"},"content":"The sequence diagram below illustrates this find mechanism.","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"Zhai-Yuxin"},"content":"![FindUML.png](diagrams/FindUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"Zhai-Yuxin"},"content":"### Check feature","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"Zhai-Yuxin"},"content":"The help mechanism is facilitated by \u0027Parser\u0027, \u0027Check\u0027 and \u0027UI\u0027, where the user enters the check command and the resulting ","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"Zhai-Yuxin"},"content":"eligibility status will be displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"Brandon-OS"},"content":"The eligibility requirements for NOC and SEP can be found in the glossary.","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"Brandon-OS"},"content":"The sequence diagram below illustrates this check mechanism.","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"Zhai-Yuxin"},"content":"![CheckUML.png](diagrams/CheckUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"Zhai-Yuxin"},"content":"### Help feature","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"Zhai-Yuxin"},"content":"The help mechanism is facilitated by \u0027Parser\u0027, \u0027Help\u0027 and \u0027UI\u0027, where the user enters the word \u0027help\u0027 and a help message with ","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"Zhai-Yuxin"},"content":"the various commands summary will be displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"Zhai-Yuxin"},"content":"The sequence diagram below illustrates this help mechanism.","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"Zhai-Yuxin"},"content":"![HelpUML.png](diagrams/HelpUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"Zhai-Yuxin"},"content":"### Exit feature","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"Zhai-Yuxin"},"content":"The exit mechanism is facilitated by \u0027Parser\u0027, \u0027Exit\u0027 and \u0027UI\u0027. ","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"Zhai-Yuxin"},"content":"This allows the program to exit smoothly with an exit message displayed when the user input is \u0027exit\u0027.","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"Zhai-Yuxin"},"content":"The sequence diagram below illustrates this exit mechanism.","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"Zhai-Yuxin"},"content":"![ExitUML.png](diagrams/ExitUML.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"Brandon-OS"},"content":"Our target user profile are NUS students who are still unsure of what module they will be taking and/or are targeting one of the exchange programs that NUS has to offer (NOC/SEP).","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"Brandon-OS"},"content":"Through our program students will be able to ensure that they are eligible for these programmes and ensure that they make the most out of their studies in NUS.","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"Brandon-OS"},"content":"It is often very confusing for students to plan out the full four years of their studies due to the sheer amount of modules they will be taking.","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"Brandon-OS"},"content":"Students might also have doubts of their eligibility for the exchange programs. Our program allows users to ensure that they will be eligible for these programs when the time comes.","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"Brandon-OS"},"content":"* *Module* - A class that a student takes for their current semester in NUS.","lastModifiedDate":"2022-11-03"},{"lineNumber":169,"author":{"gitId":"Brandon-OS"},"content":"* *NOC* - NUS Overseas College is an entrepreneurial program for full-time students to learn more about entrepreneurship through interning at start-up companies and taking up courses part-time from other universities. Further details can be found in the following link: https://fass.nus.edu.sg/nus-overseas-college-programme-noc/#:~:text\u003dEligibility,refer%20to%20application%20details%20here.","lastModifiedDate":"2022-11-03"},{"lineNumber":170,"author":{"gitId":"Brandon-OS"},"content":"* *SEP* - Student Exchange Program allows students to live and study in another country while earning credits for their NUS degree. Further information and eligibility can be found in the following link: https://www.nus.edu.sg/gro/global-programmes/student-exchange/outgoing-exchangers.","lastModifiedDate":"2022-11-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"insafhere":15,"Brandon-OS":29,"ishitamandal06":15,"-":35,"Zhai-Yuxin":80}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"# PlanIT","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"PlanIt is a Command Line Interface (CLI) based desktop application which will help School of Computing students to plan their modules and credits every semester. They can also check if they are eligible for NOC or SEP using this application.","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"Note that it is user\u0027s own responsibility to check and ensure that the module code that they entered is valid and fulfills any pre-requisites needed.","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Zhai-Yuxin":6,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"# User Guide for PlanIt","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"PlanIt is a Command Line Interface (CLI) based desktop application which will help School of Computing students to plan their modules and credits every semester. They can also check if they are eligible for NOC or SEP using this application.","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Note that it is user\u0027s own responsibility to check and ensure that the module code that they entered is valid and fulfills any pre-requisites needed.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"2. Download the latest JAR file from https://github.com/AY2223S1-CS2113-T17-2/tp/releases/tag/v2.0-Released.","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"3. Copy the file to the folder you want to use as the home folder for your program.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"5. Type the commands in the command box and press Enter to execute it. E.g typing help and pressing Enter will open the help window.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"Some example commands you can try:","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"* Add a Module : add m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER mc/NUMBER_OF_MCS g/GRADE","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"* Delete a module : delete m/MODULE_CODE","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"insafhere"},"content":"* View modules in a semester : view s/YEAR_NUMBER_SEMESTER_NUMBER","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"* View all modules taken : view all","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"* Clears modules in a semesters : clear s/YEAR_NUMBER_SEMESTER_NUMBER","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"* Clears all modules taken : clear all","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"* Calculate MCs taken : mcs s/YEAR_NUMBER_SEMESTER_NUMBER","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"* Finds module information : find \u003cKEYWORD\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"* Checks for SEP/NOC program eligibility : check \u003cPROGRAM\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"* Overview of your Plan (MCs, CAP, Eligibility) : overview","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"insafhere"},"content":"* Exits the App : exit","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"insafhere"},"content":"### Notes about format of input:","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"insafhere"},"content":"1. Words in UPPER_CASE are the parameters to be supplied by the user. ","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"insafhere"},"content":"2. YEAR_NUMBER_SEMESTER_NUMBER should be in the form YXSZ where X is the year number and Z is the semester number. For example, Year 2 Semester 1 will be Y2S1. ","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"insafhere"},"content":"3. Grade can be either the letter grade  (eg. A+, A, A-), the S/U grade (eg. S, U) or Nil (eg. “-”) if the module has not been completed and has no grade yet. ","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"insafhere"},"content":"4. Parameters can be in any order. e.g. if the command specifies m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER , s/YEAR_NUMBER_SEMESTER_NUMBER m/MODULE_CODE  is also acceptable. ","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"insafhere"},"content":"5. Every part of the command should be separated by a spacing “ “.","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"### Feature #1 : Adds a module - add","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"This lets the user add a module to the system.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"###### Format of input: `add m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER mc/NUMBER_OF_MCS g/GRADE`","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"Input : `add m/CS2111 s/Y2S1 mc/4 g/b+`","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"insafhere"},"content":"CS2111 has been added to Y2S1 as completed","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"Input : `add m/CS2112 s/Y2S1 mc/4 g/-`","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"CS2112 has been added to Y2S1 as incomplete!","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"insafhere"},"content":"Input : `add m/CS2113 s/Y2S1 mc/4 g/S`","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"insafhere"},"content":"CS2113 has been added to Y2S1 as completed","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"insafhere"},"content":"Input : `add m/CS2113 s/Y2S1 mc/4 g/S`","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"This CS2113 module is already in your plan.","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"insafhere"},"content":"Choose another module to add or delete the one in the plan and add it again.","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"insafhere"},"content":"### Feature #2 : Deletes a module - delete","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"insafhere"},"content":"This allows the user to delete a module that they have previously added to their system.","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"insafhere"},"content":"###### Format of input: `delete m/MODULE_CODE`","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"insafhere"},"content":"Input : `delete m/CS2113`","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"insafhere"},"content":"CS2113 has been deleted from your plan","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Zhai-Yuxin"},"content":"Input: `delete m/cs1111`","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"Zhai-Yuxin"},"content":"Output:","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"ishitamandal06"},"content":"The module CS1111 is not found in your plan!!","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"Zhai-Yuxin"},"content":"Please add the module first before you want to delete.","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"### Feature #3 : View all modules in a semester - view","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"This shows the user what modules they have added into the system for a particular semester.","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"###### Format of input: `view s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"insafhere"},"content":"Input : `view s/Y2S1`","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"insafhere"},"content":"These are your mods for Y2S1","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"insafhere"},"content":"1. CS2112 Y2S1 - 4","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"insafhere"},"content":"2. CS2111 Y2S1 B+ 4","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"insafhere"},"content":"3. CS2115 Y2S1 S 4","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"Zhai-Yuxin"},"content":"Input: `view s/y1s1`","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"Zhai-Yuxin"},"content":"Output:","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"Zhai-Yuxin"},"content":"There is no module allocated in Y1S1!!","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"insafhere"},"content":"###### Format of input: `view all`","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"Zhai-Yuxin"},"content":"Input: `view all`","lastModifiedDate":"2022-11-04"},{"lineNumber":150,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":151,"author":{"gitId":"Zhai-Yuxin"},"content":"Output: ","lastModifiedDate":"2022-11-04"},{"lineNumber":152,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-11-04"},{"lineNumber":153,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-11-04"},{"lineNumber":154,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"Zhai-Yuxin"},"content":"These are your module(s) for Y1S1","lastModifiedDate":"2022-11-04"},{"lineNumber":156,"author":{"gitId":"Zhai-Yuxin"},"content":"1. CS1010 Y1S1 A 4","lastModifiedDate":"2022-11-04"},{"lineNumber":157,"author":{"gitId":"Zhai-Yuxin"},"content":"These are your module(s) for Y2S1","lastModifiedDate":"2022-11-04"},{"lineNumber":158,"author":{"gitId":"Zhai-Yuxin"},"content":"1. CS2040 Y2S1 A 4","lastModifiedDate":"2022-11-04"},{"lineNumber":159,"author":{"gitId":"Zhai-Yuxin"},"content":"2. CS2113 Y2S1 A 4","lastModifiedDate":"2022-11-04"},{"lineNumber":160,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-11-04"},{"lineNumber":161,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-11-04"},{"lineNumber":162,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":163,"author":{"gitId":"insafhere"},"content":"### Feature #4 : Clears all modules in a semester - clear","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"insafhere"},"content":"This clears modules in a particular semester or all semesters.","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":167,"author":{"gitId":"insafhere"},"content":"###### Format of input: `clear s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"insafhere"},"content":"Input : `clear s/Y2S1`","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":173,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":175,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"insafhere"},"content":"Successfully cleared all modules for Y2S1.","lastModifiedDate":"2022-11-05"},{"lineNumber":177,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":178,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"insafhere"},"content":"###### Format of input: `clear all`","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"insafhere"},"content":"Input: `clear all`","lastModifiedDate":"2022-11-05"},{"lineNumber":182,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":184,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":185,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":186,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":187,"author":{"gitId":"insafhere"},"content":"Successfully cleared all modules in your plan!","lastModifiedDate":"2022-11-05"},{"lineNumber":188,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":190,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":191,"author":{"gitId":"insafhere"},"content":"### Feature #5 : View modular credits taken in a semester - mcs","lastModifiedDate":"2022-11-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"Brandon-OS"},"content":"This allows the student to view their MCs taken for the semester.","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"insafhere"},"content":"###### Format of input: `mcs s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"insafhere"},"content":"Input : `mcs s/Y2S2`","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":204,"author":{"gitId":"insafhere"},"content":"You have 4 mcs for Y2S1","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"insafhere"},"content":"### Feature #6 : Find module information - find","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"ishitamandal06"},"content":"This feature can be used to find module information ","lastModifiedDate":"2022-11-05"},{"lineNumber":211,"author":{"gitId":"ishitamandal06"},"content":"from added modules. They keyword can be from module code, semester, mcs, or grade. ","lastModifiedDate":"2022-11-05"},{"lineNumber":212,"author":{"gitId":"ishitamandal06"},"content":"Even partial keywords can be entered. ","lastModifiedDate":"2022-11-05"},{"lineNumber":213,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"insafhere"},"content":"###### Format of input: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"insafhere"},"content":"Input : `find cs2113`","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":223,"author":{"gitId":"insafhere"},"content":"These are your matching modules:","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"ishitamandal06"},"content":"1. CS2113 Y2S1 - 4","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"Zhai-Yuxin"},"content":"Input : `find a`","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"Zhai-Yuxin"},"content":"Output:","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"Zhai-Yuxin"},"content":"These are your matching modules:","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"Zhai-Yuxin"},"content":"1. CS2113 Y2S1 A 4","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"Zhai-Yuxin"},"content":"Input : `find 4`","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"Zhai-Yuxin"},"content":"Output:","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"Zhai-Yuxin"},"content":"These are your matching modules:","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"Zhai-Yuxin"},"content":"1. CS2114 Y2S1 - 4","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"Zhai-Yuxin"},"content":"Input : `find y2s2`","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"Zhai-Yuxin"},"content":"Output:","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":256,"author":{"gitId":"Zhai-Yuxin"},"content":"These are your matching modules:","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"Zhai-Yuxin"},"content":"1. CS2002 Y2S2 B+ 4","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"Zhai-Yuxin"},"content":"----------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"Zhai-Yuxin"},"content":"```","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"insafhere"},"content":"### Feature #7 : Checks eligibility for NOC/SEP - check","lastModifiedDate":"2022-11-05"},{"lineNumber":262,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":263,"author":{"gitId":"Brandon-OS"},"content":"Checks whether the user is eligible for SEP or NOC.","lastModifiedDate":"2022-11-05"},{"lineNumber":264,"author":{"gitId":"Brandon-OS"},"content":"The specific eligibility for these programs can be found in the glossary.","lastModifiedDate":"2022-11-05"},{"lineNumber":265,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":266,"author":{"gitId":"insafhere"},"content":"###### Format of input: `check \u003cPROGRAM\u003e`","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":268,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":269,"author":{"gitId":"insafhere"},"content":"Input : `check NOC`","lastModifiedDate":"2022-10-26"},{"lineNumber":270,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":271,"author":{"gitId":"insafhere"},"content":"Output 1 - When eligible for NOC:","lastModifiedDate":"2022-11-05"},{"lineNumber":272,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":275,"author":{"gitId":"insafhere"},"content":"You are eligible for NOC!","lastModifiedDate":"2022-11-05"},{"lineNumber":276,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":277,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":278,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":279,"author":{"gitId":"insafhere"},"content":"Output 2 - When ineligible for NOC:","lastModifiedDate":"2022-11-05"},{"lineNumber":280,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":283,"author":{"gitId":"insafhere"},"content":"Sorry, You are ineligible for NOC.","lastModifiedDate":"2022-11-05"},{"lineNumber":284,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":285,"author":{"gitId":"insafhere"},"content":"These may be possible reasons for ineligibility:","lastModifiedDate":"2022-11-05"},{"lineNumber":286,"author":{"gitId":"insafhere"},"content":" * You have yet to complete 4 semesters of study","lastModifiedDate":"2022-11-05"},{"lineNumber":287,"author":{"gitId":"insafhere"},"content":" * You are currently in your final academic semester","lastModifiedDate":"2022-11-05"},{"lineNumber":288,"author":{"gitId":"insafhere"},"content":" * You have yet to obtain more than 70MC","lastModifiedDate":"2022-11-05"},{"lineNumber":289,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":291,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":292,"author":{"gitId":"insafhere"},"content":"Input : `check SEP`","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":294,"author":{"gitId":"insafhere"},"content":"Output 1 - When eligible for SEP:","lastModifiedDate":"2022-11-05"},{"lineNumber":295,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":298,"author":{"gitId":"insafhere"},"content":"You are eligible for SEP!","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":300,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"Brandon-OS"},"content":"### Feature #8 : Opens the help manual - help","lastModifiedDate":"2022-11-06"},{"lineNumber":303,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":304,"author":{"gitId":"Brandon-OS"},"content":"Helps users get their feet into PlanIT.","lastModifiedDate":"2022-11-05"},{"lineNumber":305,"author":{"gitId":"Brandon-OS"},"content":"Opens a list of all the commands of the program.","lastModifiedDate":"2022-11-05"},{"lineNumber":306,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":307,"author":{"gitId":"Brandon-OS"},"content":"###### Format of input: `help`","lastModifiedDate":"2022-11-05"},{"lineNumber":308,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":309,"author":{"gitId":"Brandon-OS"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":310,"author":{"gitId":"Brandon-OS"},"content":"Input : `help`","lastModifiedDate":"2022-11-05"},{"lineNumber":311,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":312,"author":{"gitId":"Brandon-OS"},"content":"Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":313,"author":{"gitId":"Brandon-OS"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":314,"author":{"gitId":"Brandon-OS"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":315,"author":{"gitId":"Brandon-OS"},"content":"## Command Summary","lastModifiedDate":"2022-11-05"},{"lineNumber":316,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":317,"author":{"gitId":"Brandon-OS"},"content":"* Add a Module : add m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER mc/NUMBER_OF_MCS g/GRADE ","lastModifiedDate":"2022-11-05"},{"lineNumber":318,"author":{"gitId":"Brandon-OS"},"content":"* Delete a module : delete m/MODULE_CODE ","lastModifiedDate":"2022-11-05"},{"lineNumber":319,"author":{"gitId":"Brandon-OS"},"content":"* View modules : view s/YEAR_NUMBER_SEMESTER_NUMBER ","lastModifiedDate":"2022-11-05"},{"lineNumber":320,"author":{"gitId":"Brandon-OS"},"content":"* Calculate MCs taken : mcs s/YEAR_NUMBER_SEMESTER_NUMBER ","lastModifiedDate":"2022-11-05"},{"lineNumber":321,"author":{"gitId":"Brandon-OS"},"content":"* Finds module information : find \u003cKEYWORD\u003e ","lastModifiedDate":"2022-11-05"},{"lineNumber":322,"author":{"gitId":"Brandon-OS"},"content":"* Checks for SEP/NOC program eligibility : check \u003cPROGRAM\u003e ","lastModifiedDate":"2022-11-05"},{"lineNumber":323,"author":{"gitId":"Brandon-OS"},"content":"* Exits the App : exit ","lastModifiedDate":"2022-11-05"},{"lineNumber":324,"author":{"gitId":"Brandon-OS"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":325,"author":{"gitId":"Brandon-OS"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":326,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":327,"author":{"gitId":"Brandon-OS"},"content":"### Feature #9 : Gets an overview of Student Profile - overview","lastModifiedDate":"2022-11-06"},{"lineNumber":328,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":329,"author":{"gitId":"insafhere"},"content":"View MCs taken, CAP, Graduation fulfillment and eligibility for SEP and NOC.","lastModifiedDate":"2022-11-05"},{"lineNumber":330,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":331,"author":{"gitId":"insafhere"},"content":"###### Format of input: `overview`","lastModifiedDate":"2022-11-05"},{"lineNumber":332,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":333,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-11-05"},{"lineNumber":334,"author":{"gitId":"insafhere"},"content":"Input : `overview`","lastModifiedDate":"2022-11-05"},{"lineNumber":335,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":336,"author":{"gitId":"insafhere"},"content":"Output :","lastModifiedDate":"2022-11-05"},{"lineNumber":337,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":338,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":339,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":340,"author":{"gitId":"insafhere"},"content":"Here’s an overview of your Profile:","lastModifiedDate":"2022-11-05"},{"lineNumber":341,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":342,"author":{"gitId":"insafhere"},"content":"* Current Semester: Y2S1","lastModifiedDate":"2022-11-05"},{"lineNumber":343,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":344,"author":{"gitId":"insafhere"},"content":"* Total MCs completed : 8","lastModifiedDate":"2022-11-05"},{"lineNumber":345,"author":{"gitId":"insafhere"},"content":"* Total Graded MCs : 4","lastModifiedDate":"2022-11-05"},{"lineNumber":346,"author":{"gitId":"insafhere"},"content":"* Total Ungraded (-) MCs : 0","lastModifiedDate":"2022-11-05"},{"lineNumber":347,"author":{"gitId":"insafhere"},"content":"* Total S/U MCs : 4","lastModifiedDate":"2022-11-05"},{"lineNumber":348,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":349,"author":{"gitId":"insafhere"},"content":"* Cumulative Average Point (CAP) : 4.00","lastModifiedDate":"2022-11-05"},{"lineNumber":350,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":351,"author":{"gitId":"insafhere"},"content":"* MCs Needed needed for graduation : 152","lastModifiedDate":"2022-11-05"},{"lineNumber":352,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":353,"author":{"gitId":"insafhere"},"content":"* Eligibility for NOC : No","lastModifiedDate":"2022-11-05"},{"lineNumber":354,"author":{"gitId":"insafhere"},"content":"* Eligibility for SEP : Yes","lastModifiedDate":"2022-11-05"},{"lineNumber":355,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-11-05"},{"lineNumber":356,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-11-05"},{"lineNumber":357,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":358,"author":{"gitId":"Brandon-OS"},"content":"### Feature #10 : Exits the program - exit","lastModifiedDate":"2022-11-06"},{"lineNumber":359,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":360,"author":{"gitId":"insafhere"},"content":"Exits the program","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":362,"author":{"gitId":"insafhere"},"content":"###### Format of input: `exit`","lastModifiedDate":"2022-10-26"},{"lineNumber":363,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":364,"author":{"gitId":"insafhere"},"content":"#### Example of Input and Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"insafhere"},"content":"Input : `exit`","lastModifiedDate":"2022-10-26"},{"lineNumber":366,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":367,"author":{"gitId":"insafhere"},"content":"Output:","lastModifiedDate":"2022-10-26"},{"lineNumber":368,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":369,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":370,"author":{"gitId":"insafhere"},"content":"Thank you for using PlanIt!","lastModifiedDate":"2022-10-26"},{"lineNumber":371,"author":{"gitId":"insafhere"},"content":"----------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":372,"author":{"gitId":"insafhere"},"content":"```","lastModifiedDate":"2022-10-26"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":378,"author":{"gitId":"ishitamandal06"},"content":"**A**: After you use our application, your data is stored in a file called \"data.txt\" which is in the ","lastModifiedDate":"2022-11-05"},{"lineNumber":379,"author":{"gitId":"ishitamandal06"},"content":"same directory as the application file. You can just transfer this file to another computer and save it in the","lastModifiedDate":"2022-11-05"},{"lineNumber":380,"author":{"gitId":"ishitamandal06"},"content":"same directory as your application. It will transfer all the information in the program running on the other computer.","lastModifiedDate":"2022-11-05"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":382,"author":{"gitId":"Brandon-OS"},"content":"**Q**: What if I forget how to use PlanIt?","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"Brandon-OS"},"content":"**A**: You can always view the commands available in PlanIt through the help command.","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":388,"author":{"gitId":"insafhere"},"content":"* Add a Module : `add m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER mc/NUMBER_OF_MCS g/GRADE`","lastModifiedDate":"2022-11-05"},{"lineNumber":389,"author":{"gitId":"insafhere"},"content":"* Delete a module : `delete m/MODULE_CODE`","lastModifiedDate":"2022-11-05"},{"lineNumber":390,"author":{"gitId":"insafhere"},"content":"* View modules in a semester : `view s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-11-05"},{"lineNumber":391,"author":{"gitId":"insafhere"},"content":"* View all modules taken : `view all`","lastModifiedDate":"2022-11-05"},{"lineNumber":392,"author":{"gitId":"insafhere"},"content":"* Clears modules in a semesters : `clear s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-11-05"},{"lineNumber":393,"author":{"gitId":"insafhere"},"content":"* Clears all modules taken : `clear all`","lastModifiedDate":"2022-11-05"},{"lineNumber":394,"author":{"gitId":"insafhere"},"content":"* Calculate MCs taken : `mcs s/YEAR_NUMBER_SEMESTER_NUMBER`","lastModifiedDate":"2022-11-05"},{"lineNumber":395,"author":{"gitId":"insafhere"},"content":"* Finds module information : `find \u003cKEYWORD\u003e`","lastModifiedDate":"2022-11-05"},{"lineNumber":396,"author":{"gitId":"insafhere"},"content":"* Checks for SEP/NOC program eligibility : `check \u003cPROGRAM\u003e`","lastModifiedDate":"2022-11-05"},{"lineNumber":397,"author":{"gitId":"insafhere"},"content":"* Overview of your Plan (MCs, CAP, Eligibility) : `overview`","lastModifiedDate":"2022-11-05"},{"lineNumber":398,"author":{"gitId":"insafhere"},"content":"* Exits the App : `exit`","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"insafhere":261,"Brandon-OS":34,"ishitamandal06":8,"-":30,"Zhai-Yuxin":65}},{"path":"docs/diagrams/AddUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Add","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Add: new Add(content)","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Add","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Add","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Add","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Add","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Add: c.execute(moduleList)","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Add","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"Add -\u003e ModuleList: add(modToAdd)","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Add","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"ModuleList -\u003e ModuleList: checkRepetition(modToAdd)","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"return isRepeat: boolean","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"ModuleList -\u003e UI: printAddMessage(mod_info)","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Zhai-Yuxin":30}},{"path":"docs/diagrams/CheckUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Check","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Check: new Check()","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Check","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Check","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Check","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Check","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Check: c.execute(moduleList)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Check","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"Check -\u003e Check: eligibility","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Check","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"return eligible: boolean","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"Check -\u003e UI: printCheckMessage()","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Check","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Zhai-Yuxin":28}},{"path":"docs/diagrams/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brandon-OS"},"content":"@startuml General Class Diagram","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Brandon-OS"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"Brandon-OS"},"content":"hide circle","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Brandon-OS"},"content":"class Command","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"class Add","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"class Delete","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"class Exit","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"class Mcs","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"class View","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Brandon-OS"},"content":"class ModuleList","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"class Module","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Brandon-OS"},"content":"class Command {","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Brandon-OS"},"content":"Command()","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Brandon-OS"},"content":"checkExit(): boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Brandon-OS"},"content":"class Module {","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Brandon-OS"},"content":"course: String","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Brandon-OS"},"content":"semesterTaken: String","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Brandon-OS"},"content":"grade: String","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Brandon-OS"},"content":"mcs: int","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"Brandon-OS"},"content":"Module(course: String, semesterTaken: String, grade: String, mcs: int)","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Brandon-OS"},"content":"toString(): String","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Brandon-OS"},"content":"class Add {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Brandon-OS"},"content":"mod: Module","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Brandon-OS"},"content":"addition(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Brandon-OS"},"content":"extractingContent(): String","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Brandon-OS"},"content":"positions(): int","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Brandon-OS"},"content":"class Delete {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Brandon-OS"},"content":"modCode: String","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Brandon-OS"},"content":"Delete(input: String)","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Brandon-OS"},"content":"setModCode(): String","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Brandon-OS"},"content":"positions(): int[]","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Brandon-OS"},"content":"class Exit {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Brandon-OS"},"content":"checkExit(): boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Brandon-OS"},"content":"class Mcs {","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Brandon-OS"},"content":"Mcs(input: String)","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Brandon-OS"},"content":"setSem(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Brandon-OS"},"content":"positions(): int[]","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Brandon-OS"},"content":"class View {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Brandon-OS"},"content":"View(input: String)","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Brandon-OS"},"content":"setSem(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Brandon-OS"},"content":"class Check {","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Brandon-OS"},"content":"type: String","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Brandon-OS"},"content":"Check(input: String)","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Brandon-OS"},"content":"findCurrentSemester: int","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Brandon-OS"},"content":"checkNOC: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Brandon-OS"},"content":"checkNOCSem: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Brandon-OS"},"content":"checkNOCMc: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Brandon-OS"},"content":"checkSEP: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Brandon-OS"},"content":"checkSEPCAP: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Brandon-OS"},"content":"checkSEPSem: boolean","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Brandon-OS"},"content":"convertSem: int","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Brandon-OS"},"content":"convertCAP: double","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Brandon-OS"},"content":"class Help {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Brandon-OS"},"content":"message: String","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Brandon-OS"},"content":"Help()","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Brandon-OS"},"content":"execute: void","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Brandon-OS"},"content":"class ModuleList {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Brandon-OS"},"content":"modules: ArrayList","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Brandon-OS"},"content":"viewCount: int","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Brandon-OS"},"content":"mcsCount: int","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Brandon-OS"},"content":"add(Module): void","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Brandon-OS"},"content":"delete(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Brandon-OS"},"content":"view(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Brandon-OS"},"content":"mc(): void","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-- Add : execute","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-- Delete : execute","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-u- Exit : execute","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-- Mcs : execute","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-u- View : execute","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-l- Check: execute","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Brandon-OS"},"content":"Command \u003c|-u- Help: execute","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Brandon-OS"},"content":"Module \u003c-- Add","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Brandon-OS"},"content":"Command -\u003e ModuleList","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Brandon-OS"},"content":"ModuleList -\u003e \"0..*\" Module : add","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Brandon-OS"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"Brandon-OS":106}},{"path":"docs/diagrams/DeleteUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Delete","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Delete: new Delete(content)","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Delete: c.execute(moduleList)","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"Delete -\u003e ModuleList: Delete(modCodeToDelete)","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Delete","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"ModuleList -\u003e ModuleList: check mod.getSemesterTaken().matches(semester)","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"return mcsCount: integer","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"ModuleList -\u003e UI: printDeleteMessage(mod_info)","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ishitamandal06":2,"Zhai-Yuxin":28}},{"path":"docs/diagrams/ExitUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Exit: new Exit()","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Exit: c.execute(moduleList)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"Exit -\u003e UI: printExitMessage()","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Exit","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Duke","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Zhai-Yuxin":26}},{"path":"docs/diagrams/FindUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Find","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Find: new Find(content)","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Find","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Find","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Find","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Find","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Find: c.execute(moduleList)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Find","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"Find -\u003e ModuleList: find(content)","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Find","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"ModuleList -\u003e ModuleList: findMatch(content)","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"return match: boolean","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"ModuleList -\u003e UI: printFindMessage(mods)","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Zhai-Yuxin":30}},{"path":"docs/diagrams/GeneralClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brandon-OS"},"content":"@startuml General Class Diagram","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Brandon-OS"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"hide circle","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Brandon-OS"},"content":"class Duke","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"class Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"class UI","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"class Command","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"class ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"class Module","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"class Duke {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"moduleList: ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Brandon-OS"},"content":"main(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Brandon-OS"},"content":"run(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Brandon-OS"},"content":"class Parser {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Brandon-OS"},"content":"parse(): Command","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Brandon-OS"},"content":"specificCase(): Command","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Brandon-OS"},"content":"class UI {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Brandon-OS"},"content":"getInput(): String","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Brandon-OS"},"content":"class Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Brandon-OS"},"content":"Command()","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Brandon-OS"},"content":"execute(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Brandon-OS"},"content":"checkExit(): boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Brandon-OS"},"content":"class Module {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Brandon-OS"},"content":"course: String","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Brandon-OS"},"content":"semesterTaken: String","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Brandon-OS"},"content":"grade: String","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Brandon-OS"},"content":"mcs: int","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Brandon-OS"},"content":"Module(course: String, semesterTaken: String, grade: String, mcs: int)","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Brandon-OS"},"content":"toString(): String","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Brandon-OS"},"content":"class ModuleList {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Brandon-OS"},"content":"modules: ArrayList","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Brandon-OS"},"content":"viewCount: int","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Brandon-OS"},"content":"mcsCount: int","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Brandon-OS"},"content":"add(Module): void","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Brandon-OS"},"content":"delete(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Brandon-OS"},"content":"view(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Brandon-OS"},"content":"mc(): void","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Brandon-OS"},"content":"Duke --\u003e \"1\" ModuleList","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Brandon-OS"},"content":"Duke -\u003e UI","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Brandon-OS"},"content":"Duke -\u003e Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Brandon-OS"},"content":"ModuleList -\u003e UI","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"Brandon-OS"},"content":"Command --\u003e ModuleList","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Brandon-OS"},"content":"ModuleList -l-\u003e \"0..*\" Module : add","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Brandon-OS"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Brandon-OS":60,"ishitamandal06":1}},{"path":"docs/diagrams/HelpUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Duke","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"create Help","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"Parser -\u003e Help: new Help()","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Help","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Help","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Help","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"return c: Help","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Parser","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Duke -\u003e Help: c.execute(moduleList)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"activate Help","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"Help -\u003e UI: printHelpMessage(Msg)","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate Help","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"activate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"deactivate UI","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Zhai-Yuxin":25}},{"path":"docs/diagrams/McsUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"activate Duke","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"activate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"activate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"create Mcs","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"Parser -\u003e Mcs: new Mcs(content)","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"activate Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"return c: Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"return c: Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"return c: Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"deactivate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"Duke -\u003e Mcs: c.execute(moduleList)","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"activate Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"Mcs -\u003e ModuleList: mc(semester)","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"deactivate Mcs","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"ModuleList -\u003e ModuleList: check mod.getSemesterTaken().matches(semester)","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"return mcsCount: integer","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"ModuleList -\u003e UI: mcMessage(semester, mcsCount)","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"activate UI","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"deactivate UI","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"ishitamandal06":28,"Zhai-Yuxin":1}},{"path":"docs/diagrams/viewUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"activate Duke","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"[-\u003e Duke: User input","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"Duke -\u003e Parser: parse(input)","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"activate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"Parser -\u003e Parser: specificCase(commandWord, content)","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"insafhere"},"content":"activate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"create View","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"insafhere"},"content":"Parser -\u003e View: new View(content)","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"activate View","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"return c: View","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"return c: View","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"return c: View","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"deactivate Parser","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"Duke -\u003e View: c.execute(moduleList)","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"activate View","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"View -\u003e ModuleList: View(semester)","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"insafhere"},"content":"deactivate View","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"ModuleList -\u003e ModuleList: mod.getSemesterTaken().matches(semester)","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"return matchingModules: ArrayList\u003cModule\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"ModuleList -\u003e UI: printResponse(semester, matchingModules)","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"activate UI","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"deactivate UI","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"insafhere"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"insafhere":28,"Zhai-Yuxin":1}},{"path":"docs/team/Ishita-Mandal.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"### Overview","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"PlanIt is a Command Line Interface (CLI) based application to help School of Computing students to plan their modules and credits every semester.","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"They can also check if they are eligible for NOC or SEP using this application.","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"### Summary of Contributions","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"Code contributed:","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"Enhancement implemented:","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"Contributions to UG:","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"Contributions to DG:","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"Contributions to team-based tasks:","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"Review/Mentoring contributions:","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"Contributions beyond the project team:","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"ishitamandal06":21}},{"path":"docs/team/brandon-os.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brandon-OS"},"content":"### Overview","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"Brandon-OS"},"content":"PlanIt is a Command Line Interface (CLI) based application to help School of Computing students to plan their modules and credits every semester.","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"They can also check if they are eligible for NOC or SEP using this application.","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"### Summary of Contributions","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"Code contributed:","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"Enhancement implemented:","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"Contributions to UG:","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"Worked together with team for UG descriptions .","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"Brandon-OS"},"content":"Added one question and answer for FAQ.  ","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"Brandon-OS"},"content":"Contributions to DG:","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"Brandon-OS"},"content":"Creation of Main Class Diagram","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"Brandon-OS"},"content":"Contributions to team-based tasks:","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"Brandon-OS"},"content":"Review/Mentoring contributions:","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"Brandon-OS"},"content":"Contributions beyond the project team:","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"Brandon-OS":24}},{"path":"docs/team/zhai-yuxin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"### Overview","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"PlanIt is a Command Line Interface (CLI) based application to help School of Computing students to plan their modules and credits every semester. ","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"They can also check if they are eligible for NOC or SEP using this application.","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"### Summary of Contributions","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"Code contributed: [code dashboard](https://nus-cs2113-ay2223s1.github.io/tp-dashboard/?search\u003dzhai-yuxin\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"Enhancement implemented:","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"- Add, exit and help feature from scratch","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"- Part of view, check, delete, find features","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"- Improvements to the code logic flow under parser, modulelist, ui and exceptions","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"- Code improvements to the rest of the comments","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"- Addition of exceptions, tests, java documentations","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"- Resolving bugs","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"Contributions to UG: ","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"- Introduction","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"- Updates to features and their examples","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"Contributions to DG: ","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"- Text for add feature","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"- All sequence diagrams","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"Contributions to team-based tasks: ","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"- Initial code skeletal as a group effort","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"- Starting and managing most of the issues in GitHub","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"Review/Mentoring contributions: ","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"- Communication and discussion between group members are mostly done through telegram other than zoom / face-to-face meet-ups.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"Contributions beyond the project team: ","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"- [bugs found in PED](https://github.com/Zhai-Yuxin/ped/issues)","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"- [Review on DG - CurrencyManager](https://github.com/nus-cs2113-AY2223S1/tp/pull/49)","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"- [Review on DG - Upcycle](https://github.com/nus-cs2113-AY2223S1/tp/pull/3)","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"Zhai-Yuxin":36}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"    static ModuleList modulelist;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"    static String filePath \u003d \"data.txt\";","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"        run();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"     * First initialize storage, and read from storage for past inputs.","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"     * Followed by while loop to ask for user inputs and its corresponding execution actions.","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"    public static void run() throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"            modulelist \u003d new ModuleList(storage.load());","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"        } catch (FileNotFoundException | InvalidInputFormatException | InvalidInputContentException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"            UI.fileLoadingErrorMessage();","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"            modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"        UI.helloMessage();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"        while (!isExit) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"            String input \u003d UI.getInput();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.printSeparationLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"                c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"                isExit \u003d c.checkExit();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.printSeparationLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"            storage.save();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"        storage.save();","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"insafhere":3,"ishitamandal06":26,"-":8,"Zhai-Yuxin":10}},{"path":"src/main/java/seedu/duke/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"public class Module {","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String course;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String semesterTaken;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String grade;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"    private int mcs;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"     * Contructor to initialize the class variables of Module class","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"     * @param course the course taken or module code","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"     * @param semesterTaken the year and semester in which the course was taken","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"     * @param grade the grade received in the module","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"     * @param mcs the number of mcs of the module","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    public Module(String course, String semesterTaken, String grade, int mcs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"        this.course \u003d course;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"        this.semesterTaken \u003d semesterTaken;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"        this.mcs \u003d mcs;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"        String moduleInformation \u003d this.course + \" \" + this.semesterTaken + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"                + this.grade + \" \" + this.mcs;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Brandon-OS"},"content":"        return moduleInformation;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"    public String getCourse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        return this.course;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"    public String getSemesterTaken() {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"        return this.semesterTaken;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"    public String getGrade() {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"        return this.grade;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int getMcs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Zhai-Yuxin"},"content":"        return this.mcs;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ishitamandal06":24,"Brandon-OS":1,"Zhai-Yuxin":21}},{"path":"src/main/java/seedu/duke/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"public class ModuleList {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"    public static ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"    public static int viewCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"    public static int mcsCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"    private static final DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"     * Contructor of ModuleList class to initialize an object of class moduleList","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"    public ModuleList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"     * Contructor of ModuleList class to initialize an object of class moduleList","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"     * @param modules array of modules. Format : ArrayList\u003cModule\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"    public ModuleList(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"insafhere"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"     * Constructor to load the moduleList with input from file","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"     * @param fileReader Scanner input loaded from the file","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception thrown when input is invalid","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception thrown when input content is empty","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"    public ModuleList(Scanner fileReader) throws InvalidInputFormatException, InvalidInputContentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"            String line \u003d fileReader.nextLine();","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"            Module module \u003d Parser.parseFileInput(line);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"            add(module, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     * Function to add a module to the moduleList if it does not already exist","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"     * @param mod The module to be added to the list","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"     * @param isFromFile to check if the add command came from a module previously loaded in file. This decides whether to display add message or not","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"    public void add(Module mod, boolean isFromFile) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isRepeat \u003d checkRepetition(mod);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isRepeat) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.repetitionMessage(mod.getCourse());","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Zhai-Yuxin"},"content":"            int before \u003d modules.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"Brandon-OS"},"content":"            modules.add(mod);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"            if (!isFromFile) {","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"Brandon-OS"},"content":"                UI.addMessage(mod.getCourse(), mod.getSemesterTaken(), mod.getGrade());","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Zhai-Yuxin"},"content":"            int after \u003d modules.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"Zhai-Yuxin"},"content":"            try {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"Zhai-Yuxin"},"content":"                assert before + 1 \u003d\u003d after : \"module list size should be increased by 1 after add\";","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"Zhai-Yuxin"},"content":"            } catch (AssertionError e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"Zhai-Yuxin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"Zhai-Yuxin"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"     * function to check if a given module already exists in the moduleList","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"     * @param mod the module that needs to be searched for in the moduleList","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"     * @return true if the module already exists. False if it does not. Format: boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkRepetition(Module mod) {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Zhai-Yuxin"},"content":"        for (Module m : modules) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Zhai-Yuxin"},"content":"            if (m.getCourse().matches(mod.getCourse())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Zhai-Yuxin"},"content":"                return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Zhai-Yuxin"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Zhai-Yuxin"},"content":"        return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"     * function to delete a module from the moduleList. If the module is not found, an appropriate message is displayed","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"     * @param modCode the module which has to be deleted from the moduleList.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void delete(String modCode) {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Brandon-OS"},"content":"        int indexCounter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Zhai-Yuxin"},"content":"            if (mod.getCourse().matches(modCode)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Zhai-Yuxin"},"content":"                int before \u003d modules.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"Brandon-OS"},"content":"                modules.remove(indexCounter);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Brandon-OS"},"content":"                UI.deleteMessage(modCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Zhai-Yuxin"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Zhai-Yuxin"},"content":"                int after \u003d modules.size();","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"Zhai-Yuxin"},"content":"                try {","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"Zhai-Yuxin"},"content":"                    assert before \u003d\u003d after + 1 : \"module list size should be decreased by 1 after delete\";","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"Zhai-Yuxin"},"content":"                } catch (AssertionError e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"Zhai-Yuxin"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"Zhai-Yuxin"},"content":"                }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"Zhai-Yuxin"},"content":"                break;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Brandon-OS"},"content":"            indexCounter +\u003d 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (!isFound) {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.notFoundDeletionMessage(modCode);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"ishitamandal06"},"content":"     * Function to find a list of all modules taken in a particular semester","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"ishitamandal06"},"content":"     * The function then calls the printResponse() method to print the appropriate response message","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester The semester for which the modules need to be printed","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void view(String semester) {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (semester.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"Zhai-Yuxin"},"content":"            viewAll();","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"Zhai-Yuxin"},"content":"            ArrayList\u003cModule\u003e matchingModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"            viewCount \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Brandon-OS"},"content":"            for (Module mod : modules) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Zhai-Yuxin"},"content":"                if (mod.getSemesterTaken().matches(semester)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Brandon-OS"},"content":"                    matchingModules.add(mod);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"insafhere"},"content":"                    viewCount++;  // increments the count for this particular semester (For JUnit Purpose)","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Brandon-OS"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Brandon-OS"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Zhai-Yuxin"},"content":"            printResponse(semester, matchingModules);","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":134,"author":{"gitId":"Zhai-Yuxin"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"Zhai-Yuxin"},"content":"     * Function to find lists of all modules taken in every semester.","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"insafhere"},"content":"     * If there is no modules in moduleList, will print no modules found message","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"Zhai-Yuxin"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":138,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void viewAll() {","lastModifiedDate":"2022-11-04"},{"lineNumber":139,"author":{"gitId":"Zhai-Yuxin"},"content":"        for (int i \u003d 1; i \u003c\u003d 6; i++) {","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"Zhai-Yuxin"},"content":"            for (int j \u003d 1; j \u003c\u003d 2; j++) {","lastModifiedDate":"2022-11-04"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"                ArrayList\u003cModule\u003e matchingModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-04"},{"lineNumber":142,"author":{"gitId":"Zhai-Yuxin"},"content":"                String sem \u003d \"Y\" + i + \"S\" + j;","lastModifiedDate":"2022-11-04"},{"lineNumber":143,"author":{"gitId":"Zhai-Yuxin"},"content":"                for (Module mod : modules) {","lastModifiedDate":"2022-11-04"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"                    if (mod.getSemesterTaken().matches(sem)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":145,"author":{"gitId":"Zhai-Yuxin"},"content":"                        matchingModules.add(mod);","lastModifiedDate":"2022-11-04"},{"lineNumber":146,"author":{"gitId":"Zhai-Yuxin"},"content":"                    }","lastModifiedDate":"2022-11-04"},{"lineNumber":147,"author":{"gitId":"Zhai-Yuxin"},"content":"                }","lastModifiedDate":"2022-11-04"},{"lineNumber":148,"author":{"gitId":"Zhai-Yuxin"},"content":"                if (!matchingModules.isEmpty()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":149,"author":{"gitId":"Zhai-Yuxin"},"content":"                    printResponse(sem, matchingModules);","lastModifiedDate":"2022-11-04"},{"lineNumber":150,"author":{"gitId":"Zhai-Yuxin"},"content":"                }","lastModifiedDate":"2022-11-04"},{"lineNumber":151,"author":{"gitId":"Zhai-Yuxin"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":152,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":153,"author":{"gitId":"insafhere"},"content":"        if(modules.isEmpty()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":154,"author":{"gitId":"insafhere"},"content":"            UI.noModulesFoundMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":155,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":156,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":157,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":158,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":159,"author":{"gitId":"insafhere"},"content":"     * Function to clear modules in a particular or all semester","lastModifiedDate":"2022-11-04"},{"lineNumber":160,"author":{"gitId":"insafhere"},"content":"     * Prints modules have been clear message if there is modules in semester","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"insafhere"},"content":"     * Prints no modules found message if there is no modules in module list","lastModifiedDate":"2022-11-05"},{"lineNumber":162,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":163,"author":{"gitId":"insafhere"},"content":"    public void clear(String semester) {","lastModifiedDate":"2022-11-04"},{"lineNumber":164,"author":{"gitId":"insafhere"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2022-11-04"},{"lineNumber":165,"author":{"gitId":"insafhere"},"content":"        if (semester.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":166,"author":{"gitId":"insafhere"},"content":"            isFound \u003d true;","lastModifiedDate":"2022-11-04"},{"lineNumber":167,"author":{"gitId":"insafhere"},"content":"            clearAll();","lastModifiedDate":"2022-11-04"},{"lineNumber":168,"author":{"gitId":"insafhere"},"content":"            UI.allClearedMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":169,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":170,"author":{"gitId":"insafhere"},"content":"        } else {","lastModifiedDate":"2022-11-04"},{"lineNumber":171,"author":{"gitId":"insafhere"},"content":"            ArrayList\u003cModule\u003e updatedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-04"},{"lineNumber":172,"author":{"gitId":"insafhere"},"content":"            for (Module mod : modules) {","lastModifiedDate":"2022-11-04"},{"lineNumber":173,"author":{"gitId":"insafhere"},"content":"                if (mod.getSemesterTaken().equals(semester)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"insafhere"},"content":"                    isFound \u003d true;","lastModifiedDate":"2022-11-04"},{"lineNumber":175,"author":{"gitId":"insafhere"},"content":"                } else {","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"insafhere"},"content":"                    updatedModules.add(mod);","lastModifiedDate":"2022-11-04"},{"lineNumber":177,"author":{"gitId":"insafhere"},"content":"                }","lastModifiedDate":"2022-11-04"},{"lineNumber":178,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":179,"author":{"gitId":"insafhere"},"content":"            modules \u003d updatedModules;","lastModifiedDate":"2022-11-04"},{"lineNumber":180,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":182,"author":{"gitId":"insafhere"},"content":"        if (!isFound) {","lastModifiedDate":"2022-11-04"},{"lineNumber":183,"author":{"gitId":"insafhere"},"content":"            UI.notFoundClearMessage(semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":184,"author":{"gitId":"insafhere"},"content":"        } else if (!semester.equals(\"all\")) {","lastModifiedDate":"2022-11-05"},{"lineNumber":185,"author":{"gitId":"insafhere"},"content":"            UI.semesterClearedMessage(semester);","lastModifiedDate":"2022-11-05"},{"lineNumber":186,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":187,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":188,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":189,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":190,"author":{"gitId":"insafhere"},"content":"     * Function to generate an empty module list","lastModifiedDate":"2022-11-05"},{"lineNumber":191,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":192,"author":{"gitId":"insafhere"},"content":"    public void clearAll() {","lastModifiedDate":"2022-11-04"},{"lineNumber":193,"author":{"gitId":"insafhere"},"content":"        modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-04"},{"lineNumber":194,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":195,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"ishitamandal06"},"content":"     * Function to print the response for a command to print a list of modules in a particular semester","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"ishitamandal06"},"content":"     * If the list is empty, an empty list message is displayed. Otherwise, the list is displayed.","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester Semester for which the list of modules needs to be displayed","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"ishitamandal06"},"content":"     * @param matchingModules a Collection of all modules taken in the particular semester that need to be printed","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"Zhai-Yuxin"},"content":"    private void printResponse(String semester, ArrayList\u003cModule\u003e matchingModules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (matchingModules.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.emptyListMessage(semester);","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"Brandon-OS"},"content":"            UI.listMessage(matchingModules, semester);","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"ishitamandal06"},"content":"     * Function to calculate the number of Mcs in a particular semester and print it with appropriate message.","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester the semester for which the mcs need to be calculated and printed","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void mc(String semester) {","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"insafhere"},"content":"        mcsCount \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"Zhai-Yuxin"},"content":"            if (mod.getSemesterTaken().matches(semester)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Zhai-Yuxin"},"content":"                mcsCount +\u003d mod.getMcs();","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Brandon-OS"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"insafhere"},"content":"        UI.mcMessage(semester, mcsCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"insafhere"},"content":"     * Function to find total Graded Mcs (Not S/U/-) in plan","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"insafhere"},"content":"     * @return totalGradedMc Returns total graded Mcs taken in whole plan","lastModifiedDate":"2022-11-05"},{"lineNumber":227,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":228,"author":{"gitId":"insafhere"},"content":"    public Integer totalGradedMcs() {","lastModifiedDate":"2022-11-05"},{"lineNumber":229,"author":{"gitId":"insafhere"},"content":"        Integer totalGradedMc \u003d 0;","lastModifiedDate":"2022-11-05"},{"lineNumber":230,"author":{"gitId":"insafhere"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":231,"author":{"gitId":"insafhere"},"content":"            if (!(mod.getGrade().equals(\"-\") || mod.getGrade().equals(\"S\") || mod.getGrade().equals(\"U\"))) {","lastModifiedDate":"2022-11-05"},{"lineNumber":232,"author":{"gitId":"insafhere"},"content":"                totalGradedMc +\u003d mod.getMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":233,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":235,"author":{"gitId":"insafhere"},"content":"        return totalGradedMc;","lastModifiedDate":"2022-11-05"},{"lineNumber":236,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":237,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":238,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":239,"author":{"gitId":"insafhere"},"content":"     * Function to find total Mcs taken in plan","lastModifiedDate":"2022-11-05"},{"lineNumber":240,"author":{"gitId":"insafhere"},"content":"     * @return totalMcs Returns total Mcs taken in whole plan","lastModifiedDate":"2022-11-05"},{"lineNumber":241,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":242,"author":{"gitId":"insafhere"},"content":"    public Integer totalMcs() {","lastModifiedDate":"2022-11-05"},{"lineNumber":243,"author":{"gitId":"ishitamandal06"},"content":"        int totalMcs \u003d 0;","lastModifiedDate":"2022-11-05"},{"lineNumber":244,"author":{"gitId":"insafhere"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"insafhere"},"content":"            totalMcs +\u003d mod.getMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":246,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":247,"author":{"gitId":"insafhere"},"content":"        return totalMcs;","lastModifiedDate":"2022-11-05"},{"lineNumber":248,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":249,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":250,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":251,"author":{"gitId":"insafhere"},"content":"     * Function to find total S/U Module Mcs in plan","lastModifiedDate":"2022-11-05"},{"lineNumber":252,"author":{"gitId":"insafhere"},"content":"     * @return totalSuMcs Returns total S/U Module Mcs taken in whole plan","lastModifiedDate":"2022-11-05"},{"lineNumber":253,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":254,"author":{"gitId":"insafhere"},"content":"    public Integer totalSuMcs() {","lastModifiedDate":"2022-11-05"},{"lineNumber":255,"author":{"gitId":"ishitamandal06"},"content":"        int totalSuMcs \u003d 0;","lastModifiedDate":"2022-11-05"},{"lineNumber":256,"author":{"gitId":"insafhere"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":257,"author":{"gitId":"insafhere"},"content":"            if (mod.getGrade().equals(\"S\") || mod.getGrade().equals(\"U\")) {","lastModifiedDate":"2022-11-05"},{"lineNumber":258,"author":{"gitId":"insafhere"},"content":"                totalSuMcs +\u003d mod.getMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":259,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":260,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":261,"author":{"gitId":"insafhere"},"content":"        return totalSuMcs;","lastModifiedDate":"2022-11-05"},{"lineNumber":262,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":263,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":264,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":265,"author":{"gitId":"insafhere"},"content":"     * Function to find total ungraded Mcs (-) in plan","lastModifiedDate":"2022-11-05"},{"lineNumber":266,"author":{"gitId":"insafhere"},"content":"     * @return totalUngradedMcs Returns total ungraded Mcs taken in whole plan","lastModifiedDate":"2022-11-05"},{"lineNumber":267,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":268,"author":{"gitId":"insafhere"},"content":"    public Integer totalUngradedMcs() {","lastModifiedDate":"2022-11-05"},{"lineNumber":269,"author":{"gitId":"insafhere"},"content":"        Integer totalUngradedMcs \u003d 0;","lastModifiedDate":"2022-11-05"},{"lineNumber":270,"author":{"gitId":"insafhere"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":271,"author":{"gitId":"insafhere"},"content":"            if (mod.getGrade().equals(\"-\")) {","lastModifiedDate":"2022-11-05"},{"lineNumber":272,"author":{"gitId":"insafhere"},"content":"                totalUngradedMcs +\u003d mod.getMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":273,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":274,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":275,"author":{"gitId":"insafhere"},"content":"        return totalUngradedMcs;","lastModifiedDate":"2022-11-05"},{"lineNumber":276,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":277,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":278,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":279,"author":{"gitId":"insafhere"},"content":"     * Function to help compute total MCs needed to graduate","lastModifiedDate":"2022-11-05"},{"lineNumber":280,"author":{"gitId":"insafhere"},"content":"     * @return 160 minus the total MCs taken and minus ungraded Mcs (-)","lastModifiedDate":"2022-11-05"},{"lineNumber":281,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":282,"author":{"gitId":"ishitamandal06"},"content":"    public Integer mcsForGraduation() {","lastModifiedDate":"2022-11-05"},{"lineNumber":283,"author":{"gitId":"ishitamandal06"},"content":"        Integer mcsNeededForGraduation \u003d 160;","lastModifiedDate":"2022-11-05"},{"lineNumber":284,"author":{"gitId":"ishitamandal06"},"content":"        return  mcsNeededForGraduation - totalMcs() - totalUngradedMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":285,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":286,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":287,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":288,"author":{"gitId":"insafhere"},"content":"     * Function to Calculates CAP","lastModifiedDate":"2022-11-05"},{"lineNumber":289,"author":{"gitId":"insafhere"},"content":"     * @return CAP based on modules in plan","lastModifiedDate":"2022-11-05"},{"lineNumber":290,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":291,"author":{"gitId":"insafhere"},"content":"    public double calculateCap() {","lastModifiedDate":"2022-11-05"},{"lineNumber":292,"author":{"gitId":"insafhere"},"content":"        double numerator \u003d 0.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":293,"author":{"gitId":"insafhere"},"content":"        for (Module mod: modules) {","lastModifiedDate":"2022-11-05"},{"lineNumber":294,"author":{"gitId":"insafhere"},"content":"            numerator +\u003d gradePoint(mod.getGrade()) * mod.getMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":295,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":296,"author":{"gitId":"insafhere"},"content":"        return numerator / totalGradedMcs();","lastModifiedDate":"2022-11-05"},{"lineNumber":297,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":298,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":299,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":300,"author":{"gitId":"insafhere"},"content":"     * Function to convert a grade into grade point","lastModifiedDate":"2022-11-05"},{"lineNumber":301,"author":{"gitId":"insafhere"},"content":"     * @param grade The letter grade of a module. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":302,"author":{"gitId":"insafhere"},"content":"     * @return The equivalent gradePoint of the grade","lastModifiedDate":"2022-11-05"},{"lineNumber":303,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":304,"author":{"gitId":"insafhere"},"content":"    public double gradePoint(String grade) {","lastModifiedDate":"2022-11-05"},{"lineNumber":305,"author":{"gitId":"insafhere"},"content":"        switch (grade) {","lastModifiedDate":"2022-11-05"},{"lineNumber":306,"author":{"gitId":"insafhere"},"content":"            case \"A+\":","lastModifiedDate":"2022-11-05"},{"lineNumber":307,"author":{"gitId":"insafhere"},"content":"            case \"A\":","lastModifiedDate":"2022-11-05"},{"lineNumber":308,"author":{"gitId":"insafhere"},"content":"                return 5.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":309,"author":{"gitId":"insafhere"},"content":"            case \"A-\":","lastModifiedDate":"2022-11-05"},{"lineNumber":310,"author":{"gitId":"insafhere"},"content":"                return 4.5;","lastModifiedDate":"2022-11-05"},{"lineNumber":311,"author":{"gitId":"insafhere"},"content":"            case \"B+\":","lastModifiedDate":"2022-11-05"},{"lineNumber":312,"author":{"gitId":"insafhere"},"content":"                return 4.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":313,"author":{"gitId":"insafhere"},"content":"            case \"B\":","lastModifiedDate":"2022-11-05"},{"lineNumber":314,"author":{"gitId":"insafhere"},"content":"                return 3.5;","lastModifiedDate":"2022-11-05"},{"lineNumber":315,"author":{"gitId":"insafhere"},"content":"            case \"B-\":","lastModifiedDate":"2022-11-05"},{"lineNumber":316,"author":{"gitId":"insafhere"},"content":"                return 3.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":317,"author":{"gitId":"insafhere"},"content":"            case \"C+\":","lastModifiedDate":"2022-11-05"},{"lineNumber":318,"author":{"gitId":"insafhere"},"content":"                return 2.5;","lastModifiedDate":"2022-11-05"},{"lineNumber":319,"author":{"gitId":"insafhere"},"content":"            case \"C\":","lastModifiedDate":"2022-11-05"},{"lineNumber":320,"author":{"gitId":"insafhere"},"content":"                return 2.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":321,"author":{"gitId":"insafhere"},"content":"            case \"D+\":","lastModifiedDate":"2022-11-05"},{"lineNumber":322,"author":{"gitId":"insafhere"},"content":"                return 1.5;","lastModifiedDate":"2022-11-05"},{"lineNumber":323,"author":{"gitId":"insafhere"},"content":"            case \"D\":","lastModifiedDate":"2022-11-05"},{"lineNumber":324,"author":{"gitId":"insafhere"},"content":"                return 1.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":325,"author":{"gitId":"insafhere"},"content":"            default:","lastModifiedDate":"2022-11-05"},{"lineNumber":326,"author":{"gitId":"insafhere"},"content":"                return 0.0;","lastModifiedDate":"2022-11-05"},{"lineNumber":327,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":328,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":329,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":330,"author":{"gitId":"Zhai-Yuxin"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":331,"author":{"gitId":"Zhai-Yuxin"},"content":"     * For checking whether the module contains the keyword in its fields and return a boolean result.","lastModifiedDate":"2022-10-26"},{"lineNumber":332,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @param keyword the word to search for in existing modules","lastModifiedDate":"2022-10-26"},{"lineNumber":333,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @param mod the existing module to be checked","lastModifiedDate":"2022-10-26"},{"lineNumber":334,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @return true if mod contains the keyword specified in its field","lastModifiedDate":"2022-10-26"},{"lineNumber":335,"author":{"gitId":"Zhai-Yuxin"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":336,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean findMatch(String keyword, Module mod) {","lastModifiedDate":"2022-11-05"},{"lineNumber":337,"author":{"gitId":"Brandon-OS"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":338,"author":{"gitId":"insafhere"},"content":"            return mod.getCourse().contains(keyword) || mod.getGrade().contains(keyword) ||","lastModifiedDate":"2022-11-02"},{"lineNumber":339,"author":{"gitId":"insafhere"},"content":"                    mod.getSemesterTaken().contains(keyword) || (mod.getMcs() \u003d\u003d Integer.parseInt(keyword));","lastModifiedDate":"2022-11-02"},{"lineNumber":340,"author":{"gitId":"Brandon-OS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":341,"author":{"gitId":"Brandon-OS"},"content":"            return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":342,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":343,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":344,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":345,"author":{"gitId":"Zhai-Yuxin"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":346,"author":{"gitId":"Zhai-Yuxin"},"content":"     * For checking is there is any existing modules with the keyword specified in its field and print the appropriate message.","lastModifiedDate":"2022-10-26"},{"lineNumber":347,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @param keyword the word to search for in existing modules","lastModifiedDate":"2022-10-26"},{"lineNumber":348,"author":{"gitId":"Zhai-Yuxin"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":349,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void find(String keyword) {","lastModifiedDate":"2022-10-26"},{"lineNumber":350,"author":{"gitId":"ishitamandal06"},"content":"        ArrayList\u003cModule\u003e matchingModules \u003d findMatchingModules(keyword);","lastModifiedDate":"2022-11-05"},{"lineNumber":351,"author":{"gitId":"ishitamandal06"},"content":"        findMsg(matchingModules);","lastModifiedDate":"2022-11-05"},{"lineNumber":352,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":353,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":354,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":355,"author":{"gitId":"insafhere"},"content":"     * Function that helps to fina matching modules based on keyword given","lastModifiedDate":"2022-11-05"},{"lineNumber":356,"author":{"gitId":"insafhere"},"content":"     * @param keyword the word to search for in existing modules","lastModifiedDate":"2022-11-05"},{"lineNumber":357,"author":{"gitId":"insafhere"},"content":"     * @return returns the array list with matching modules","lastModifiedDate":"2022-11-05"},{"lineNumber":358,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":359,"author":{"gitId":"ishitamandal06"},"content":"    public static ArrayList\u003cModule\u003e findMatchingModules(String keyword) {","lastModifiedDate":"2022-11-05"},{"lineNumber":360,"author":{"gitId":"Zhai-Yuxin"},"content":"        ArrayList\u003cModule\u003e matchingModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod: modules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":362,"author":{"gitId":"Zhai-Yuxin"},"content":"            if (findMatch(keyword, mod)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":363,"author":{"gitId":"Brandon-OS"},"content":"                matchingModules.add(mod);","lastModifiedDate":"2022-10-26"},{"lineNumber":364,"author":{"gitId":"Brandon-OS"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":366,"author":{"gitId":"ishitamandal06"},"content":"        return matchingModules;","lastModifiedDate":"2022-11-05"},{"lineNumber":367,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":368,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":369,"author":{"gitId":"Zhai-Yuxin"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":370,"author":{"gitId":"Zhai-Yuxin"},"content":"     * Printing the respective message with respect to the size of the matchingModules array list","lastModifiedDate":"2022-10-26"},{"lineNumber":371,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @param matchingModules the array list of modules containing the keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":372,"author":{"gitId":"Zhai-Yuxin"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":373,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void findMsg(ArrayList\u003cModule\u003e matchingModules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":374,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (matchingModules.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":375,"author":{"gitId":"Zhai-Yuxin"},"content":"            UI.emptyFindMessage();","lastModifiedDate":"2022-10-26"},{"lineNumber":376,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":377,"author":{"gitId":"Brandon-OS"},"content":"            UI.findMessage(matchingModules);","lastModifiedDate":"2022-10-26"},{"lineNumber":378,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":379,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":380,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":381,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":382,"author":{"gitId":"insafhere"},"content":"     * Function to help count number of modules in array list","lastModifiedDate":"2022-11-05"},{"lineNumber":383,"author":{"gitId":"insafhere"},"content":"     * @return Returns total number of Modules in modules Array","lastModifiedDate":"2022-11-05"},{"lineNumber":384,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":385,"author":{"gitId":"insafhere"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-12"},{"lineNumber":386,"author":{"gitId":"insafhere"},"content":"        return modules.size();","lastModifiedDate":"2022-10-12"},{"lineNumber":387,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":388,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":389,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":390,"author":{"gitId":"insafhere"},"content":"     * Function to help get view count","lastModifiedDate":"2022-11-05"},{"lineNumber":391,"author":{"gitId":"insafhere"},"content":"     * @return Returns total number of Modules for the recent View command executed","lastModifiedDate":"2022-11-05"},{"lineNumber":392,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":393,"author":{"gitId":"insafhere"},"content":"    public int getViewCount() {","lastModifiedDate":"2022-10-12"},{"lineNumber":394,"author":{"gitId":"insafhere"},"content":"        return viewCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":395,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":396,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":397,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":398,"author":{"gitId":"insafhere"},"content":"     * Function to help get MC Count","lastModifiedDate":"2022-11-05"},{"lineNumber":399,"author":{"gitId":"insafhere"},"content":"     * @return Returns total number of MCs for the recent mcs command executed","lastModifiedDate":"2022-11-05"},{"lineNumber":400,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":401,"author":{"gitId":"insafhere"},"content":"    public int getMcsCount() {","lastModifiedDate":"2022-10-12"},{"lineNumber":402,"author":{"gitId":"insafhere"},"content":"        return mcsCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":403,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":404,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":405,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":406,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"insafhere":196,"ishitamandal06":78,"Brandon-OS":29,"Zhai-Yuxin":103}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Add;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Check;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Clear;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Delete;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Exit;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Find;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Help;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Mcs;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Overview;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.View;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidCommandWordException;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidGradeException;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidMcException;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidSemesterException;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"public class Parser {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"     * Function to parse the input given by user","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input message given by user in Command Line Interface. Format: String","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"     * @return Command type based on parsed input. Format: Command","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"        String[] splitText \u003d input.split(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"        int length \u003d splitText[0].length();","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"        String content \u003d \" \";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.length() \u003e length) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"            content \u003d input.substring(length + 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"        Command c \u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"            c \u003d specificCase(splitText[0], content);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"            message +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"insafhere"},"content":"        } finally {","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"            System.out.print(message);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Zhai-Yuxin"},"content":"        return c;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"    public static Module parseFileInput(String input) throws InvalidInputFormatException, InvalidInputContentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"        String[] splitText \u003d input.split(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"        String course \u003d splitText[0].substring(2);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"        String semesterTaken \u003d splitText[1].substring(2);","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"        int mcs \u003d Integer.parseInt(splitText[2].substring(3));","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"        String grade \u003d splitText[3].substring(2);","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"        Module module \u003d new Module(course,semesterTaken,grade,mcs);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"        return module;","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"     * Function to determine type of command entered by user","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"     * @param commandWord The first word entered by user in CLI used to determine the type of command. Format: String","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"     * @param input The entire input entered by user in CLI to pass on to other functions for further actions. Format: String","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"     * @return Command type based on parsed input. Format: Either Add, Delete, View, Mcs, or Exit.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidCommandWordException Exception thrown when the command word is invalid","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException Exception thrown when the input format is incorrect","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException Exception thrown when the input content is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static Command specificCase(String commandWord, String input) throws InvalidCommandWordException,","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"            InvalidInputFormatException, InvalidInputContentException, InvalidMcException, InvalidGradeException, InvalidSemesterException, InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"Zhai-Yuxin"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"        case \"add\":","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"            return new Add(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"        case \"delete\":","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"            return new Delete(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"        case \"view\":","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"            return new View(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"insafhere"},"content":"        case \"clear\":","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"insafhere"},"content":"            return new Clear(input);","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"        case \"mcs\":","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"            return new Mcs(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Brandon-OS"},"content":"        case \"find\":","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Brandon-OS"},"content":"            return new Find(input);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Brandon-OS"},"content":"        case \"check\":","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Brandon-OS"},"content":"            return new Check(input);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Zhai-Yuxin"},"content":"        case \"help\":","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"            return new Help();","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"insafhere"},"content":"        case \"overview\":","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"insafhere"},"content":"            return new Overview();","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"        case \"exit\":","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"            return new Exit();","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"        default:","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidCommandWordException();","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"insafhere":9,"ishitamandal06":62,"Brandon-OS":4,"Zhai-Yuxin":22}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"import java.io.File;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"public class Storage {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"    private final String filePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     * Function to format the text before writing to file","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"     * @param module module which has to be formatted.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"     * @return Returns a text with formatted content from module. Format: String","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"    public String formatText(Module module) {","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"        String course \u003d module.getCourse();","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"        String semesterTaken \u003d module.getSemesterTaken();","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        String grade \u003d module.getGrade();","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"        int mcs \u003d module.getMcs();","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"        return \"m/\" + course + \" s/\" + semesterTaken + \" mc/\" + mcs + \" g/\" + grade + \"\\n\";","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"     * Function to load data from the file","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"     * @return returns Scanner object with data loaded from file","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"     * @throws FileNotFoundException Exception thrown when the file does not exist","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    public Scanner load() throws FileNotFoundException {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"            return new Scanner(data);","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"     * Function to save the entire list of modules into the data file","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void save() {","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"            StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"            for (Module module : ModuleList.modules) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"                text.append(formatText(module));","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"            fw.write(text.toString());","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"            fw.close();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"The file does not exist yet!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ishitamandal06":53,"Zhai-Yuxin":8}},{"path":"src/main/java/seedu/duke/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"import seedu.duke.commands.Check;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"import seedu.duke.design.ASCIIArtGenerator;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"public class UI {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static String separationLine \u003d \"----------------------------------------\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"    private static final DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void printSeparationLine() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(separationLine);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"     * Function to get user input.","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @return user input","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"    public static String getInput() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"        return input;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     * Message to be printed in the beginning;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"    public static void helloMessage() throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"        printSeparationLine();","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"insafhere"},"content":"        ASCIIArtGenerator.printTextArt(\"PlanIT!\", ASCIIArtGenerator.ART_SIZE_MEDIUM);","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"        printSeparationLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"Welcome to PlanIT!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Start planning out your 4 years in NUS with us :)\");","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"Zhai-Yuxin"},"content":"        printSeparationLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"To get started, type \u0027help\u0027 to see the list of available commands.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"        printSeparationLine();","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"     * Message to be printed in the end","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"    public static void endMessage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"Thank you for using PlanIT!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"See you again next time!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"     * Message to be printed after adding a module","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Brandon-OS"},"content":"    public static void addMessage(String modCode, String semester, String grade) {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Brandon-OS"},"content":"        System.out.print(modCode + \" has been added to \" + semester);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Brandon-OS"},"content":"        if (grade.matches(\"-\")) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Brandon-OS"},"content":"            System.out.println(\" as incomplete!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Brandon-OS"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Brandon-OS"},"content":"            System.out.println(\" as completed\");","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"     * Message to be printed if an already existing module is being added","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"     * @param modCode the module which is being repeated","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void repetitionMessage(String modCode) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"This \" + modCode + \" module is already in your plan.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"Choose another module to add or delete the one in the plan and add it again.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"     * Function to print message after deleting a mod","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"     * @param modCode the module which has been deleted","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Brandon-OS"},"content":"    public static void deleteMessage(String modCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(modCode + \" has been deleted from your plan\");","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"     * Message to be printed if a module which is trying to be deleted is not found in plan","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"     * @param modCode the module which is to be deleted","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void notFoundDeletionMessage(String modCode) {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"The module \" + modCode + \" is not found in your plan!!\");","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"Please add the module first before you want to delete.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"insafhere"},"content":"     * Message to be printed if a semester which is trying to be deleted is not found in plan","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"insafhere"},"content":"     * @param semester : the semester in which all modules are to be deleted","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"insafhere"},"content":"    public static void notFoundClearMessage(String semester) {","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"No modules found in \" + semester + \"!\");","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Please add the modules to the semester first before you want to clear.\");","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":106,"author":{"gitId":"insafhere"},"content":"     * Message to be printed when all modules have been successfully cleared from plan","lastModifiedDate":"2022-11-04"},{"lineNumber":107,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"insafhere"},"content":"    public static void allClearedMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":109,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Successfully cleared all modules in your plan!\");","lastModifiedDate":"2022-11-04"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":111,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"insafhere"},"content":"     * Message to be printed when modules from a semester have been successfully cleared from plan","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"insafhere"},"content":"    public static void semesterClearedMessage(String semester) {","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Successfully cleared all modules for \" + semester + \".\");","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"     * Message to be printed when there is no modules found in plan","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"insafhere"},"content":"    public static void noModulesFoundMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"0 modules found in your plan!\");","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":127,"author":{"gitId":"ishitamandal06"},"content":"    public static void fileLoadingErrorMessage() {","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Could not find any previous usage.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"ishitamandal06"},"content":"     * Function to print a list of modules in a particular semester","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"ishitamandal06"},"content":"     * @param modules Collection of modules to be printed","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester Semester for which the modules need to be printed","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"Brandon-OS"},"content":"    public static void listMessage(ArrayList\u003cModule\u003e modules, String semester) {","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"These are your module(s) for \" + semester);","lastModifiedDate":"2022-11-02"},{"lineNumber":138,"author":{"gitId":"Brandon-OS"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Brandon-OS"},"content":"            System.out.println(counter + \". \" + mod.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"            counter++;","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"ishitamandal06"},"content":"     * Function to print a message if there are no modules in a particular semester","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester Semester for which the modules need to be printed","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void emptyListMessage(String semester) {","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"There is no module allocated in \" + semester + \"!!\");","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"ishitamandal06"},"content":"     * Function to print message when number of mcs needs to be displayed","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"ishitamandal06"},"content":"     * @param semester Semester for which number of mcs have been calculated","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"ishitamandal06"},"content":"     * @param mcs number of mcs calculated","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"Brandon-OS"},"content":"    public static void mcMessage(String semester, int mcs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"You have \" + mcs + \" mcs for \" + semester);","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"Brandon-OS"},"content":"    public static void findMessage(ArrayList\u003cModule\u003e matchingModules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"These are your matching module(s):\");","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"Brandon-OS"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod: matchingModules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"Brandon-OS"},"content":"            System.out.println(counter + \". \" + mod.toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Zhai-Yuxin"},"content":"            counter++;","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void emptyFindMessage() {","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"There are no existing modules that match your keyword inputted.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"ishitamandal06"},"content":"    public static void nocEligibleMessage() {","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"You are eligible for NOC!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"ishitamandal06"},"content":"    public static void nocIneligibleMessage() {","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Sorry, You are ineligible for NOC.\" + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"These may be possible reasons for ineligibility:\");","lastModifiedDate":"2022-11-02"},{"lineNumber":182,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * You have yet to complete 4 semesters of study\");","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * You are currently in your final academic semester\");","lastModifiedDate":"2022-11-05"},{"lineNumber":184,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * You have yet to obtain more than 70MC\");","lastModifiedDate":"2022-11-05"},{"lineNumber":185,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":186,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"ishitamandal06"},"content":"    public static void sepEligibleMessage() {","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"You are eligible for SEP!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"ishitamandal06"},"content":"    public static void sepIneligibleMessage() {","lastModifiedDate":"2022-11-05"},{"lineNumber":193,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Sorry, You are ineligible for SEP.\" + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"These may be possible reasons for ineligibility:\");","lastModifiedDate":"2022-11-02"},{"lineNumber":195,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * You have yet to complete 2 semesters of study\");","lastModifiedDate":"2022-11-05"},{"lineNumber":196,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * You are currently in your final year\");","lastModifiedDate":"2022-11-05"},{"lineNumber":197,"author":{"gitId":"insafhere"},"content":"        System.out.println(\" * Your CAP is below 3.0\");","lastModifiedDate":"2022-11-05"},{"lineNumber":198,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":199,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":200,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":201,"author":{"gitId":"insafhere"},"content":"    public static void overview(ModuleList moduleList) throws InvalidInputContentException, InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":202,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":203,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Here’s an overview of your Profile:\" + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":204,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Current Semester: \" + new Check().findCurrentSemesterInString() + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":205,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Total MCs completed : \" + moduleList.totalMcs());","lastModifiedDate":"2022-11-05"},{"lineNumber":206,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Total Graded MCs : \" + moduleList.totalGradedMcs());","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Total Ungraded (-) MCs : \" + moduleList.totalUngradedMcs());","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Total S/U MCs : \" + moduleList.totalSuMcs() + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Cumulative Average Point (CAP) : \" + df.format(moduleList.calculateCap()) + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":210,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"* MCs Needed needed for graduation : \" + moduleList.mcsForGraduation() + \"\\n\");","lastModifiedDate":"2022-11-05"},{"lineNumber":211,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Eligibility for NOC : \" + (new Check(\"NOC\").checkNOC() ? \"Yes\" : \"No\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":212,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"* Eligibility for SEP : \" + (new Check(\"SEP\").checkSEP() ? \"Yes\" : \"No\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":213,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":214,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static void helpMessage(String message) {","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(message);","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"insafhere":69,"ishitamandal06":65,"Brandon-OS":37,"Zhai-Yuxin":49}},{"path":"src/main/java/seedu/duke/commands/Add.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.Module;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidCourseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidGradeException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidMcException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidSemesterException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidGradeException.checkGradeFormat;","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidGradeException.checkValidGrade;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidMcException.invalidMc;","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidSemesterNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidYearNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"public class Add extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"    private Module mod;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"     * Contructor of Add class to initialize an object of class Add.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input message to be used to initialize the variables","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception which is thrown if the format of the input is wrong","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception to be thrown if the input content is empty","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidOverallInputException exception to be thrown if any issues with the input","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"insafhere"},"content":"    public Add(String input) throws InvalidInputFormatException, InvalidInputContentException, InvalidMcException, InvalidGradeException, InvalidSemesterException, InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormat(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] indexes \u003d positions(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContent(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"        addition(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     * Function to extract details from input text and create a new module with the details extracted.","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"     * Extracted details include course, semester, mc, and grade.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input entered by the user","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"     * @param indexes an array containing the positions from which the details need to be extracted","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"    private void addition(String input, int[] indexes) throws InvalidOverallInputException {","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"        input \u003d input.toUpperCase();","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"Zhai-Yuxin"},"content":"        String course \u003d extractingContent(input, indexes[0], indexes[1]);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"        String semester \u003d extractingContent(input, indexes[2], indexes[3]);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Zhai-Yuxin"},"content":"        String mcString \u003d extractingContent(input, indexes[4], indexes[5]);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"        String grade \u003d extractingContent(input, indexes[6], indexes[7]);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkOverallExceptionForAdd(course, semester, mcString, grade);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"        int mcInt \u003d Integer.parseInt(mcString);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"insafhere"},"content":"        this.mod \u003d new Module(course, semester, grade, mcInt);","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"     * Method to check for any exception caught due to input (Course, semester, MC, Grade) issues","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"     * @param course Course taken. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"     * @param semester Semester taken. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"     * @param mcString MC in string format. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"     * @param grade Grade received for the module. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidOverallInputException exception to be thrown if any issues with any of the input","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"    private void checkOverallExceptionForAdd(String course, String semester,","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"Zhai-Yuxin"},"content":"                                       String mcString, String grade) throws InvalidOverallInputException {","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"insafhere"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"            checkCourse(course);","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"insafhere"},"content":"            checkYear(semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"            checkMcString(mcString);","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"Zhai-Yuxin"},"content":"            int mcInt \u003d Integer.parseInt(mcString);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"            checkMc(mcInt);","lastModifiedDate":"2022-11-04"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"            checkGrade(grade);","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":93,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":95,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"insafhere"},"content":"        if (!errorMessage.equals(\"\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"insafhere"},"content":"            System.out.println(\"Unable to ADD module due to these issue(s):\");","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"insafhere"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"insafhere"},"content":"            throw new InvalidOverallInputException();","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"     * Function to extract content from startIndex to endIndex out of input","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"     * @param input The input from which the content needs to be extracted. Format: String","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"     * @param startIndex The starting index. Format: int","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"     * @param endIndex The ending index. Format: int","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"ishitamandal06"},"content":"     * @return a string which is a substring (extracted) of input.","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String extractingContent(String input, int startIndex, int endIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Zhai-Yuxin"},"content":"            return input.substring(startIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Zhai-Yuxin"},"content":"            return input.substring(startIndex, endIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if the format of input is correct or not","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception thrown if format of input is incorrect","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormat(String input) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isRight;","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkMod(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkSem(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkMC(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkGrade(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"insafhere"},"content":"     * Function to check format of input","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"insafhere"},"content":"     * @param isRight whether it is in correct format. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if content of input has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormatException(boolean isRight) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (!isRight) {","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if content entered by user is empty or not","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"ishitamandal06"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception thrown if content of input is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContent(String input, int[] idx) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isSame;","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[0], idx[1], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[2], idx[3], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[4], idx[5], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[6], idx[7], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"insafhere"},"content":"     * Function to check content of input","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"insafhere"},"content":"     * @param isSame whether it is same or not. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContentException(boolean isSame) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isSame) {","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":177,"author":{"gitId":"insafhere"},"content":"     * Function to check if course input entered by user is correct format","lastModifiedDate":"2022-11-04"},{"lineNumber":178,"author":{"gitId":"insafhere"},"content":"     * Course input must be below 10 characters and have both letters and numbers","lastModifiedDate":"2022-11-04"},{"lineNumber":179,"author":{"gitId":"insafhere"},"content":"     * @param course input entered by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":180,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidCourseException exception thrown when course input is invalid","lastModifiedDate":"2022-11-04"},{"lineNumber":181,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":182,"author":{"gitId":"ishitamandal06"},"content":"    public static void checkCourse(String course) throws InvalidCourseException {","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"insafhere"},"content":"        if (course.length() \u003e 10) {","lastModifiedDate":"2022-11-04"},{"lineNumber":184,"author":{"gitId":"insafhere"},"content":"            throw new InvalidCourseException();","lastModifiedDate":"2022-11-04"},{"lineNumber":185,"author":{"gitId":"insafhere"},"content":"        } else if (course.matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":186,"author":{"gitId":"insafhere"},"content":"            throw new InvalidCourseException();","lastModifiedDate":"2022-11-04"},{"lineNumber":187,"author":{"gitId":"insafhere"},"content":"        } else if (course.matches(\"[0-9]+\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":188,"author":{"gitId":"insafhere"},"content":"            throw new InvalidCourseException();","lastModifiedDate":"2022-11-04"},{"lineNumber":189,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":190,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":191,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":192,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":193,"author":{"gitId":"insafhere"},"content":"     * Function to check if mc String input is in correct format","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"insafhere"},"content":"     * @param mcString MC in string format. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":195,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidMcException exception thrown when mc String input is in incorrect format","lastModifiedDate":"2022-11-05"},{"lineNumber":196,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":197,"author":{"gitId":"ishitamandal06"},"content":"    public void checkMcString(String mcString) throws InvalidMcException {","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"ishitamandal06"},"content":"        if (mcString.length() \u003e 2) {","lastModifiedDate":"2022-11-03"},{"lineNumber":199,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidMcException();","lastModifiedDate":"2022-11-03"},{"lineNumber":200,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":201,"author":{"gitId":"ishitamandal06"},"content":"        if (!mcString.matches(\"[0-9]+\")) {","lastModifiedDate":"2022-10-30"},{"lineNumber":202,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidMcException();","lastModifiedDate":"2022-10-30"},{"lineNumber":203,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":204,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":205,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":206,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"insafhere"},"content":"     * Function to check if semester input is in correct format","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"insafhere"},"content":"     * @param semester semester in string format. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":210,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidSemesterException exception thrown when semester input is in incorrect format","lastModifiedDate":"2022-11-05"},{"lineNumber":211,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":212,"author":{"gitId":"ishitamandal06"},"content":"    public void checkYear(String semester) throws InvalidSemesterException {","lastModifiedDate":"2022-11-03"},{"lineNumber":213,"author":{"gitId":"ishitamandal06"},"content":"        if(invalidFormat(semester)) {","lastModifiedDate":"2022-11-03"},{"lineNumber":214,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidSemesterException();","lastModifiedDate":"2022-11-03"},{"lineNumber":215,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":216,"author":{"gitId":"ishitamandal06"},"content":"        if (invalidYearNumber(semester) || invalidSemesterNumber(semester)) {","lastModifiedDate":"2022-11-03"},{"lineNumber":217,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidSemesterException();","lastModifiedDate":"2022-11-03"},{"lineNumber":218,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":219,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":220,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":221,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":222,"author":{"gitId":"insafhere"},"content":"     * Function to check if mc input is in correct format","lastModifiedDate":"2022-11-05"},{"lineNumber":223,"author":{"gitId":"insafhere"},"content":"     * @param mcs mcs in Integer format. Format: Integer","lastModifiedDate":"2022-11-05"},{"lineNumber":224,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidMcException exception thrown when mc input is in incorrect format","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"ishitamandal06"},"content":"    public void checkMc(int mcs) throws InvalidMcException {","lastModifiedDate":"2022-10-30"},{"lineNumber":227,"author":{"gitId":"ishitamandal06"},"content":"        if (invalidMc(mcs)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":228,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidMcException();","lastModifiedDate":"2022-10-30"},{"lineNumber":229,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":230,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":231,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":232,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":233,"author":{"gitId":"insafhere"},"content":"     * Function to check if grade input is in correct format","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"insafhere"},"content":"     * @param grade grade in string format. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":235,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidGradeException exception thrown when grade input is in incorrect format","lastModifiedDate":"2022-11-05"},{"lineNumber":236,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":237,"author":{"gitId":"ishitamandal06"},"content":"    public void checkGrade(String grade) throws InvalidGradeException {","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"ishitamandal06"},"content":"        if (!checkGradeFormat(grade)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":239,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidGradeException();","lastModifiedDate":"2022-10-30"},{"lineNumber":240,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":241,"author":{"gitId":"ishitamandal06"},"content":"        if (!checkValidGrade(grade)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":242,"author":{"gitId":"ishitamandal06"},"content":"            throw new InvalidGradeException();","lastModifiedDate":"2022-10-30"},{"lineNumber":243,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":244,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":245,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":246,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"ishitamandal06"},"content":"     * function to return the positions of the details in input","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input given by user. Format: String","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"ishitamandal06"},"content":"     * @return an integer array containing the positions of the details given by user","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int[] positions(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":252,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] idx \u003d new int[8];","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[0] \u003d input.indexOf(\"m/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[1] \u003d input.indexOf(\" \", idx[0]);","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[2] \u003d input.indexOf(\"s/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[3] \u003d input.indexOf(\" \", idx[2]);","lastModifiedDate":"2022-10-16"},{"lineNumber":257,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[4] \u003d input.indexOf(\"mc/\") + 3;","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[5] \u003d input.indexOf(\" \", idx[4]);","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[6] \u003d input.indexOf(\"g/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[7] \u003d input.indexOf(\" \", idx[6]);","lastModifiedDate":"2022-10-16"},{"lineNumber":261,"author":{"gitId":"Zhai-Yuxin"},"content":"        return idx;","lastModifiedDate":"2022-10-16"},{"lineNumber":262,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":263,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":264,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":265,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-10-16"},{"lineNumber":266,"author":{"gitId":"ishitamandal06"},"content":"        modulelist.add(this.mod, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":268,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":94,"ishitamandal06":86,"Zhai-Yuxin":88}},{"path":"src/main/java/seedu/duke/commands/Check.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brandon-OS"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.UI;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"public class Check extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Brandon-OS"},"content":"    public static int MC_MINIMUM_NOC \u003d 70;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"    public static int SEMESTER_MINIMUM_NOC \u003d 4;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"    public static int SEMESTER_MAXIMUM_NOC \u003d 7;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"Brandon-OS"},"content":"    public static double CAP_MINIMUM_SEP \u003d 3.0;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Brandon-OS"},"content":"    public static int SEMESTER_MINIMUM_SEP \u003d 2;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"    public static int SEMESTER_MAXIMUM_SEP \u003d 6;","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"    private ArrayList\u003cModule\u003e modules \u003d ModuleList.modules;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Brandon-OS"},"content":"    private String type;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Brandon-OS"},"content":"     * Constructor to initialize object of Check Command class","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Brandon-OS"},"content":"     * Depending on the input it will either check for NOC or SEP","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Brandon-OS"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Check(String input) throws InvalidInputContentException {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"        this.type \u003d input.toUpperCase().trim();","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"        switch (type) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Brandon-OS"},"content":"        case \"NOC\":","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"        case \"SEP\":","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"insafhere"},"content":"     * Constructor to initialize object of Check Command class","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"    public Check() {","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"insafhere"},"content":"     * Function to find the current semester based on the latest graded semester","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"     * @return latest graded semester","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int findCurrentSemester() {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"insafhere"},"content":"        int latestGradedSemester \u003d 1;","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod: modules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"            if(!(mod.getGrade().equals(\"-\")) \u0026\u0026 (convertSemToNum(mod.getSemesterTaken()) \u003e\u003d latestGradedSemester)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"insafhere"},"content":"                latestGradedSemester \u003d convertSemToNum(mod.getSemesterTaken());","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"        return latestGradedSemester;","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"     * Function to find the current semester based on the latest graded semester","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"     * @return latest graded semester","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"    public String findCurrentSemesterInString() {","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"        return convertNumToSem(findCurrentSemester());","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user is eligible for NOC","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if eligible, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkNOC() {","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"Zhai-Yuxin"},"content":"        return checkNOCMc() \u0026\u0026 checkNOCSem();","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user fulfills the semester requirements for NOC","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if fulfilled, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkNOCSem() {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"Brandon-OS"},"content":"        int currentSemester \u003d findCurrentSemester();","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"insafhere"},"content":"        return (currentSemester \u003e\u003d SEMESTER_MINIMUM_NOC) \u0026\u0026 (currentSemester \u003c\u003d SEMESTER_MAXIMUM_NOC);","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user fulfills the MC requirements for NOC","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if fulfilled, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkNOCMc() {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"Brandon-OS"},"content":"        int totalMCs \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Brandon-OS"},"content":"        for (Module mod: modules) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Brandon-OS"},"content":"            totalMCs +\u003d mod.getMcs();","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Brandon-OS"},"content":"            if (totalMCs \u003e\u003d MC_MINIMUM_NOC) {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Brandon-OS"},"content":"                return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Brandon-OS"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"Brandon-OS"},"content":"        return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user is eligible for SEP","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if eligible, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkSEP() {","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"Zhai-Yuxin"},"content":"        return checkSEPCAP() \u0026\u0026 checkSEPSem();","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user fulfills the CAP requirements for SEP","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if fulfilled, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkSEPCAP() {","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"        ModuleList ml \u003d new ModuleList(modules);","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"ishitamandal06"},"content":"        double cap \u003d ml.calculateCap();","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"ishitamandal06"},"content":"        return cap \u003e\u003d CAP_MINIMUM_SEP;","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Brandon-OS"},"content":"     * Function to check if the user fulfills the semester requirements for SEP","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"Brandon-OS"},"content":"     * @return true if fulfilled, false otherwise","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkSEPSem() {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"Brandon-OS"},"content":"        int currentSemester \u003d findCurrentSemester();","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"        return (currentSemester \u003e\u003d SEMESTER_MINIMUM_SEP) \u0026\u0026 (currentSemester \u003c\u003d SEMESTER_MAXIMUM_SEP) ;","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"Brandon-OS"},"content":"     * Function to convert semester as a string into an integer","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"Brandon-OS"},"content":"     * @param semester the semester of a module  Format: String","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"Brandon-OS"},"content":"     * @return the semester in the form of an integer","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"insafhere"},"content":"    private static int convertSemToNum(String semester) {","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"Brandon-OS"},"content":"        switch (semester) {","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y1S1\":","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"Brandon-OS"},"content":"            return 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y1S2\":","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"Brandon-OS"},"content":"            return 2;","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y2S1\":","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"Brandon-OS"},"content":"            return 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y2S2\":","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"Brandon-OS"},"content":"            return 4;","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y3S1\":","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"Brandon-OS"},"content":"            return 5;","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y3S2\":","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"Brandon-OS"},"content":"            return 6;","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y4S1\":","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"Brandon-OS"},"content":"            return 7;","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"Brandon-OS"},"content":"        case \"Y4S2\":","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"Brandon-OS"},"content":"            return 8;","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"Brandon-OS"},"content":"        default:","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Brandon-OS"},"content":"            return 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"insafhere"},"content":"     * Function to convert semester as a Number back to String","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"insafhere"},"content":"     * @param semesterNumber the semester of a module  Format: int","lastModifiedDate":"2022-11-05"},{"lineNumber":157,"author":{"gitId":"insafhere"},"content":"     * @return the semester in the form of a String","lastModifiedDate":"2022-11-05"},{"lineNumber":158,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"insafhere"},"content":"    private static String convertNumToSem(int semesterNumber) {","lastModifiedDate":"2022-11-05"},{"lineNumber":160,"author":{"gitId":"insafhere"},"content":"        switch (semesterNumber) {","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"insafhere"},"content":"            case 1:","lastModifiedDate":"2022-11-05"},{"lineNumber":162,"author":{"gitId":"insafhere"},"content":"                return \"Y1S1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"insafhere"},"content":"            case 2:","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"insafhere"},"content":"                return \"Y1S2\";","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"insafhere"},"content":"            case 3:","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"insafhere"},"content":"                return \"Y2S1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"insafhere"},"content":"            case 4:","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"insafhere"},"content":"                return \"Y2S2\";","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"insafhere"},"content":"            case 5:","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"insafhere"},"content":"                return \"Y3S1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"insafhere"},"content":"            case 6:","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"insafhere"},"content":"                return \"Y3S2\";","lastModifiedDate":"2022-11-05"},{"lineNumber":173,"author":{"gitId":"insafhere"},"content":"            case 7:","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"insafhere"},"content":"                return \"Y4S1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":175,"author":{"gitId":"insafhere"},"content":"            case 8:","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"insafhere"},"content":"                return \"Y4S2\";","lastModifiedDate":"2022-11-05"},{"lineNumber":177,"author":{"gitId":"insafhere"},"content":"            default:","lastModifiedDate":"2022-11-05"},{"lineNumber":178,"author":{"gitId":"insafhere"},"content":"                return \"Y1S1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"insafhere":54,"Brandon-OS":102,"ishitamandal06":4,"Zhai-Yuxin":21}},{"path":"src/main/java/seedu/duke/commands/Clear.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidSemesterException;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidSemesterNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidYearNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"public class Clear extends Command {","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"    private String semester;","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"     * Constructor to initialize an object of Delete class","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception which is thrown if the format of the input is wrong","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception to be thrown if the input content is empty","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public Clear(String input) throws InvalidInputFormatException, InvalidInputContentException, InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"        if (input.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"            this.semester \u003d \"all\";","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"        } else {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"            checkFormat(input);","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"            int[] indexes \u003d positions(input);","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"insafhere"},"content":"            checkContent(input, indexes);","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"insafhere"},"content":"            setSem(input, indexes);","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"insafhere"},"content":"        checkOverallExceptionForClear(this.semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"insafhere"},"content":"     * function to find the semester from input for which the modules need to be viewed","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"insafhere"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"insafhere"},"content":"     * @param indexes An array of indexes which specify the positions at which details are present in the input","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"    private void setSem(String input, int[] indexes) {","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"insafhere"},"content":"        if (indexes[1] \u003d\u003d -1) {","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"            this.semester \u003d input.substring(indexes[0]).toUpperCase();","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"        } else {","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"            this.semester \u003d input.substring(indexes[0], indexes[1]).toUpperCase();","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"insafhere"},"content":"     * Function to check if the format of input is correct or not","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"insafhere"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if format of input is incorrect","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"insafhere"},"content":"    public void checkFormat(String input) throws InvalidInputFormatException {","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"        boolean isRight;","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"        isRight \u003d InvalidInputFormatException.checkSem(input);","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"     * Function to check format of input","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"     * @param isRight whether it is in correct format. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if content of input has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"    public void checkFormatException(boolean isRight) throws InvalidInputFormatException {","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"        if (!isRight) {","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"insafhere"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"     * Function to check if content entered by user is empty or not","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"insafhere"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"insafhere"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content of input is empty","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"insafhere"},"content":"    public void checkContent(String input, int[] idx) throws InvalidInputContentException {","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"insafhere"},"content":"        boolean isSame;","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"insafhere"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[0], idx[1], input);","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"insafhere"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"     * Function to check content of input","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"insafhere"},"content":"     * @param isSame whether it is same or not. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"    public void checkContentException(boolean isSame) throws InvalidInputContentException {","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"insafhere"},"content":"        if (isSame) {","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"insafhere"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":93,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"insafhere"},"content":"     * function to return the positions of the details in input","lastModifiedDate":"2022-11-04"},{"lineNumber":95,"author":{"gitId":"insafhere"},"content":"     * @param input the input given by user. Format: String","lastModifiedDate":"2022-11-04"},{"lineNumber":96,"author":{"gitId":"insafhere"},"content":"     * @return an integer array containing the positions of the details given by user","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"insafhere"},"content":"    public int[] positions(String input) {","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"insafhere"},"content":"        int[] idx \u003d new int[2];","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"insafhere"},"content":"        idx[0] \u003d input.indexOf(\"s/\") + 2;","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"insafhere"},"content":"        idx[1] \u003d input.indexOf(\" \", idx[0]);","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"insafhere"},"content":"        return idx;","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"insafhere"},"content":"     * Method to check for any exception caught due to input (semester) format issues","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"insafhere"},"content":"     * @param semester Semester taken. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidOverallInputException exception to be thrown if any issues with any of the input","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"    private void checkOverallExceptionForClear(String semester) throws InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":111,"author":{"gitId":"insafhere"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2022-11-04"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":114,"author":{"gitId":"insafhere"},"content":"            checkYear(semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":115,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":116,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"        if (!errorMessage.equals(\"\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"            System.out.println(\"Unable to Clear modules in semester due to these issue(s):\");","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"insafhere"},"content":"            throw new InvalidOverallInputException();","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":127,"author":{"gitId":"insafhere"},"content":"     * Function that checks the format of semester input","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidSemesterException throws InvalidSemesterException only when invalidFormat for semester","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":130,"author":{"gitId":"insafhere"},"content":"    public void checkYear(String semester) throws InvalidSemesterException {","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"insafhere"},"content":"        if (!semester.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":132,"author":{"gitId":"insafhere"},"content":"            if (invalidFormat(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"insafhere"},"content":"                throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":134,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"insafhere"},"content":"            if (invalidYearNumber(semester) || invalidSemesterNumber(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"insafhere"},"content":"                throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":137,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":138,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":139,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":141,"author":{"gitId":"insafhere"},"content":"    @Override","lastModifiedDate":"2022-11-04"},{"lineNumber":142,"author":{"gitId":"insafhere"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-11-04"},{"lineNumber":143,"author":{"gitId":"insafhere"},"content":"        modulelist.clear(this.semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":144,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":145,"author":{"gitId":"insafhere"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"insafhere":142,"ishitamandal06":3}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"public class Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Command() {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"    public void execute(ModuleList modulelist) throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    public boolean checkExit() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"        return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"insafhere":2,"ishitamandal06":9,"Brandon-OS":1,"Zhai-Yuxin":8}},{"path":"src/main/java/seedu/duke/commands/Delete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"public class Delete extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String modCode;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"     * Constructor to initialize an object of Delete class","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception which is thrown if the format of the input is wrong","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception to be thrown if the input content is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Delete(String input) throws InvalidInputFormatException, InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormat(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] indexes \u003d positions(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContent(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"        setModCode(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"     * function to find the module code which needs to be deleted","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"     * @param indexes An array of indexes at which details of the module code is present in the input","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"    private void setModCode(String input, int[] indexes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (indexes[1] \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.modCode \u003d input.substring(indexes[0]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.modCode \u003d input.substring(indexes[0], indexes[1]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     * check of format of input for delete command is correct or not","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException Exception thrown if format of input for delete command is incorrect","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormat(String input) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isRight;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkMod(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"insafhere"},"content":"     * Function to check format of input","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"insafhere"},"content":"     * @param isRight whether it is in correct format. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if content of input has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormatException(boolean isRight) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (!isRight) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"     * function to check if input content is empty or not","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception thrown if input content is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContent(String input, int[] idx) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isSame;","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[0], idx[1], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContentException(boolean isSame) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isSame) {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"     * function to find the indexes of the details given in input command","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"     * @return an array of indexes at which the details are present in the input string","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int[] positions(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] idx \u003d new int[2];","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[0] \u003d input.indexOf(\"m/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[1] \u003d input.indexOf(\" \", idx[0]);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Zhai-Yuxin"},"content":"        return idx;","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"        modulelist.delete(this.modCode);","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":5,"ishitamandal06":28,"Zhai-Yuxin":60}},{"path":"src/main/java/seedu/duke/commands/Exit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.UI;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"public class Exit extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Exit() {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"        UI.endMessage();","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if command entered by user is an exit command or not","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"     * @return true if the command is exit. Format: boolean","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"    public boolean checkExit() {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"        return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ishitamandal06":4,"Zhai-Yuxin":20}},{"path":"src/main/java/seedu/duke/commands/Find.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brandon-OS"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"public class Find extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Brandon-OS"},"content":"    private String keyword;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"     * Constructor to create an object of the Find Command class","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"     * @param input the keyword inputted by the user. Format: String","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Brandon-OS"},"content":"     * @throws InvalidInputContentException if the user does not add a keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Find(String input) throws InvalidInputContentException {","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"        this.keyword \u003d input.toUpperCase().trim();","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContent(keyword);","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Brandon-OS"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Brandon-OS"},"content":"     * function to check if input content is empty or not","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Brandon-OS"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Brandon-OS"},"content":"     * @throws InvalidInputContentException exception thrown if input content is empty","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Brandon-OS"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContent(String input) throws InvalidInputContentException {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Brandon-OS"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Brandon-OS"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Brandon-OS"},"content":"    public void execute(ModuleList moduleList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Brandon-OS"},"content":"        moduleList.find(keyword);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Brandon-OS"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"Brandon-OS":29,"Zhai-Yuxin":6}},{"path":"src/main/java/seedu/duke/commands/Help.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.UI;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"public class Help extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"    final String message \u003d \"Here\u0027s PlanIT! Command Summary for your reference :\\n\" + \"* Add a Module : add m/MODULE_CODE s/YEAR_NUMBER_SEMESTER_NUMBER mc/NUMBER_OF_MCS g/GRADE \\n\" + \"* Delete a module : delete m/MODULE_CODE \\n\" + \"* View modules in a semester : view s/YEAR_NUMBER_SEMESTER_NUMBER \\n\" + \"* View all modules taken : view all \\n\" + \"* Clears modules in a semesters : clear s/YEAR_NUMBER_SEMESTER_NUMBER \\n\" + \"* Clears all modules taken : clear all \\n\" + \"* Calculate MCs taken : mcs s/YEAR_NUMBER_SEMESTER_NUMBER \\n\" + \"* Finds module information : find \u003cKEYWORD\u003e \\n\" + \"* Checks for SEP/NOC program eligibility : check \u003cPROGRAM\u003e \\n\" + \"* Overview of your Plan (MCs, CAP, Eligibility) : overview \\n\" + \"* Exits the App : exit \";","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"    public Help() {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList moduleList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"        UI.helpMessage(message);","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Zhai-Yuxin":17}},{"path":"src/main/java/seedu/duke/commands/Mcs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidSemesterException;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidSemesterNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidYearNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"public class Mcs extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String semester;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"     * Constructor to initialize an object of Mcs class","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input message to be used to initialize the variables","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception which is thrown if the format of the input is wrong","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception to be thrown if the input content is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public Mcs(String input) throws InvalidInputFormatException, InvalidInputContentException, InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormat(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] indexes \u003d positions(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContent(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"        setSem(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"        checkOverallExceptionForMcs(this.semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"     * function to find the semester from input for which the mcs need to be calculated","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"     * @param indexes An array of indexes which specify the positions at which details are present in the input","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"    private void setSem(String input, int[] indexes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (indexes[1] \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.semester \u003d input.substring(indexes[0]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.semester \u003d input.substring(indexes[0], indexes[1]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if the format of input is correct or not","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception thrown if format of input is incorrect","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormat(String input) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isRight;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkSem(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"     * Function to check format of input","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"     * @param isRight whether it is in correct format. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if content of input has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormatException(boolean isRight) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (!isRight) {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if content entered by user is empty or not","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception thrown if content of input is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"insafhere"},"content":"     * Function to check if content entered by user is empty or not","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"insafhere"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"insafhere"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content of input is empty","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContent(String input, int[] idx) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isSame;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[0], idx[1], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"insafhere"},"content":"     * Function to check content of input","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"     * @param isSame whether it is same or not. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContentException(boolean isSame) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isSame) {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"     * function to return the positions of the details in input","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input given by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"     * @return an integer array containing the positions of the details given by user","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int[] positions(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] idx \u003d new int[2];","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[0] \u003d input.indexOf(\"s/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[1] \u003d input.indexOf(\" \", idx[0]);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Zhai-Yuxin"},"content":"        return idx;","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"insafhere"},"content":"     * Method to check for any exception caught due to input (semester) format issues","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"insafhere"},"content":"     * @param semester Semester taken. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidOverallInputException exception to be thrown if any issues with any of the input","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"    private void checkOverallExceptionForMcs(String semester) throws InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":111,"author":{"gitId":"insafhere"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2022-11-04"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":114,"author":{"gitId":"insafhere"},"content":"            checkYear(semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":115,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":116,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"        if (!errorMessage.equals(\"\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"            System.out.println(\"Unable to view MCS due to these issue(s):\");","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"insafhere"},"content":"            throw new InvalidOverallInputException();","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"insafhere"},"content":"     * Function to check if semester input is in correct format","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"insafhere"},"content":"     * @param semester semester in string format. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidSemesterException exception thrown when semester input is in incorrect format","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"insafhere"},"content":"    public void checkYear(String semester) throws InvalidSemesterException {","lastModifiedDate":"2022-11-04"},{"lineNumber":132,"author":{"gitId":"insafhere"},"content":"        if (invalidFormat(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"insafhere"},"content":"            throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":134,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"insafhere"},"content":"        if (invalidYearNumber(semester) || invalidSemesterNumber(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"insafhere"},"content":"            throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":137,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":138,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":139,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Zhai-Yuxin"},"content":"        modulelist.mc(this.semester);","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":57,"ishitamandal06":30,"Zhai-Yuxin":57}},{"path":"src/main/java/seedu/duke/commands/Overview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"import seedu.duke.Module;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"import seedu.duke.UI;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"insafhere"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"insafhere"},"content":"public class Overview extends Command {","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"    private ArrayList\u003cModule\u003e modules \u003d ModuleList.modules;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"     * Constructor to initialize an object of Overview class","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"    public Overview() {","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"insafhere"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public void execute(ModuleList modulelist) throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"        ModuleList ml \u003d new ModuleList(modules);","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"        UI.overview(ml);","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"insafhere":24,"ishitamandal06":2}},{"path":"src/main/java/seedu/duke/commands/View.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.ModuleList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputContentException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.exceptions.InvalidInputFormatException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidOverallInputException;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import seedu.duke.exceptions.InvalidSemesterException;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidFormat;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidSemesterNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"import static seedu.duke.exceptions.InvalidSemesterException.invalidYearNumber;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"public class View extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"    private String semester;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"     * Constructor to initialize an object of View class","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception which is thrown if the format of the input is wrong","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception to be thrown if the input content is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public View(String input) throws InvalidInputFormatException, InvalidInputContentException, InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.semester \u003d \"all\";","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"            checkFormat(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"            int[] indexes \u003d positions(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"            checkContent(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"            setSem(input, indexes);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"insafhere"},"content":"        checkOverallExceptionForView(this.semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     * function to find the semester from input for which the modules need to be viewed","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"     * @param indexes An array of indexes which specify the positions at which details are present in the input","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"    private void setSem(String input, int[] indexes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (indexes[1] \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.semester \u003d input.substring(indexes[0]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Zhai-Yuxin"},"content":"            this.semester \u003d input.substring(indexes[0], indexes[1]).toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if the format of input is correct or not","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputFormatException exception thrown if format of input is incorrect","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormat(String input) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isRight;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Zhai-Yuxin"},"content":"        isRight \u003d InvalidInputFormatException.checkSem(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkFormatException(isRight);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"     * Function to check format of input","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"     * @param isRight whether it is in correct format. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputFormatException exception thrown if content of input has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkFormatException(boolean isRight) throws InvalidInputFormatException {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (!isRight) {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"     * Function to check if content entered by user is empty or not","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"     * @param input input entered by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"     * @param idx a collection of indexes where the details should be present. If these are empty, an exception should be thrown","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"     * @throws InvalidInputContentException exception thrown if content of input is empty","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContent(String input, int[] idx) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isSame;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Zhai-Yuxin"},"content":"        isSame \u003d InvalidInputContentException.emptyContent(idx[0], idx[1], input);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Zhai-Yuxin"},"content":"        checkContentException(isSame);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"insafhere"},"content":"     * Function to check content of input","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"     * @param isSame whether it is same or not. Format: boolean","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidInputContentException exception thrown if content has issues","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void checkContentException(boolean isSame) throws InvalidInputContentException {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isSame) {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Zhai-Yuxin"},"content":"            throw new InvalidInputContentException();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"     * function to return the positions of the details in input","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input given by user. Format: String","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"     * @return an integer array containing the positions of the details given by user","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"Zhai-Yuxin"},"content":"    public int[] positions(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Zhai-Yuxin"},"content":"        int[] idx \u003d new int[2];","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[0] \u003d input.indexOf(\"s/\") + 2;","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Zhai-Yuxin"},"content":"        idx[1] \u003d input.indexOf(\" \", idx[0]);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Zhai-Yuxin"},"content":"        return idx;","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"insafhere"},"content":"     * Method to check for any exception caught due to input (semester) format issues","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"insafhere"},"content":"     * @param semester Semester taken. Format: String","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"insafhere"},"content":"     * @throws InvalidOverallInputException exception to be thrown if any issues with any of the input","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"insafhere"},"content":"    private void checkOverallExceptionForView(String semester) throws InvalidOverallInputException {","lastModifiedDate":"2022-11-04"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":114,"author":{"gitId":"insafhere"},"content":"        try {","lastModifiedDate":"2022-11-04"},{"lineNumber":115,"author":{"gitId":"insafhere"},"content":"            checkYear(semester);","lastModifiedDate":"2022-11-04"},{"lineNumber":116,"author":{"gitId":"insafhere"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-04"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"            errorMessage +\u003d e.getMessage();","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"        if (!errorMessage.equals(\"\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"            System.out.println(\"Unable to view MCS due to these issue(s):\");","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"insafhere"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"insafhere"},"content":"            throw new InvalidOverallInputException();","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":127,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":128,"author":{"gitId":"insafhere"},"content":"     * throws InvalidSemesterException only when invalidFormat for semester","lastModifiedDate":"2022-11-04"},{"lineNumber":129,"author":{"gitId":"insafhere"},"content":"     * Ignores when requesting for \"all\" semester","lastModifiedDate":"2022-11-04"},{"lineNumber":130,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"insafhere"},"content":"    public void checkYear(String semester) throws InvalidSemesterException {","lastModifiedDate":"2022-11-04"},{"lineNumber":132,"author":{"gitId":"insafhere"},"content":"        if (!semester.equals(\"all\")) {","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"insafhere"},"content":"            if (invalidFormat(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":134,"author":{"gitId":"insafhere"},"content":"                throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"insafhere"},"content":"            if (invalidYearNumber(semester) || invalidSemesterNumber(semester)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":137,"author":{"gitId":"insafhere"},"content":"                throw new InvalidSemesterException();","lastModifiedDate":"2022-11-04"},{"lineNumber":138,"author":{"gitId":"insafhere"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":139,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":141,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":142,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Zhai-Yuxin"},"content":"    public void execute(ModuleList modulelist) {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Zhai-Yuxin"},"content":"        modulelist.view(this.semester);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":52,"ishitamandal06":30,"Zhai-Yuxin":64}},{"path":"src/main/java/seedu/duke/design/ASCIIArtGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"package seedu.duke.design;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"import java.awt.Color;","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"import java.awt.Font;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"import java.awt.FontMetrics;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"import java.awt.Graphics;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"import java.awt.Graphics2D;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"import java.awt.image.BufferedImage;","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"insafhere"},"content":"/**","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"insafhere"},"content":" * ASCII Art Generator in Java. ","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":" * Prints a given text as an ASCII text art on the console. ","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":" * This code is licensed under - CC Attribution CC BY 4.0.","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":" * @author www.quickprogrammingtips.com","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"insafhere"},"content":" *","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":" */","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"public class ASCIIArtGenerator {","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"    public static final int ART_SIZE_SMALL \u003d 12;","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"    public static final int ART_SIZE_MEDIUM \u003d 18;","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"insafhere"},"content":"    public static final int ART_SIZE_LARGE \u003d 24;","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public static final int ART_SIZE_HUGE \u003d 32;","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"    private static final String DEFAULT_ART_SYMBOL \u003d \"*\";","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"    public enum ASCIIArtFont {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"        ART_FONT_DIALOG(\"Dialog\"), ART_FONT_DIALOG_INPUT(\"DialogInput\"),","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"insafhere"},"content":"        ART_FONT_MONO(\"Monospaced\"),ART_FONT_SERIF(\"Serif\"), ART_FONT_SANS_SERIF(\"SansSerif\");","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"insafhere"},"content":"        private String value;","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"insafhere"},"content":"        public String getValue() {","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"insafhere"},"content":"            return value;","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"insafhere"},"content":"        private ASCIIArtFont(String value) {","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"insafhere"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"insafhere"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"        ASCIIArtGenerator artGen \u003d new ASCIIArtGenerator();","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"        System.out.println();","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"        printTextArt(\"Hello\", ASCIIArtGenerator.ART_SIZE_MEDIUM);","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"        System.out.println();","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"insafhere"},"content":"        System.out.println();","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"        printTextArt(\"Love is life!\", ASCIIArtGenerator.ART_SIZE_SMALL, ASCIIArtFont.ART_FONT_MONO,\"@\");","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"insafhere"},"content":"        System.out.println();","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"insafhere"},"content":"     * Prints ASCII art for the specified text. For size, you can use predefined sizes or a custom size.","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"insafhere"},"content":"     * Usage - printTextArt(\"Hi\",30,ASCIIArtFont.ART_FONT_SERIF,\"@\");","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"insafhere"},"content":"     * @param artText","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"insafhere"},"content":"     * @param textHeight - Use a predefined size or a custom type","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"     * @param fontType - Use one of the available fonts","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"insafhere"},"content":"     * @param artSymbol - Specify the character for printing the ascii art","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"insafhere"},"content":"     * @throws Exception","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"insafhere"},"content":"    private static void printTextArt(String artText, int textHeight, ASCIIArtFont fontType, String artSymbol) throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"insafhere"},"content":"        String fontName \u003d fontType.getValue();","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"insafhere"},"content":"        int imageWidth \u003d findImageWidth(textHeight, artText, fontName);","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"insafhere"},"content":"        BufferedImage image \u003d new BufferedImage(imageWidth, textHeight, BufferedImage.TYPE_INT_RGB);","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"insafhere"},"content":"        Graphics g \u003d image.getGraphics();","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"insafhere"},"content":"        Font font \u003d new Font(fontName, Font.BOLD, textHeight);","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"insafhere"},"content":"        g.setFont(font);","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"insafhere"},"content":"        Graphics2D graphics \u003d (Graphics2D) g;","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"insafhere"},"content":"        graphics.drawString(artText, 0, getBaselinePosition(g, font));","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"insafhere"},"content":"        for (int y \u003d 0; y \u003c textHeight; y++) {","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"insafhere"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"insafhere"},"content":"            for (int x \u003d 0; x \u003c imageWidth; x++)","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"insafhere"},"content":"                sb.append(image.getRGB(x, y) \u003d\u003d Color.WHITE.getRGB() ? artSymbol : \" \");","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"insafhere"},"content":"            if (sb.toString().trim().isEmpty())","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"insafhere"},"content":"                continue;","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"insafhere"},"content":"            System.out.println(sb);","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"insafhere"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":86,"author":{"gitId":"insafhere"},"content":"     * Convenience method for printing ascii text art.","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"insafhere"},"content":"     * Font default - Dialog,  Art symbol default - *","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"insafhere"},"content":"     * @param artText","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"insafhere"},"content":"     * @param textHeight","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"insafhere"},"content":"     * @throws Exception","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"insafhere"},"content":"    public static void printTextArt(String artText, int textHeight) throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":93,"author":{"gitId":"insafhere"},"content":"        printTextArt(artText, textHeight, ASCIIArtFont.ART_FONT_DIALOG, DEFAULT_ART_SYMBOL);","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":95,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":96,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"insafhere"},"content":"     * Using the Current font and current art text find the width of the full image","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"insafhere"},"content":"     * @param textHeight","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"insafhere"},"content":"     * @param artText","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"insafhere"},"content":"     * @param fontName","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"insafhere"},"content":"     * @return","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"insafhere"},"content":"    private static int findImageWidth(int textHeight, String artText, String fontName) {","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"insafhere"},"content":"        BufferedImage im \u003d new BufferedImage(1, 1, BufferedImage.TYPE_INT_RGB);","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"insafhere"},"content":"        Graphics g \u003d im.getGraphics();","lastModifiedDate":"2022-11-04"},{"lineNumber":106,"author":{"gitId":"insafhere"},"content":"        g.setFont(new Font(fontName, Font.BOLD, textHeight));","lastModifiedDate":"2022-11-04"},{"lineNumber":107,"author":{"gitId":"insafhere"},"content":"        return g.getFontMetrics().stringWidth(artText);","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":109,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":110,"author":{"gitId":"insafhere"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":111,"author":{"gitId":"insafhere"},"content":"     * Find where the text baseline should be drawn so that the characters are within image","lastModifiedDate":"2022-11-04"},{"lineNumber":112,"author":{"gitId":"insafhere"},"content":"     * @param g","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"insafhere"},"content":"     * @param font","lastModifiedDate":"2022-11-04"},{"lineNumber":114,"author":{"gitId":"insafhere"},"content":"     * @return","lastModifiedDate":"2022-11-04"},{"lineNumber":115,"author":{"gitId":"insafhere"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":116,"author":{"gitId":"insafhere"},"content":"    private static int getBaselinePosition(Graphics g, Font font) {","lastModifiedDate":"2022-11-04"},{"lineNumber":117,"author":{"gitId":"insafhere"},"content":"        FontMetrics metrics \u003d g.getFontMetrics(font);","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"insafhere"},"content":"        int y \u003d metrics.getAscent() - metrics.getDescent();","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"insafhere"},"content":"        return y;","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"insafhere"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"insafhere":119,"ishitamandal06":2}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandWordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"public class InvalidCommandWordException extends Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"NO COMMAND WORD SPECIFIED!! PLEASE KEY IN THE CORRECT INPUT!!\"","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"                + \"\\n\" + \"input \u0027help\u0027 if you are unsure about the requirements\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":6,"Zhai-Yuxin":4}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCourseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"public class InvalidCourseException extends Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"* Invalid Course input.\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"insafhere"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"insafhere":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"public class InvalidGradeException extends Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean checkGradeFormat(String grade) {","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"        return !grade.matches(\"[0-9]+\");","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean checkValidGrade(String grade) {","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"        String[] possibleGrades \u003d {\"A\", \"A+\",\"A-\",\"B\",\"B+\",\"B-\", \"C\", \"C+\",\"D\", \"D+\", \"F\", \"F*\", \"S\", \"U\", \"-\"};","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"        for (String possibleGrade : possibleGrades) {","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"            if (grade.equals(possibleGrade)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"                return true;","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"        return false;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"* Invalid grade input.\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"insafhere":5,"ishitamandal06":15,"Zhai-Yuxin":1}},{"path":"src/main/java/seedu/duke/exceptions/InvalidInputContentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"public class InvalidInputContentException extends Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"     * function to check if the input entered by the user is empty or not","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"     * @param startIndex the beginning index of input","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"     * @param endIndex the ending index of input","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"     * @param input the input itself","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"     * @return true if the input content is empty. False if it is not. Format: boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean emptyContent(int startIndex, int endIndex, String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (startIndex \u003d\u003d endIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else if (startIndex \u003d\u003d input.length()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"INPUT CONTENT IS WRONG!! PLEASE KEY IN THE CORRECT INPUT!!\"","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"insafhere"},"content":"                + \"\\n\"  + \"input \u0027help\u0027 if you are unsure about the requirements\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":6,"ishitamandal06":7,"Zhai-Yuxin":15}},{"path":"src/main/java/seedu/duke/exceptions/InvalidInputFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhai-Yuxin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Zhai-Yuxin"},"content":"public class InvalidInputFormatException extends Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean checkMod(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isCorrect \u003d input.contains(\"m/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isCorrect) {","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"            isCorrect \u003d repetitionField(input, \"m/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Zhai-Yuxin"},"content":"        return isCorrect;","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean checkSem(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isCorrect \u003d input.contains(\"s/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isCorrect) {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Zhai-Yuxin"},"content":"            isCorrect \u003d repetitionField(input, \"s/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"        return isCorrect;","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean checkMC(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isCorrect \u003d input.contains(\"mc/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isCorrect) {","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"            isCorrect \u003d repetitionField(input, \"mc/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Zhai-Yuxin"},"content":"        return isCorrect;","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean checkGrade(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"        boolean isCorrect \u003d input.contains(\"g/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (isCorrect) {","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"            isCorrect \u003d repetitionField(input, \"g/\");","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Zhai-Yuxin"},"content":"        return isCorrect;","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Zhai-Yuxin"},"content":"    public static boolean repetitionField(String input, String type) {","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"        int i \u003d input.indexOf(type);","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"        i +\u003d type.length();","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"Zhai-Yuxin"},"content":"        input \u003d input.substring(i);","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"        return !input.contains(type);","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"INPUT FORMAT IS WRONG!! PLEASE KEY IN THE CORRECT INPUT!!\"","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"insafhere"},"content":"                + \"\\n\"  + \"input \u0027help\u0027 if you are unsure about the requirements\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"insafhere":5,"Zhai-Yuxin":43}},{"path":"src/main/java/seedu/duke/exceptions/InvalidMcException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"public class InvalidMcException extends Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean invalidMc(int mcs) {","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"        if (mcs \u003c 0 || mcs \u003e 20) {","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"            return true;","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"        return false;","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"* Invalid MC Input, must be 0 \u003c mcs \u003c\u003d 20.\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"insafhere":5,"ishitamandal06":10}},{"path":"src/main/java/seedu/duke/exceptions/InvalidOverallInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"insafhere"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"insafhere"},"content":"public class InvalidOverallInputException extends Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"Zhai-Yuxin"},"content":"        return \"Please try to fix the issue(s) and Try again! \\n\";","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"insafhere"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"insafhere":7,"Zhai-Yuxin":1}},{"path":"src/main/java/seedu/duke/exceptions/InvalidSemesterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-11-03"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"public class InvalidSemesterException extends Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean invalidFormat(String semester) {","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"        if( semester.length() \u003d\u003d 4) {","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"            if (semester.contains(\"Y\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"                if (semester.contains(\"S\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"                    if (semester.indexOf(\"Y\") \u003c semester.indexOf(\"S\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"                        return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"                    }","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"                }","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"        return true;","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean invalidYearNumber(String semester) {","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"        String year \u003d semester.substring(semester.indexOf(\u0027Y\u0027) + 1,semester.indexOf(\u0027S\u0027));","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"        if (year.length() \u003d\u003d 1 \u0026\u0026 year.matches(\"[0-9]+\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"            if (Integer.parseInt(year) \u003c 7 \u0026\u0026 Integer.parseInt(year) \u003e 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"                return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"        return true;","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"    public static boolean invalidSemesterNumber(String semester) {","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"        String year \u003d semester.substring(semester.indexOf(\u0027S\u0027) + 1);","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"        if (year.length() \u003d\u003d 1 \u0026\u0026 year.matches(\"[0-9]+\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"            if (Integer.parseInt(year) \u003e 0 \u0026\u0026 Integer.parseInt(year) \u003c 3 ) {","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"                return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"        return true;","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"insafhere"},"content":"    public String getMessage() {","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"insafhere"},"content":"        String message \u003d \"* Invalid Semester/Year input.\" + \"\\n\";","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"insafhere"},"content":"        return message;","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"insafhere":5,"ishitamandal06":39}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.commands.Add;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Zhai-Yuxin"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Brandon-OS"},"content":"import seedu.duke.commands.Check;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import seedu.duke.exceptions.*;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Brandon-OS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Zhai-Yuxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Zhai-Yuxin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Zhai-Yuxin"},"content":"    void testInvalidCommandWord() {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid command word\");","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"        String input \u003d \"ad m/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Zhai-Yuxin"},"content":"        String[] splitText \u003d input.split(\" \");","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Zhai-Yuxin"},"content":"        int length \u003d splitText[0].length();","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Zhai-Yuxin"},"content":"        String content \u003d \" \";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.length() \u003e length) {","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Zhai-Yuxin"},"content":"            content \u003d input.substring(length + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Zhai-Yuxin"},"content":"        String finalContent \u003d content;","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Zhai-Yuxin"},"content":"        assertThrows(InvalidCommandWordException.class, () -\u003e Parser.specificCase(splitText[0], finalContent));","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Zhai-Yuxin"},"content":"    void testInvalidInputFormat() {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid input format\");","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"        String input \u003d \"add o/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Zhai-Yuxin"},"content":"        String[] splitText \u003d input.split(\" \");","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Zhai-Yuxin"},"content":"        int length \u003d splitText[0].length();","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"Zhai-Yuxin"},"content":"        String content \u003d \" \";","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.length() \u003e length) {","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Zhai-Yuxin"},"content":"            content \u003d input.substring(length + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"Zhai-Yuxin"},"content":"        String finalContent \u003d content;","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"Zhai-Yuxin"},"content":"        assertThrows(InvalidInputFormatException.class, () -\u003e Parser.specificCase(splitText[0], finalContent));","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"Zhai-Yuxin"},"content":"    void testEmptyInputContent() {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid input content of empty field(s)\");","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"Zhai-Yuxin"},"content":"        String input \u003d \"add m/cs2113 s/ mc/4 g/A+\";","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"Zhai-Yuxin"},"content":"        String[] splitText \u003d input.split(\" \");","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Zhai-Yuxin"},"content":"        int length \u003d splitText[0].length();","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Zhai-Yuxin"},"content":"        String content \u003d \" \";","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Zhai-Yuxin"},"content":"        if (input.length() \u003e length) {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"Zhai-Yuxin"},"content":"            content \u003d input.substring(length + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"Zhai-Yuxin"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"Zhai-Yuxin"},"content":"        String finalContent \u003d content;","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"Zhai-Yuxin"},"content":"        assertThrows(InvalidInputContentException.class, () -\u003e Parser.specificCase(splitText[0], finalContent));","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"insafhere"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"    void testInvalidSemester() {","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid semester\");","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"S2Y1\"));//Semester is given before the Year","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"S1\")); //Only semester is given","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"Y3\")); //Only year is given","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"Y*SJ\")); //Special characters and letters are given for year and semester","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"Y9S2\"));//Year greater than 6 is given","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidSemesterException.class, () -\u003e Add.checkYear(\"Y3S7\"));//Semester greater than 2 is given","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"    void testInvalidMc() {","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid mc\");","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidMcException.class, () -\u003e Add.checkMc(-6)); //Negative mc is given","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidMcException.class, () -\u003e Add.checkMc(21)); //MC greater than 20 is given","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidMcException.class, () -\u003e Add.checkMcString(\"999999999999999999999999999999999999999999999999999999999999999999999999\")); // Huge numeric mc is given","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidMcException.class, () -\u003e Add.checkMcString(\"adr*\")); // letters and special character for mc is given","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"    void testInvalidGrade() {","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit tests for exceptions in case of invalid grade\");","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e Add.checkGrade(\"9987\")); //Numeric grade is given","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e Add.checkGrade(\"D-\")); // One of the grades that are not possible is given","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"    void testFind() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit Test for Find\");","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"        //add the modules","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"        String input1 \u003d \"add m/cs2105 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"        String input2 \u003d \"add m/cs2106 s/y1s2 mc/4 g/F\";","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"        String input3 \u003d \"add m/cs2107 s/y2s1 mc/4 g/A\";","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"        Command c \u003d Parser.parse(input1);","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input2);","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input3);","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(1,ModuleList.findMatchingModules(\"CS2105\").size()); // find keyword in module code","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(3,ModuleList.findMatchingModules(\"21\").size()); // find partial keyword in module code","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(1,ModuleList.findMatchingModules(\"F\").size()); // find keyword in grade","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(2,ModuleList.findMatchingModules(\"Y1\").size()); // find keyword in semester","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(3,ModuleList.findMatchingModules(\"4\").size()); // find keyword in MC","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(0,ModuleList.findMatchingModules(\"B+\").size()); // find keyword that does not exist","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"ishitamandal06"},"content":"        //Delete the modules","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"ishitamandal06"},"content":"        String inputDelete1 \u003d \"delete m/CS2105\";","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"ishitamandal06"},"content":"        String inputDelete2 \u003d \"delete m/CS2106\";","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"ishitamandal06"},"content":"        String inputDelete3 \u003d \"delete m/CS2107\";","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputDelete1);","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputDelete2);","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputDelete3);","lastModifiedDate":"2022-11-05"},{"lineNumber":121,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"ishitamandal06"},"content":"    void testClearforSemester() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":126,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit Test for Clear for an individual semester\");","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"ishitamandal06"},"content":"        //add the modules","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"ishitamandal06"},"content":"        String input1 \u003d \"add m/cs2105 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"ishitamandal06"},"content":"        String input2 \u003d \"add m/cs2106 s/y1s2 mc/4 g/F\";","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"ishitamandal06"},"content":"        String input3 \u003d \"add m/cs2107 s/y1s1 mc/4 g/A\";","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"ishitamandal06"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"ishitamandal06"},"content":"        Command c \u003d Parser.parse(input1);","lastModifiedDate":"2022-11-05"},{"lineNumber":134,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input2);","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input3);","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"ishitamandal06"},"content":"        int initialCount \u003d modulelist.getCount();","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"ishitamandal06"},"content":"        //give command to clear y1s1","lastModifiedDate":"2022-11-05"},{"lineNumber":142,"author":{"gitId":"ishitamandal06"},"content":"        String inputToClear \u003d \"clear s/y1s1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputToClear);","lastModifiedDate":"2022-11-05"},{"lineNumber":144,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"ishitamandal06"},"content":"        int finalCount \u003d modulelist.getCount();","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(initialCount - 2, finalCount);","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"ishitamandal06"},"content":"        //Delete CS2106 as well","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":150,"author":{"gitId":"ishitamandal06"},"content":"        String inputDelete \u003d \"delete m/CS2106\";","lastModifiedDate":"2022-11-05"},{"lineNumber":151,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-11-05"},{"lineNumber":152,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"ishitamandal06"},"content":"    void testClearforAll() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":157,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Running JUnit Test for Clear for all\");","lastModifiedDate":"2022-11-05"},{"lineNumber":158,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"ishitamandal06"},"content":"        //add the modules","lastModifiedDate":"2022-11-05"},{"lineNumber":160,"author":{"gitId":"ishitamandal06"},"content":"        String input1 \u003d \"add m/cs2105 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"ishitamandal06"},"content":"        String input2 \u003d \"add m/cs2106 s/y1s2 mc/4 g/F\";","lastModifiedDate":"2022-11-05"},{"lineNumber":162,"author":{"gitId":"ishitamandal06"},"content":"        String input3 \u003d \"add m/cs2107 s/y1s1 mc/4 g/A\";","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"ishitamandal06"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"ishitamandal06"},"content":"        Command c \u003d Parser.parse(input1);","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input2);","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(input3);","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"ishitamandal06"},"content":"        int initialCount \u003d modulelist.getCount();","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"ishitamandal06"},"content":"        //give command to clear y1s1","lastModifiedDate":"2022-11-05"},{"lineNumber":173,"author":{"gitId":"ishitamandal06"},"content":"        String inputToClear \u003d \"clear all\";","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"ishitamandal06"},"content":"        c \u003d Parser.parse(inputToClear);","lastModifiedDate":"2022-11-05"},{"lineNumber":175,"author":{"gitId":"ishitamandal06"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"ishitamandal06"},"content":"        int finalCount \u003d modulelist.getCount();","lastModifiedDate":"2022-11-05"},{"lineNumber":177,"author":{"gitId":"ishitamandal06"},"content":"        assertEquals(initialCount - 3, finalCount);","lastModifiedDate":"2022-11-05"},{"lineNumber":178,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"ishitamandal06"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":182,"author":{"gitId":"ishitamandal06"},"content":"    void testAdd() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Running JUnit Test for Add\");","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"insafhere"},"content":"        // Add - Checks whether a module is being added","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"insafhere"},"content":"        String input \u003d \"add m/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"insafhere"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"insafhere"},"content":"        int initialCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"insafhere"},"content":"        // Adds a new module","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"insafhere"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"insafhere"},"content":"        // Gets updated count in module list","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"insafhere"},"content":"        int finalCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"insafhere"},"content":"        // finalCount is supposed to be 1 more than initialCount since 1 module is added","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"insafhere"},"content":"        assertEquals(initialCount + 1, finalCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"insafhere"},"content":"        // Deletes the module","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"insafhere"},"content":"        String inputDelete \u003d \"delete m/cs2113\";","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"insafhere"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"ishitamandal06"},"content":"    void testRepetitionAdd() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":210,"author":{"gitId":"Zhai-Yuxin"},"content":"        System.out.println(\"Running JUnit Test for Adding repetitive mods\");","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"Zhai-Yuxin"},"content":"        String input1 \u003d \"add m/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"Zhai-Yuxin"},"content":"        String input2 \u003d \"add m/cs2113 s/y2s1 mc/4 g/b\";","lastModifiedDate":"2022-10-18"},{"lineNumber":213,"author":{"gitId":"Zhai-Yuxin"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"Zhai-Yuxin"},"content":"        Command c \u003d Parser.parse(input1);","lastModifiedDate":"2022-10-18"},{"lineNumber":216,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-18"},{"lineNumber":217,"author":{"gitId":"Zhai-Yuxin"},"content":"        int initialCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":218,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":219,"author":{"gitId":"Zhai-Yuxin"},"content":"        c \u003d Parser.parse(input2);","lastModifiedDate":"2022-10-18"},{"lineNumber":220,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-18"},{"lineNumber":221,"author":{"gitId":"Zhai-Yuxin"},"content":"        int finalCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":222,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":223,"author":{"gitId":"Zhai-Yuxin"},"content":"        assertEquals(initialCount, finalCount);","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":225,"author":{"gitId":"Zhai-Yuxin"},"content":"        // Deletes the module","lastModifiedDate":"2022-10-18"},{"lineNumber":226,"author":{"gitId":"Zhai-Yuxin"},"content":"        String inputDelete \u003d \"delete m/cs2113\";","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"Zhai-Yuxin"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-18"},{"lineNumber":229,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"Zhai-Yuxin"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":231,"author":{"gitId":"Zhai-Yuxin"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"Zhai-Yuxin"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":233,"author":{"gitId":"ishitamandal06"},"content":"    void testDelete() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Running JUnit Test for Delete\");","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"insafhere"},"content":"        // Delete - Checks whether a module is being being deleted after being added","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"insafhere"},"content":"        String inputAdd \u003d \"add m/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"insafhere"},"content":"        String inputDelete \u003d \"delete m/cs2113\";","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"insafhere"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"Zhai-Yuxin"},"content":"        final int initialCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":242,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"insafhere"},"content":"        // Adds a new module","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"insafhere"},"content":"        Command c \u003d Parser.parse(inputAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"insafhere"},"content":"        // Deletes a new module","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"insafhere"},"content":"        // Gets updated count in module list","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"Zhai-Yuxin"},"content":"        final int finalCount \u003d modulelist.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"insafhere"},"content":"        // finalCount and initialCount supposed to be same count","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"insafhere"},"content":"        assertEquals(initialCount, finalCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":259,"author":{"gitId":"ishitamandal06"},"content":"    void testView() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":260,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Running JUnit Test for view\");","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"insafhere"},"content":"        // View - Checks whether we are able to view the modules taken for semester after adding something","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"insafhere"},"content":"        String inputAdd \u003d \"add m/cs2113 s/y1s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"insafhere"},"content":"        String inputView \u003d \"view s/y1s1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"insafhere"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"insafhere"},"content":"        // Adds a new module","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"insafhere"},"content":"        Command c \u003d Parser.parse(inputAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":271,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"insafhere"},"content":"        // View modules for semester","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputView);","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":275,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"insafhere"},"content":"        // Gets updated count in module list","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"insafhere"},"content":"        int viewCount \u003d modulelist.getViewCount();","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"insafhere"},"content":"        // viewCount should have 1 module","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"insafhere"},"content":"        assertEquals(1, viewCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":282,"author":{"gitId":"insafhere"},"content":"        // Deletes the module","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"insafhere"},"content":"        String inputDelete \u003d \"delete m/cs2113\";","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":286,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"insafhere"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":288,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":289,"author":{"gitId":"insafhere"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":290,"author":{"gitId":"ishitamandal06"},"content":"    void testMcs() throws InvalidInputContentException {","lastModifiedDate":"2022-11-05"},{"lineNumber":291,"author":{"gitId":"insafhere"},"content":"        System.out.println(\"Running JUnit Test for mcs\");","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":293,"author":{"gitId":"insafhere"},"content":"        // mcs - Test whether we are able to view mcs taken for semester after adding something","lastModifiedDate":"2022-10-12"},{"lineNumber":294,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"insafhere"},"content":"        String inputAdd \u003d \"add m/cs2030 s/y2s1 mc/4 g/A+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"insafhere"},"content":"        String inputMcs \u003d \"mcs s/y2s1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"insafhere"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"insafhere"},"content":"        int initialMcsCount \u003d modulelist.getMcsCount();","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"Zhai-Yuxin"},"content":"        assertEquals(0, initialMcsCount);","lastModifiedDate":"2022-10-18"},{"lineNumber":300,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":301,"author":{"gitId":"insafhere"},"content":"        // Adds a new module","lastModifiedDate":"2022-10-12"},{"lineNumber":302,"author":{"gitId":"insafhere"},"content":"        Command c \u003d Parser.parse(inputAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":303,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":304,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":305,"author":{"gitId":"insafhere"},"content":"        // View mcs for the module","lastModifiedDate":"2022-10-12"},{"lineNumber":306,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputMcs);","lastModifiedDate":"2022-10-12"},{"lineNumber":307,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":308,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":309,"author":{"gitId":"insafhere"},"content":"        // Gets updated MCs count in module list","lastModifiedDate":"2022-10-12"},{"lineNumber":310,"author":{"gitId":"insafhere"},"content":"        int finalMcsCount \u003d modulelist.getMcsCount();","lastModifiedDate":"2022-10-12"},{"lineNumber":311,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":312,"author":{"gitId":"insafhere"},"content":"        // mcsCount supposed to be 4","lastModifiedDate":"2022-10-12"},{"lineNumber":313,"author":{"gitId":"insafhere"},"content":"        assertEquals(4, finalMcsCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":314,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":315,"author":{"gitId":"insafhere"},"content":"        // Deletes the module","lastModifiedDate":"2022-10-12"},{"lineNumber":316,"author":{"gitId":"insafhere"},"content":"        String inputDelete \u003d \"delete m/cs2030\";","lastModifiedDate":"2022-10-12"},{"lineNumber":317,"author":{"gitId":"insafhere"},"content":"        c \u003d Parser.parse(inputDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":318,"author":{"gitId":"Zhai-Yuxin"},"content":"        c.execute(modulelist);","lastModifiedDate":"2022-10-16"},{"lineNumber":319,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":321,"author":{"gitId":"insafhere"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":322,"author":{"gitId":"Brandon-OS"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":323,"author":{"gitId":"Brandon-OS"},"content":"    void testCheckNOC() throws InvalidInputContentException {","lastModifiedDate":"2022-11-06"},{"lineNumber":324,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"Running JUnit Test for Check NOC\");","lastModifiedDate":"2022-11-06"},{"lineNumber":325,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":326,"author":{"gitId":"Brandon-OS"},"content":"        // check NOC - Test whether the user is eligible for NOC based on the modules the user has added","lastModifiedDate":"2022-11-06"},{"lineNumber":327,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":328,"author":{"gitId":"Brandon-OS"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-11-06"},{"lineNumber":329,"author":{"gitId":"Brandon-OS"},"content":"        Check check \u003d new Check(\"NOC\");","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":331,"author":{"gitId":"Brandon-OS"},"content":"        // Check initial NOC eligibility","lastModifiedDate":"2022-11-06"},{"lineNumber":332,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckNOCSem \u003d check.checkNOCSem();","lastModifiedDate":"2022-11-06"},{"lineNumber":333,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckNOCSem);","lastModifiedDate":"2022-11-06"},{"lineNumber":334,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckNOCMc \u003d check.checkNOCMc();","lastModifiedDate":"2022-11-06"},{"lineNumber":335,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckNOCMc);","lastModifiedDate":"2022-11-06"},{"lineNumber":336,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckNOC \u003d check.checkNOC();","lastModifiedDate":"2022-11-06"},{"lineNumber":337,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckNOC);","lastModifiedDate":"2022-11-06"},{"lineNumber":338,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":339,"author":{"gitId":"Brandon-OS"},"content":"        ArrayList\u003cString\u003e inputArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":340,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1011 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":341,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1012 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":342,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1013 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":343,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1014 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":344,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1015 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":345,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":346,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1021 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":347,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1022 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":348,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1023 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":349,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1024 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":350,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1025 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":351,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":352,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2011 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":353,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2012 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":354,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2013 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":355,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2014 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":356,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2015 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":357,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":358,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2021 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":359,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2022 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":360,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2023 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":361,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2024 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":362,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2025 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":363,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":364,"author":{"gitId":"Brandon-OS"},"content":"        // Adds all the modules in inputArray","lastModifiedDate":"2022-11-06"},{"lineNumber":365,"author":{"gitId":"Brandon-OS"},"content":"        for (String input : inputArray) {","lastModifiedDate":"2022-11-06"},{"lineNumber":366,"author":{"gitId":"Brandon-OS"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-11-06"},{"lineNumber":367,"author":{"gitId":"Brandon-OS"},"content":"            c.execute(modulelist);","lastModifiedDate":"2022-11-06"},{"lineNumber":368,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":369,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":370,"author":{"gitId":"Brandon-OS"},"content":"        // check final NOC eligibility","lastModifiedDate":"2022-11-06"},{"lineNumber":371,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckNOCSem \u003d check.checkNOCSem();","lastModifiedDate":"2022-11-06"},{"lineNumber":372,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckNOCSem);","lastModifiedDate":"2022-11-06"},{"lineNumber":373,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckNOCMc \u003d check.checkNOCMc();","lastModifiedDate":"2022-11-06"},{"lineNumber":374,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckNOCMc);","lastModifiedDate":"2022-11-06"},{"lineNumber":375,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckNOC \u003d check.checkNOC();","lastModifiedDate":"2022-11-06"},{"lineNumber":376,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckNOC);","lastModifiedDate":"2022-11-06"},{"lineNumber":377,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":378,"author":{"gitId":"Brandon-OS"},"content":"        ModuleList.modules.clear();","lastModifiedDate":"2022-11-06"},{"lineNumber":379,"author":{"gitId":"Brandon-OS"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":380,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":381,"author":{"gitId":"Brandon-OS"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":382,"author":{"gitId":"Brandon-OS"},"content":"    void testCheckSEP() throws InvalidInputContentException {","lastModifiedDate":"2022-11-06"},{"lineNumber":383,"author":{"gitId":"Brandon-OS"},"content":"        System.out.println(\"Running JUnit Test for Check SEP\");","lastModifiedDate":"2022-11-06"},{"lineNumber":384,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":385,"author":{"gitId":"Brandon-OS"},"content":"        // check SEP - Test whether the user is eligible for SEP based on the modules the user has added","lastModifiedDate":"2022-11-06"},{"lineNumber":386,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":387,"author":{"gitId":"Brandon-OS"},"content":"        ModuleList modulelist \u003d new ModuleList();","lastModifiedDate":"2022-11-06"},{"lineNumber":388,"author":{"gitId":"Brandon-OS"},"content":"        Check check \u003d new Check(\"SEP\");","lastModifiedDate":"2022-11-06"},{"lineNumber":389,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":390,"author":{"gitId":"Brandon-OS"},"content":"        // Check initial NOC eligibility","lastModifiedDate":"2022-11-06"},{"lineNumber":391,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckSEPSem \u003d check.checkSEPSem();","lastModifiedDate":"2022-11-06"},{"lineNumber":392,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckSEPSem);","lastModifiedDate":"2022-11-06"},{"lineNumber":393,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckSEPCAP \u003d check.checkSEPCAP();","lastModifiedDate":"2022-11-06"},{"lineNumber":394,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckSEPCAP);","lastModifiedDate":"2022-11-06"},{"lineNumber":395,"author":{"gitId":"Brandon-OS"},"content":"        boolean initialCheckSEP \u003d check.checkSEP();","lastModifiedDate":"2022-11-06"},{"lineNumber":396,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(false, initialCheckSEP);","lastModifiedDate":"2022-11-06"},{"lineNumber":397,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":398,"author":{"gitId":"Brandon-OS"},"content":"        ArrayList\u003cString\u003e inputArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":399,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1011 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":400,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1012 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":401,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1013 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":402,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1014 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":403,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1015 s/y1s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":404,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":405,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1021 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":406,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1022 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":407,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1023 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":408,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1024 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":409,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs1025 s/y1s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":410,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":411,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2011 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":412,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2012 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":413,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2013 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":414,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2014 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":415,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2015 s/y2s1 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":416,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":417,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2021 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":418,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2022 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":419,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2023 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":420,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2024 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":421,"author":{"gitId":"Brandon-OS"},"content":"        inputArray.add(\"add m/cs2025 s/y2s2 mc/4 g/A+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":422,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":423,"author":{"gitId":"Brandon-OS"},"content":"        // Adds all the modules in inputArray","lastModifiedDate":"2022-11-06"},{"lineNumber":424,"author":{"gitId":"Brandon-OS"},"content":"        for (String input : inputArray) {","lastModifiedDate":"2022-11-06"},{"lineNumber":425,"author":{"gitId":"Brandon-OS"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-11-06"},{"lineNumber":426,"author":{"gitId":"Brandon-OS"},"content":"            c.execute(modulelist);","lastModifiedDate":"2022-11-06"},{"lineNumber":427,"author":{"gitId":"Brandon-OS"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":428,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":429,"author":{"gitId":"Brandon-OS"},"content":"        // check final NOC eligibility","lastModifiedDate":"2022-11-06"},{"lineNumber":430,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckSEPSem \u003d check.checkSEPSem();","lastModifiedDate":"2022-11-06"},{"lineNumber":431,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckSEPSem);","lastModifiedDate":"2022-11-06"},{"lineNumber":432,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckSEPCAP \u003d check.checkSEPCAP();","lastModifiedDate":"2022-11-06"},{"lineNumber":433,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckSEPCAP);","lastModifiedDate":"2022-11-06"},{"lineNumber":434,"author":{"gitId":"Brandon-OS"},"content":"        boolean finalCheckSEP \u003d check.checkSEP();","lastModifiedDate":"2022-11-06"},{"lineNumber":435,"author":{"gitId":"Brandon-OS"},"content":"        assertEquals(true, finalCheckSEP);","lastModifiedDate":"2022-11-06"},{"lineNumber":436,"author":{"gitId":"Brandon-OS"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":437,"author":{"gitId":"Brandon-OS"},"content":"        ModuleList.modules.clear();","lastModifiedDate":"2022-11-06"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":439,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"insafhere":99,"ishitamandal06":138,"Brandon-OS":119,"-":10,"Zhai-Yuxin":73}}]
