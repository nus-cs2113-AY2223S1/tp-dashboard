[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wcwy":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |         Name         |             Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"--------|:--------------------:|:--------------------------------------:|:---------:","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"![](team/chuahanyongdarren.png) | Chua Han Yong Darren | [Github](https://github.com/chydarren) | [Portfolio](team/chuahanyongdarren.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"![](team/chiathinhong.png) |    Chia Thin Hong    |   [Github](https://github.com/wcwy)    | [Portfolio](team/chiathinhong.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"![](team/yongchinhan.jpg) |    Yong Chin Han     | [Github](https://github.com/chinhan99) | [Portfolio](team/yongchinhan.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |       Paul Low       | [Github](https://github.com/paullowse) | [Portfolio](team/paullow.md)","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"![](team/brianwongyunlong.png) | Brian Wong Yun Long  | [Github](https://github.com/brian-vb)  | [Portfolio](team/brianwongyunlong.md)","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"chinhan99":2,"brian-vb":1,"-":3,"chydarren":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"- [Preface](#preface)","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"- [Setting Up the Project](#setting-up-the-project)","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"- [Design](#design)","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    * [Command Component](#command-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    * [Data Component](#data-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    * [Storage Component](#storage-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    * [Parser Component](#parser-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    * [UI Component](#ui-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    * [Common Component](#common-component)","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    * [Overview for Transaction](#overview-for-transaction)","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    * [Implementation for Transaction](#implementation-for-transaction)","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    * [Help Command](#help-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    * [Add Command](#add-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    * [Edit Command](#edit-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    * [List Command](#list-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    * [Find Command](#find-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    * [Stats Command](#stats-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    * [Delete Command](#delete-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    * [Purge Command](#purge-command)","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    * [Storage Operations](#storage-operations)","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"        + [Reading From a File](#reading-from-a-file)","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"        + [Writing To a File](#writing-to-a-file)","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    * [Logging Operations](#logging-operations)","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"- [Appendix A: Product scope](#appendix-a--product-scope)","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    * [Target user profile](#target-user-profile)","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    * [Value proposition](#value-proposition)","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"- [Appendix B: User Stories](#appendix-b--user-stories)","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"- [Appendix C: Non-Functional Requirements](#appendix-c--non-functional-requirements)","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"- [Appendix D: Glossary](#appendix-d--glossary)","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"- [Appendix E:  Instructions for manual testing](#appendix-e---instructions-for-manual-testing)","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"## Preface","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"{Provide brief details of the Moolah Manager application and the purpose of the Developer Guide}","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"{List here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"## Setting Up the Project","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"{Detail how to set up the project on one\u0027s computer, assuming the software is Intellij IDEA}","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"Before setting up the project on your computer, kindly check that you have installed:","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"* Java JDK 11","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"* Intellij IDEA - highly recommended","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"Firstly, you should fork this repo, before cloning the fork to your computer.","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"Next,","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"1. **Ensure that Intellij JDK 11 is defined as an SDK**, as described in this [[Set up JDK guide]](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"    * You _might need to set the Project language level_ section to the SDK default option.","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"2. **Import the project _as a Gradle project_**, as described in","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"[[se-edu\u0027s Import Gradle Project guide]](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"3. **Running the project**: After finishing the import, locate the `src/main/java/seedu.duke/Duke.java` ","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"file in this project, right-click it, and choose `Run Duke.main()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"_Written by: Paul Low_","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"## Design","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"{Describe the design of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"### Architecture","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"### Command Component","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"### Data Component ","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"wcwy"},"content":"The data component is represented by a `data` package which consists of all the classes that is part of the data stored ","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"wcwy"},"content":"by Moolah Manager. Within the `data` package, a transaction package and a transactionList class is stored. ","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"wcwy"},"content":"The `transactionList` class is a representation of a list of transactions, and the","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"wcwy"},"content":"operations related to the `transactionList` implemented within this class.","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"wcwy"},"content":"Within the transaction package, the following classes are stored: ","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"wcwy"},"content":"1. Transaction ","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"wcwy"},"content":"2. Income ","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"wcwy"},"content":"3. Expense","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"wcwy"},"content":"4. Category","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"wcwy"},"content":"The structure of the data component in Moolah Manager is illustrated in the class diagram below:","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"wcwy"},"content":"![Data Component Class Diagram](images/DataComponentClassDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"wcwy"},"content":"From the class diagram, it can be seen that the transactionList mainly contain methods for CRUD operations to the list, ","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"wcwy"},"content":"such as getting, adding, editing, deleting and purging of transaction(s) from the list.","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"wcwy"},"content":"The `Transaction` class is the abstract classes of an `Income` or an `Expense`. The `Category` represents a category of ","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"wcwy"},"content":"a transaction. Within the transaction class and its subclasses, getters and setters are used to access the private ","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"wcwy"},"content":"variables. These classes override the toString() method for a self-defined print format when the transactions are ","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"wcwy"},"content":"displayed. ","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"wcwy"},"content":"\u003c!-- TODO: Complete category and categoryList in sequence diagram and write their explanation here --\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"brian-vb"},"content":"A more detailed explanation on the implementation on the transactions can be viewed under Section","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"wcwy"},"content":"[Implementation for Transaction](#implementation-for-transaction).","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"wcwy"},"content":"#### How the data component interacts","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"wcwy"},"content":"- When MoolahManager starts running, the `Duke` class will initialize a `Storage` object which will attempt to ","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"wcwy"},"content":"read from the file and initialize a `transactionList`. The temporary `transactionList` containing all the stored ","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"wcwy"},"content":"transaction records will be returned by the `Storage`. ","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"wcwy"},"content":"Based on the whether the initialization is successful, the corresponding constructor will be called to initialize a ","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"wcwy"},"content":"`transactionList` object which will be used throughout the application running time to hold the `transactions` added.","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"wcwy"},"content":"  ![Sequence Diagram on Creation of TransactionList](images/TransactionListSequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"wcwy"},"content":"- A transaction (either an income or expense) is created by an `addCommand` class, can be modified by an `editCommand` ","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"brian-vb"},"content":"class and can be deleted by a `deleteCommand` or `purgeCommand` class. These interactions are described in further detail","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"wcwy"},"content":"under each command section below.","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"wcwy"},"content":"\u003c!-- TODO: Describe how category and categoryList work here --\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"wcwy"},"content":"_Written by: Chia Thin Hong_","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"chydarren"},"content":"### Storage Component","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"### Parser Component","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"paullowse"},"content":"The Parser component comprises of two main parsers: `CommandParser` and `ParameterParser`. Together, both these ","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"paullowse"},"content":"parsers are used to generate a command object with its accurate parameters according to the input from the UI. ","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"paullowse"},"content":"The structure of the data component in Moolah Manager is illustrated in the class diagram below:","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"paullowse"},"content":"![Data Component Class Diagram](images/ParserClassDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"paullowse"},"content":"After `run()` is called by `main()` in Duke, the `CommandParser` is first called to parse the command. The initial","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"paullowse"},"content":" input is split into the commandWord and parameters using `splitInput()`. Next, the command word is parsed using ","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"paullowse"},"content":" `getCommand()`. With the new command created, the parameters are then parsed by calling `ParameterParser.parse()`","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"paullowse"},"content":" ","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"paullowse"},"content":"In `ParameterParser`, multiple checks are done to ensure that the userInput is accurate. For example, checks are done ","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"paullowse"},"content":"to confirm that all mandatory tags are filled, that no unsupported tags are used, no duplicate tags, no tags are","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"paullowse"},"content":"without parameters and finally that the formats of parameters are accurate. After all the checks are done`setCommand` ","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"paullowse"},"content":"is called to customize the command accordingly.","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"paullowse"},"content":"With the checked and accurate commands and parameters, the command is then executed by `Duke`","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"paullowse"},"content":"_Written by: Paul Low_","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"chydarren"},"content":"### UI Component","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"chydarren"},"content":"The UI component consists of a `Ui` class that displays information and error messages based on the user ","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"chydarren"},"content":"input and the behavior of the application. Static messages are pre-defined in the `ErrorMessages` and `InfoMessages` ","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"chydarren"},"content":"classes from the Common component, while  dynamic messages such as a transactions list may be generated during ","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"chydarren"},"content":"execution of the application.","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"chydarren"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"chydarren"},"content":"    \u003cimg src\u003d\"images/UiComponentClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"chydarren"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"chydarren"},"content":"    \u003ci\u003eFigure 2.6: Class Diagram for UI Component\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"chydarren"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"chydarren"},"content":"As seen from the class diagram, every command that requires the ability to print to the system output will have","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"chydarren"},"content":"to call the functions from the `Ui` class. To add on, the `Duke` class will also use the `Ui` class to read user ","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"chydarren"},"content":"input.","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"chydarren"},"content":"_Written by: Chua Han Yong Darren_","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"chydarren"},"content":"### Common Component","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"chydarren"},"content":"## Implementation","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"chydarren"},"content":"### Overview for Transaction","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"chydarren"},"content":"{Give a brief overview of the Transaction features (i.e. purpose of each command) in Moolah Manager application.}","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"chydarren"},"content":"### Implementation for Transaction","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"chydarren"},"content":"Each `Transaction` object in Moolah Manager represents a transaction record, which can be of `Income`","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"chydarren"},"content":"or `Expense` type. Below is a simplified class diagram (with methods omitted) containing the attributes","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"chydarren"},"content":"within each transaction and how each transaction is associated with the `TransactionList`.","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"chydarren"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"chydarren"},"content":"    \u003cimg src\u003d\"images/TransactionClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"chydarren"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":194,"author":{"gitId":"chydarren"},"content":"    \u003ci\u003eFigure 1: Simplified Class Diagram for Transaction\u003c/i\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"chydarren"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"chydarren"},"content":"The `TransactionList` holds a dynamic array list that can store multiple `Transaction` objects.","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"chydarren"},"content":"Each Transaction object contains the following mandatory member attributes:","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"chydarren"},"content":"1. **category** A category for the transaction.","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"chydarren"},"content":"2. **description** More information regarding the transaction, written without any space.","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"chydarren"},"content":"3. **amount** Value of the transaction in numerical form. Only integers within 0 and 10000000 is accepted.","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"chydarren"},"content":"4. **date** Date of the transaction. The format must be in \"yyyyMMdd\".","lastModifiedDate":"2022-10-17"},{"lineNumber":205,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":206,"author":{"gitId":"chydarren"},"content":"Some important operations are performed within the `TransactionList` class, which implements the following:","lastModifiedDate":"2022-10-17"},{"lineNumber":207,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":208,"author":{"gitId":"chinhan99"},"content":"- `TransactionList#addIncome(String description, int amount, String category, LocalDate date)` - Adds a transaction of","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"chinhan99"},"content":"  class type Income into the transactions list.","lastModifiedDate":"2022-10-18"},{"lineNumber":210,"author":{"gitId":"chinhan99"},"content":"- `TransactionList#addExpense(String description, int amount, String category, LocalDate date)` - Adds a transaction of","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"chinhan99"},"content":"  class type Expense into the transactions list.","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"chinhan99"},"content":"- `TransactionList#listTransactions(String type, String category, LocalDate date)` - List all or some transactions based","lastModifiedDate":"2022-10-18"},{"lineNumber":213,"author":{"gitId":"chinhan99"},"content":"  on selection.","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"chinhan99"},"content":"- `TransactionList#findTransactions(String keywords)` - Find specific transaction(s) based on any keywords inputted by","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"chinhan99"},"content":"  the user.","lastModifiedDate":"2022-10-18"},{"lineNumber":216,"author":{"gitId":"chinhan99"},"content":"- `TransactionList#deleteTransaction(int index)` - Deletes a transaction from the transactions list based on the","lastModifiedDate":"2022-10-18"},{"lineNumber":217,"author":{"gitId":"chinhan99"},"content":"  specified index.","lastModifiedDate":"2022-10-18"},{"lineNumber":218,"author":{"gitId":"chydarren"},"content":"- `TransactionList#purgeTransactions()` - Purges all transactions in the transactions list.","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":220,"author":{"gitId":"chydarren"},"content":"_Written by: Chua Han Yong Darren_","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"chydarren"},"content":"### Help Command","lastModifiedDate":"2022-10-17"},{"lineNumber":223,"author":{"gitId":"wcwy"},"content":"The help command displays the help message to the users to guide them on the usage and provide descriptions for each ","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"wcwy"},"content":"available command. ","lastModifiedDate":"2022-10-18"},{"lineNumber":225,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":226,"author":{"gitId":"wcwy"},"content":"The help command can be run as `help` or `help o/detailed`, where the latter will display a more detailed version of ","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"wcwy"},"content":"help messages to the users. ","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":229,"author":{"gitId":"wcwy"},"content":"The structure of the application focusing on the help command is illustrated in the class diagram below:","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"wcwy"},"content":"![Data Component Class Diagram](images/HelpClassDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":231,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"wcwy"},"content":"For each command subclass, they will implement the getHelpMessage() and getDetailedHelpMessage() methods. These methods ","lastModifiedDate":"2022-10-18"},{"lineNumber":233,"author":{"gitId":"wcwy"},"content":"will contain their corresponding HelpMessage Enum that stores the help messages as strings inside the enum.","lastModifiedDate":"2022-10-18"},{"lineNumber":234,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":235,"author":{"gitId":"wcwy"},"content":"In the help classes, during the execute() call, it will call either generateBasicHelp() or generateDetailedHelp() method","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"wcwy"},"content":"based on the help option given by the user. ","lastModifiedDate":"2022-10-18"},{"lineNumber":237,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":238,"author":{"gitId":"wcwy"},"content":"\u003c!-- Todo: Add sequence diagram --\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":239,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":240,"author":{"gitId":"wcwy"},"content":"_Written by: Chia Thin Hong_","lastModifiedDate":"2022-10-18"},{"lineNumber":241,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":242,"author":{"gitId":"chydarren"},"content":"### Add Command","lastModifiedDate":"2022-10-17"},{"lineNumber":243,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":244,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":245,"author":{"gitId":"chinhan99"},"content":"**This feature allows the local and external (handled by Storage class) storage of transaction entries by the user.**","lastModifiedDate":"2022-10-18"},{"lineNumber":246,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"brian-vb"},"content":"The `AddCommand` inherits properties from the abstract `Command` class. The inheritance of `Command` from `AddCommand` is","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"chinhan99"},"content":"shown below.","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"chinhan99"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"chinhan99"},"content":"    \u003cimg src\u003d\"images/AddCommandClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":252,"author":{"gitId":"chinhan99"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"chinhan99"},"content":"    \u003ci\u003eFigure 3.1: Class Diagram for AddCommand Showing Inheritance of Command\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"chinhan99"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":256,"author":{"gitId":"chinhan99"},"content":"`AddCommand` is dependent on `CommandParser` which accesses its `COMMANDWORD` and creates a new `AddCommand` object. ","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"chinhan99"},"content":"It is also associated with `TransactionList`, `Ui`, `Storage`, which are used in `AddCommand#execute()`; and the `Duke` ","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"chinhan99"},"content":"which calls for `AddCommand#execute()`. Lastly it is also associated with `ParameterParser` which calls for ","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"chinhan99"},"content":"`AddCommand#getMandatoryTags()`. The relationship between the classes are shown below.","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":261,"author":{"gitId":"chinhan99"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":262,"author":{"gitId":"chinhan99"},"content":"    \u003cimg src\u003d\"images/AddCommandDetailedClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":263,"author":{"gitId":"chinhan99"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":264,"author":{"gitId":"chinhan99"},"content":"    \u003ci\u003eFigure 3.2: Class Diagram for AddCommand and Related Classes\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":265,"author":{"gitId":"chinhan99"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":266,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":267,"author":{"gitId":"chinhan99"},"content":"These are the important operations performed within the `AddCommand` class, with task description:","lastModifiedDate":"2022-10-18"},{"lineNumber":268,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":269,"author":{"gitId":"chinhan99"},"content":"- `AddCommand#execute(TransactionList transactions, Ui ui, Storage storage)` - Adds a `Transaction` object to the","lastModifiedDate":"2022-10-18"},{"lineNumber":270,"author":{"gitId":"chinhan99"},"content":"  `TransactionList transactions` ArrayList via transactions#addIncome() or transactions#addExpense() which would be","lastModifiedDate":"2022-10-18"},{"lineNumber":271,"author":{"gitId":"chinhan99"},"content":"  called based on the type of transaction. For successful additions of the Transaction object to the Arraylist, The UI","lastModifiedDate":"2022-10-18"},{"lineNumber":272,"author":{"gitId":"chinhan99"},"content":"  would be called to display the acknowledgement message to the interface. Also, the storage#writeToFile() method would","lastModifiedDate":"2022-10-18"},{"lineNumber":273,"author":{"gitId":"chinhan99"},"content":"  be called to store the newly updated transactions values in the duke.txt file.","lastModifiedDate":"2022-10-18"},{"lineNumber":274,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":275,"author":{"gitId":"chinhan99"},"content":"- `AddCommand#getMandatoryTags()` - This method returns the mandatory tags which should be used in the user input.","lastModifiedDate":"2022-10-18"},{"lineNumber":276,"author":{"gitId":"chinhan99"},"content":"  It is used externally by ParameterParser to verify if the user input contains the mandatory command tags, to correctly","lastModifiedDate":"2022-10-18"},{"lineNumber":277,"author":{"gitId":"chinhan99"},"content":"  store the Transaction object in the program.","lastModifiedDate":"2022-10-18"},{"lineNumber":278,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":279,"author":{"gitId":"chinhan99"},"content":"Written by: Yong Chin Han","lastModifiedDate":"2022-10-18"},{"lineNumber":280,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":281,"author":{"gitId":"chydarren"},"content":"### Edit Command","lastModifiedDate":"2022-10-17"},{"lineNumber":282,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":283,"author":{"gitId":"chydarren"},"content":"{Describe the implementation for the Edit Command}","lastModifiedDate":"2022-10-17"},{"lineNumber":284,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":285,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":286,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":287,"author":{"gitId":"chydarren"},"content":"### List Command","lastModifiedDate":"2022-10-17"},{"lineNumber":288,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":289,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":290,"author":{"gitId":"paullowse"},"content":"The full command for list is `list [t/TYPE] [c/CATEGORY] [d/DATE]`","lastModifiedDate":"2022-10-17"},{"lineNumber":291,"author":{"gitId":"brian-vb"},"content":"For example, if \u0027list\u0027 is called, all transactions that are present in Moolah Manager will be listed out","lastModifiedDate":"2022-10-18"},{"lineNumber":292,"author":{"gitId":"paullowse"},"content":"Adding tags such as type, category and date will list all transactions to that category","lastModifiedDate":"2022-10-17"},{"lineNumber":293,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":294,"author":{"gitId":"paullowse"},"content":"In a command like `list c/food`","lastModifiedDate":"2022-10-17"},{"lineNumber":295,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":296,"author":{"gitId":"paullowse"},"content":"1. The `main()` method in Duke calls `run()` in Duke. The `ui` reads the command and parses it","lastModifiedDate":"2022-10-17"},{"lineNumber":297,"author":{"gitId":"paullowse"},"content":"   through `CommandParser.parse()`.","lastModifiedDate":"2022-10-17"},{"lineNumber":298,"author":{"gitId":"paullowse"},"content":"2. Within `CommandParser.parse()`, `getCommand()` is called to obtain the command, before `ParameterParser.parse()`","lastModifiedDate":"2022-10-17"},{"lineNumber":299,"author":{"gitId":"paullowse"},"content":"   is called","lastModifiedDate":"2022-10-17"},{"lineNumber":300,"author":{"gitId":"paullowse"},"content":"3. Various checks are done through functions within `parameter.parse()`","lastModifiedDate":"2022-10-17"},{"lineNumber":301,"author":{"gitId":"paullowse"},"content":"4. The list command is undergoing execution in `command.execute()` which will call `listTransactions()` in ListCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":302,"author":{"gitId":"paullowse"},"content":"5. `ui.showTransactionsList()` is then executed since parameters are present","lastModifiedDate":"2022-10-17"},{"lineNumber":303,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":304,"author":{"gitId":"paullowse"},"content":"_Written by: Paul Low_","lastModifiedDate":"2022-10-17"},{"lineNumber":305,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":306,"author":{"gitId":"chydarren"},"content":"### Find Command","lastModifiedDate":"2022-10-17"},{"lineNumber":307,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":308,"author":{"gitId":"chydarren"},"content":"The `FindCommand` class provides the functionality of finding a specific or few transaction(s) ","lastModifiedDate":"2022-10-18"},{"lineNumber":309,"author":{"gitId":"chydarren"},"content":"from the list of transactions recorded in Moolah Manager, based on  multiple searching keywords that ","lastModifiedDate":"2022-10-18"},{"lineNumber":310,"author":{"gitId":"chydarren"},"content":"match the details of the transaction(s).","lastModifiedDate":"2022-10-18"},{"lineNumber":311,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":312,"author":{"gitId":"chydarren"},"content":"The sequence diagram below shows the interactions of a successful execution of the `FindCommand`.","lastModifiedDate":"2022-10-18"},{"lineNumber":313,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":314,"author":{"gitId":"chydarren"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":315,"author":{"gitId":"chydarren"},"content":"    \u003cimg src\u003d\"images/FindCommandSequenceDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":316,"author":{"gitId":"chydarren"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":317,"author":{"gitId":"chydarren"},"content":"    \u003ci\u003eFigure 3.3: Sequence Diagram for Find Command\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":318,"author":{"gitId":"chydarren"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":319,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":320,"author":{"gitId":"chydarren"},"content":"**Step 1.** The user executes `find KEYWORDS` command with an intent to view a filtered list of transactions ","lastModifiedDate":"2022-10-18"},{"lineNumber":321,"author":{"gitId":"chydarren"},"content":"that match the searching keywords.","lastModifiedDate":"2022-10-18"},{"lineNumber":322,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":323,"author":{"gitId":"chydarren"},"content":"**Step 2.** The `CommandParser#parse()` method is called to initialize the `Command` object with `FindCommand`, ","lastModifiedDate":"2022-10-18"},{"lineNumber":324,"author":{"gitId":"chydarren"},"content":"accompanied by a string of keywords to search for.","lastModifiedDate":"2022-10-18"},{"lineNumber":325,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":326,"author":{"gitId":"chydarren"},"content":"**Step 3.** Moolah Manager (`Duke`) calls `FindCommand#execute()` method which first checks whether the string of ","lastModifiedDate":"2022-10-18"},{"lineNumber":327,"author":{"gitId":"chydarren"},"content":"keywords is empty via the `FindCommand#checkFindFormat()` method. If `keywords` is empty, a ","lastModifiedDate":"2022-10-18"},{"lineNumber":328,"author":{"gitId":"chydarren"},"content":"`FindTransactionMissingKeywordsException` object will be thrown with an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":329,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":330,"author":{"gitId":"chydarren"},"content":"**Step 4.** Since there exists a string of keywords in a successful execution, the `TransactionList#findTransactions()` ","lastModifiedDate":"2022-10-18"},{"lineNumber":331,"author":{"gitId":"chydarren"},"content":"method will be called to loop through all `Transaction` objects from `ArrayList\u003cTransaction\u003e`, checking if they match ","lastModifiedDate":"2022-10-18"},{"lineNumber":332,"author":{"gitId":"chydarren"},"content":"(i.e. contain) any searching keywords given.","lastModifiedDate":"2022-10-18"},{"lineNumber":333,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":334,"author":{"gitId":"chydarren"},"content":"**Step 5.** `Transaction` objects that contain the searching keywords will be appended into a formatted string and ","lastModifiedDate":"2022-10-18"},{"lineNumber":335,"author":{"gitId":"chydarren"},"content":"returned by the `TransactionList#findTransactions()` method.","lastModifiedDate":"2022-10-18"},{"lineNumber":336,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":337,"author":{"gitId":"chydarren"},"content":"**Step 6.** If `FindCommand` checks that `transactionsList` string is not empty, it will call `Ui#showTransactionsList()` ","lastModifiedDate":"2022-10-18"},{"lineNumber":338,"author":{"gitId":"chydarren"},"content":"method to display the transactions. Otherwise, `Ui#showInfoMessage()` will be called.","lastModifiedDate":"2022-10-18"},{"lineNumber":339,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":340,"author":{"gitId":"chydarren"},"content":"_Written by: Chua Han Yong Darren_","lastModifiedDate":"2022-10-18"},{"lineNumber":341,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":342,"author":{"gitId":"chydarren"},"content":"### Stats Command","lastModifiedDate":"2022-10-17"},{"lineNumber":343,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":344,"author":{"gitId":"chydarren"},"content":"{Describe the implementation for the Stats Command}","lastModifiedDate":"2022-10-17"},{"lineNumber":345,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":346,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":347,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":348,"author":{"gitId":"chydarren"},"content":"### Delete Command","lastModifiedDate":"2022-10-17"},{"lineNumber":349,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":350,"author":{"gitId":"brian-vb"},"content":"The `DeleteCommand` inherits properties from the abstract `Command` class. The inheritance of `Command` from `DeleteCommand` is","lastModifiedDate":"2022-10-18"},{"lineNumber":351,"author":{"gitId":"brian-vb"},"content":"shown below.","lastModifiedDate":"2022-10-18"},{"lineNumber":352,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":353,"author":{"gitId":"brian-vb"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":354,"author":{"gitId":"brian-vb"},"content":"    \u003cimg src\u003d\"images/DeleteCommandClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":355,"author":{"gitId":"brian-vb"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":356,"author":{"gitId":"brian-vb"},"content":"    \u003ci\u003eFigure 3.4: Class Diagram for DeleteCommand Showing Inheritance of Command\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":357,"author":{"gitId":"brian-vb"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":358,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":359,"author":{"gitId":"brian-vb"},"content":"The full command for `delete` is `delete [e/ENTRY]`.","lastModifiedDate":"2022-10-18"},{"lineNumber":360,"author":{"gitId":"brian-vb"},"content":"For example, if \u0027delete\u0027 is called, the specific entry inputted in the command is deleted from the list of transactions in","lastModifiedDate":"2022-10-18"},{"lineNumber":361,"author":{"gitId":"brian-vb"},"content":"Moolah Manager.","lastModifiedDate":"2022-10-18"},{"lineNumber":362,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":363,"author":{"gitId":"brian-vb"},"content":"In a command like `delete 2`:","lastModifiedDate":"2022-10-18"},{"lineNumber":364,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":365,"author":{"gitId":"brian-vb"},"content":"1. The `main()` method in Duke calls `run()` in Duke. The `ui` reads the command via `ui.readCommand()` and parses it","lastModifiedDate":"2022-10-18"},{"lineNumber":366,"author":{"gitId":"brian-vb"},"content":"   through `CommandParser.parse()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":367,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":368,"author":{"gitId":"brian-vb"},"content":"2. Within `CommandParser.parse()`, a few functions are called internally.","lastModifiedDate":"2022-10-18"},{"lineNumber":369,"author":{"gitId":"brian-vb"},"content":"   1. `spiltInput()` is called which splits the command from the parameter.","lastModifiedDate":"2022-10-18"},{"lineNumber":370,"author":{"gitId":"brian-vb"},"content":"   2. `getCommand()` is called which searches for the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":371,"author":{"gitId":"brian-vb"},"content":"   3. `ParameterParser.parse()` is called.","lastModifiedDate":"2022-10-18"},{"lineNumber":372,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":373,"author":{"gitId":"brian-vb"},"content":"3. Within `ParameterParser.parse()`, a few functions are called internally as well.","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"brian-vb"},"content":"   1. `checkMandatoryTagsExist()` is called where the parameters are checked for all required tags exist based on the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":375,"author":{"gitId":"brian-vb"},"content":"   2. `checkUnsupportedTagsNotExist()` is called to check if the parameter do not contain any unsupported tags based on the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"brian-vb"},"content":"   3. `checkDuplicateTagsNotExist()` is called to check if the parameter do not contain any duplicate tags.","lastModifiedDate":"2022-10-18"},{"lineNumber":377,"author":{"gitId":"brian-vb"},"content":"   4. `checkParameterNotEmpty()` is called to check that the parameter inputted is not empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":378,"author":{"gitId":"brian-vb"},"content":"   5. Once all these checks are successful, `setCommand()` is called.","lastModifiedDate":"2022-10-18"},{"lineNumber":379,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":380,"author":{"gitId":"brian-vb"},"content":"4. Within `setCommand()`, more functions are called internally.","lastModifiedDate":"2022-10-18"},{"lineNumber":381,"author":{"gitId":"brian-vb"},"content":"   1. `setParameter()` is called to set the index of the transaction to be deleted.","lastModifiedDate":"2022-10-18"},{"lineNumber":382,"author":{"gitId":"brian-vb"},"content":"   2. The setting is done via `command.setEntryNumber()` which takes in the parameter and executes it in the DeleteCommand Class.","lastModifiedDate":"2022-10-18"},{"lineNumber":383,"author":{"gitId":"brian-vb"},"content":"   3. The parameter, however, needs to be further parsed through the execution of the `parseEntryTag()` function.","lastModifiedDate":"2022-10-18"},{"lineNumber":384,"author":{"gitId":"brian-vb"},"content":"   4. It converts the parameter, which is currently a `String`, to a `Int`.","lastModifiedDate":"2022-10-18"},{"lineNumber":385,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":386,"author":{"gitId":"brian-vb"},"content":"5. The delete command is undergoing execution in `command.execute()` which will call functions within the DeleteCommand Class.","lastModifiedDate":"2022-10-18"},{"lineNumber":387,"author":{"gitId":"brian-vb"},"content":"   1. The index, which is the local `entryNumber` variable, goes under further checks by ascertaining whether it is greater than the total","lastModifiedDate":"2022-10-18"},{"lineNumber":388,"author":{"gitId":"brian-vb"},"content":"      number of transactions in the list or lesser than or equal to zero.","lastModifiedDate":"2022-10-18"},{"lineNumber":389,"author":{"gitId":"brian-vb"},"content":"   2. It tells the total size via the local `numberOfTransactions` variable which takes the value called by `transactions.size()`","lastModifiedDate":"2022-10-18"},{"lineNumber":390,"author":{"gitId":"brian-vb"},"content":"      which is located in the TransactionList class.","lastModifiedDate":"2022-10-18"},{"lineNumber":391,"author":{"gitId":"brian-vb"},"content":"   3. Should the above condition be true, it is no longer a valid input and the local `isInputValid` variable is set as false.","lastModifiedDate":"2022-10-18"},{"lineNumber":392,"author":{"gitId":"brian-vb"},"content":"   4. An exception is thrown if `isInputValid` is false. Otherwise, `transactions.deleteTransaction()` is called to remove it.","lastModifiedDate":"2022-10-18"},{"lineNumber":393,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":394,"author":{"gitId":"brian-vb"},"content":"6. The above function is called in the TransactionList class which does the following:","lastModifiedDate":"2022-10-18"},{"lineNumber":395,"author":{"gitId":"brian-vb"},"content":"   1. Retrieves the transaction to be deleted via `transactions.get()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":396,"author":{"gitId":"brian-vb"},"content":"   2. Removes it via `transactions.remove()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":397,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":398,"author":{"gitId":"brian-vb"},"content":"7. The display shows the successful deletion via `ui.showTransactionAction()` and writes it to file by `storage.writeToFile()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":399,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":400,"author":{"gitId":"brian-vb"},"content":"_Written by: Brian Wong Yun Long_","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":402,"author":{"gitId":"chydarren"},"content":"### Purge Command","lastModifiedDate":"2022-10-17"},{"lineNumber":403,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":404,"author":{"gitId":"brian-vb"},"content":"The `PurgeCommand` inherits properties from the abstract `Command` class. The inheritance of `Command` from `PurgeCommand` is","lastModifiedDate":"2022-10-18"},{"lineNumber":405,"author":{"gitId":"brian-vb"},"content":"shown below.","lastModifiedDate":"2022-10-18"},{"lineNumber":406,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":407,"author":{"gitId":"brian-vb"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":408,"author":{"gitId":"brian-vb"},"content":"    \u003cimg src\u003d\"images/PurgeCommandClassDiagram.png\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":409,"author":{"gitId":"brian-vb"},"content":"    \u003cbr /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":410,"author":{"gitId":"brian-vb"},"content":"    \u003ci\u003eFigure 3.5: Class Diagram for PurgeCommand Showing Inheritance of Command\u003c/i\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":411,"author":{"gitId":"brian-vb"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":412,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":413,"author":{"gitId":"brian-vb"},"content":"The full command for `purge` is `purge`.","lastModifiedDate":"2022-10-18"},{"lineNumber":414,"author":{"gitId":"brian-vb"},"content":"For example, if \u0027purge\u0027 is called, all transactions in Moolah Manager are removed.","lastModifiedDate":"2022-10-18"},{"lineNumber":415,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":416,"author":{"gitId":"brian-vb"},"content":"This is how the command works:","lastModifiedDate":"2022-10-18"},{"lineNumber":417,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":418,"author":{"gitId":"brian-vb"},"content":"1. The `main()` method in Duke calls `run()` in Duke. The `ui` reads the command via `ui.readCommand()` and parses it","lastModifiedDate":"2022-10-18"},{"lineNumber":419,"author":{"gitId":"brian-vb"},"content":"   through `CommandParser.parse()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":420,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":421,"author":{"gitId":"brian-vb"},"content":"2. Within `CommandParser.parse()`, a few functions are called internally.","lastModifiedDate":"2022-10-18"},{"lineNumber":422,"author":{"gitId":"brian-vb"},"content":"   1. `spiltInput()` is called which splits the command from the parameter.","lastModifiedDate":"2022-10-18"},{"lineNumber":423,"author":{"gitId":"brian-vb"},"content":"   2. `getCommand()` is called which searches for the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":424,"author":{"gitId":"brian-vb"},"content":"   3. `ParameterParser.parse()` is called.","lastModifiedDate":"2022-10-18"},{"lineNumber":425,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":426,"author":{"gitId":"brian-vb"},"content":"3. Within `ParameterParser.parse()`, a few functions are called internally as well.","lastModifiedDate":"2022-10-18"},{"lineNumber":427,"author":{"gitId":"brian-vb"},"content":"   1. `checkMandatoryTagsExist()` is called where the parameters are checked for all required tags exist based on the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":428,"author":{"gitId":"brian-vb"},"content":"   2. `checkUnsupportedTagsNotExist()` is called to check if the parameter do not contain any unsupported tags based on the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":429,"author":{"gitId":"brian-vb"},"content":"   3. `checkDuplicateTagsNotExist()` is called to check if the parameter do not contain any duplicate tags.","lastModifiedDate":"2022-10-18"},{"lineNumber":430,"author":{"gitId":"brian-vb"},"content":"   4. `checkParameterNotEmpty()` is called to check that the parameter inputted is not empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":431,"author":{"gitId":"brian-vb"},"content":"   5. Once all these checks are successful, `setCommand()` is called.","lastModifiedDate":"2022-10-18"},{"lineNumber":432,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":433,"author":{"gitId":"brian-vb"},"content":"4. Within `setCommand()`, there is no parameters required to be set for `purge`.","lastModifiedDate":"2022-10-18"},{"lineNumber":434,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":435,"author":{"gitId":"brian-vb"},"content":"5. The purge command is undergoing execution in `command.execute()` which will call functions within the PurgeCommand Class.","lastModifiedDate":"2022-10-18"},{"lineNumber":436,"author":{"gitId":"brian-vb"},"content":"   1. The function calls `isEmpty()` which returns `true` if the list of transactions is zero, `false` otherwise. It is stored ","lastModifiedDate":"2022-10-18"},{"lineNumber":437,"author":{"gitId":"brian-vb"},"content":"      in the local `check` variable.","lastModifiedDate":"2022-10-18"},{"lineNumber":438,"author":{"gitId":"brian-vb"},"content":"   2. The above function compares the size of the transactions list through the `transactions.size()` which is executed in","lastModifiedDate":"2022-10-18"},{"lineNumber":439,"author":{"gitId":"brian-vb"},"content":"      the TransactionList class and see if both are equal to zero.","lastModifiedDate":"2022-10-18"},{"lineNumber":440,"author":{"gitId":"brian-vb"},"content":"   3. The display will show an empty message if `isEmpty()` returns `true` via `ui.showInfoMessage()`, which exits the command.","lastModifiedDate":"2022-10-18"},{"lineNumber":441,"author":{"gitId":"brian-vb"},"content":"   4. Otherwise, a warning is displayed through `ui.showInfoMessage()` and reads in an input for the user to respond through `ui.readCommand()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":442,"author":{"gitId":"brian-vb"},"content":"   5. If the input is `Y`, the command goes ahead and executes the `transactions.purgeTransactions()`. Any other input will","lastModifiedDate":"2022-10-18"},{"lineNumber":443,"author":{"gitId":"brian-vb"},"content":"      abort the command and the display will show an aborted message through `ui.showInfoMessage()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":444,"author":{"gitId":"brian-vb"},"content":"   ","lastModifiedDate":"2022-10-18"},{"lineNumber":445,"author":{"gitId":"brian-vb"},"content":"6. The `transactions.purgeTransactions()` function is executed in the TransactionList class.","lastModifiedDate":"2022-10-18"},{"lineNumber":446,"author":{"gitId":"brian-vb"},"content":"   1. The `transactions.clear()` function is called which deletes every single entry in Moolah Manager","lastModifiedDate":"2022-10-18"},{"lineNumber":447,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":448,"author":{"gitId":"brian-vb"},"content":"7. The display shows the successful purging via `ui.showInfoMessage()` and writes it to file by `storage.writeToFile()`.","lastModifiedDate":"2022-10-18"},{"lineNumber":449,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":450,"author":{"gitId":"brian-vb"},"content":"_Written by: Brian Wong Yun Long_","lastModifiedDate":"2022-10-18"},{"lineNumber":451,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":452,"author":{"gitId":"chydarren"},"content":"### Storage Operations","lastModifiedDate":"2022-10-17"},{"lineNumber":453,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":454,"author":{"gitId":"chydarren"},"content":"#### Reading From a File","lastModifiedDate":"2022-10-17"},{"lineNumber":455,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":456,"author":{"gitId":"chydarren"},"content":"#### Writing To a File","lastModifiedDate":"2022-10-17"},{"lineNumber":457,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":458,"author":{"gitId":"chydarren"},"content":"_Written by: Author name_","lastModifiedDate":"2022-10-17"},{"lineNumber":459,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":460,"author":{"gitId":"chydarren"},"content":"### Logging Operations","lastModifiedDate":"2022-10-17"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":462,"author":{"gitId":"chydarren"},"content":"{Describe how logging is performed in the developer code}","lastModifiedDate":"2022-10-17"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":464,"author":{"gitId":"paullowse"},"content":"Our team used `java.util.logging` package for the purposes of logging. We instantiated various objects","lastModifiedDate":"2022-10-17"},{"lineNumber":465,"author":{"gitId":"paullowse"},"content":"for different classes such as `parserLogger` and `addLogger` to set the log messages.","lastModifiedDate":"2022-10-17"},{"lineNumber":466,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":467,"author":{"gitId":"paullowse"},"content":"**Logging Levels**:","lastModifiedDate":"2022-10-17"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":469,"author":{"gitId":"paullowse"},"content":"* `WARNING`: An exception has been caught by the app","lastModifiedDate":"2022-10-17"},{"lineNumber":470,"author":{"gitId":"paullowse"},"content":"* `INFO`: Information details what the app has done","lastModifiedDate":"2022-10-17"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":472,"author":{"gitId":"paullowse"},"content":"_Written by: Paul Low_","lastModifiedDate":"2022-10-17"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":474,"author":{"gitId":"chydarren"},"content":"## Appendix A: Product scope","lastModifiedDate":"2022-10-17"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":478,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":482,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":484,"author":{"gitId":"chydarren"},"content":"## Appendix B: User Stories","lastModifiedDate":"2022-10-17"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":486,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...             | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":487,"author":{"gitId":"brian-vb"},"content":"|---------|----------|---------------------------|-------------------------------------------------------------|","lastModifiedDate":"2022-10-18"},{"lineNumber":488,"author":{"gitId":"-"},"content":"| v1.0    | new user | see usage instructions    | refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":489,"author":{"gitId":"-"},"content":"| v2.0    | user     | find a to-do item by name | locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":491,"author":{"gitId":"chydarren"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2022-10-17"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":493,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":495,"author":{"gitId":"chydarren"},"content":"## Appendix D: Glossary","lastModifiedDate":"2022-10-17"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":499,"author":{"gitId":"chydarren"},"content":"## Appendix E:  Instructions for manual testing","lastModifiedDate":"2022-10-17"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":501,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"chinhan99":48,"paullowse":47,"brian-vb":101,"wcwy":57,"-":31,"chydarren":217}},{"path":"docs/diagram/AddCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"hide circle","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"class AddCommand {","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"+ COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    - type: String","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"class \"{abstract}\\n Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"    - type: String","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"AddCommand --|\u003e \"{abstract}\\n Command\"","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chinhan99":43}},{"path":"docs/diagram/AddCommandExternalClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"hide circle","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"class AddCommand {","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"class \"{abstract}\\n Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"class Ui{","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"+showTransactionAction()","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"class ParameterParser{","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"+checkUnsupportedTagsNotExist()","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"+checkMandatoryTagsExist()","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"class CommandParser{","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"+getCommand()","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"class Storage{","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"+writeToFile()","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"class TransactionList{","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"+addIncome()","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"+addExpense()","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"class Duke{","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"+run()","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"AddCommand \u003c-- Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"AddCommand .right.\u003e CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"AddCommand \u003c-- ParameterParser","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"AddCommand \u003c-- Storage","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"AddCommand \u003c-- TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"AddCommand -left-\u003e Duke","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"AddCommand -up-|\u003e \"{abstract}\\n Command\"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chinhan99":54}},{"path":"docs/diagram/DataComponentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"!include Style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"class Category{","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"class CategoryList{","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"class TransactionList {","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    + TransactionList()","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    + TransactionList(TransactionList)","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    + getEntry(int) : Transaction","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    + size() : int","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    + addExpense(description:String, amount:int,","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"              category:String, date:LocalDate) : String","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    + addIncome(description:String, amount:int,","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"              category:String, date:LocalDate) : String","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    + listTransactions(type: String, category:String,","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"              date:LocalDate) : String","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"    + findTransaction(String) : String","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    + deleteTransaction(int) : String","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    + purgeTransactions()","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"abstract class \"Transaction\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"    + Transaction(description:String, amount:int,","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"          category:String, date:LocalDate)","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    + getType() : String {abstract}","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"    + getDescription() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    + setDescription(String)","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"    + getAmount() : int","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"    + setAmount(int)","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"    + getCategory() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"    + setCategory(String)","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"    + getDate() : LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"    + setDate(LocalDate)","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"    + printFormattedDate() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"    + printFormattedCategory() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"    + toString() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"class Income {","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"    + TRANSACTION_NAME: String \u003d \"income\"{static}","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"    + ICON_INCOME: String \u003d \"[+]\" {static}","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"    + Income(description:String, amount:int,","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"              category:String, date:LocalDate)","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"wcwy"},"content":"      getType() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"wcwy"},"content":"      getIcon() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"wcwy"},"content":"      toString() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"wcwy"},"content":"class Expense {","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"wcwy"},"content":"    + TRANSACTION_NAME: String \u003d \"expense\"{static}","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"wcwy"},"content":"    + ICON_INCOME: String \u003d \"[-]\" {static}","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"wcwy"},"content":"    + Expense(description:String, amount:int,","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"wcwy"},"content":"              category:String, date:LocalDate)","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"wcwy"},"content":"      getType() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"wcwy"},"content":"      getIcon() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"wcwy"},"content":"      toString() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"wcwy"},"content":"Income -up-|\u003e \"Transaction\"","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"wcwy"},"content":"Expense -up-|\u003e \"Transaction\"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"wcwy"},"content":"TransactionList -\u003e \"*\" \"Transaction\" : contains \u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"wcwy"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"wcwy":74}},{"path":"docs/diagram/DeleteCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brian-vb"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"brian-vb"},"content":"!include Style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"class DeleteCommand {","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"+ COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"    - entryNumber: int","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"    +setEntryNumber(): int","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"class \"{abstract}\\n Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"    - type: String","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"brian-vb"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"brian-vb"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"brian-vb"},"content":"\"{abstract}\\n Command\" \u003c|-- DeleteCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"brian-vb"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"brian-vb":36}},{"path":"docs/diagram/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"hide footbox","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"Participant \":Duke\" as Duke","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"Participant \":CommandParser\" as CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"Participant \"command:FindCommand\" as FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"Participant \"transactions:TransactionList\" as Transactions","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"Participant \"ui:Ui\" as Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"-\u003e Duke","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"activate Duke","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"Duke -\u003e CommandParser:parse(\"find bus_fare\")","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"activate CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"CommandParser -\u003e CommandParser:splitInput(\"find bus_fare\")","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"activate CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"return inputTokens: String[]","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"CommandParser -\u003e CommandParser:getCommand(commandWordInput: String, parameterInput: String)","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"activate CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"create FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"CommandParser -\u003e FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"activate FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"return","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"return command: FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"return command: FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"deactivate CommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"Duke -\u003e FindCommand:execute(transactions: TransactionList, ui: Ui, storage: Storage)","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"activate FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"ref over FindCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    checkFindFormat(keywords: String)","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"end ref","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"FindCommand -\u003e Transactions:findTransactions(keywords: String)","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"activate Transactions","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"return transactionsList: String","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"alt transactionsList is empty","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    FindCommand -\u003e Ui:showInfoMessage(message: String)","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    activate Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"else else","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"    FindCommand -\u003e Ui:showTransactionsList(transactionsList: String, listMessage: String)","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"end","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"return","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"return","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chydarren":55}},{"path":"docs/diagram/HelpClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"!include Style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"abstract class \"Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"    + getHelpMessage() : HelpMessage {abstract}","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"    + getDetailedHelpMessage() : HelpMessage {abstract}","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"    + execute() : void {abstract}","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"class HelpCommand{","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    + getHelpMessage() : HelpMessage","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"    + getDetailedHelpMessage() : HelpMessage","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    + execute() : void","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    - generateBasicHelp() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    - generateDetailedHelp() : String","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"class AddCommand{","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    + getHelpMessage() : HelpMessage","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"    + getDetailedHelpMessage() : HelpMessage","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    + execute() : void","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"note left: Similar for all other \\ncommand subclasses","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"enum \"\u003c\u003cenumeration\u003e\u003e\\nHelpMessage\" {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    ADD_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"    ADD_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"    EDIT_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"    EDIT_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"    DELETE_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"    DELETE_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"    PURGE_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"    PURGE_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    LIST_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"    LIST_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    STATS_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"    STATS_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"    FIND_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"    FIND_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"    HELP_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"    HELP_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"    BYE_CMD_BASIC_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"    BYE_CMD_DETAILED_HELP","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"HelpCommand -up-|\u003e \"Command\"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"AddCommand -up-|\u003e \"Command\"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"wcwy":50}},{"path":"docs/diagram/Parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"hide circle","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"class Duke {","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"    - storage: Storage","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"    - transactions: TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"    - ui: Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    +run()","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    +main()","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"class \"CommandParser\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"    - EMPTY_STRING: String","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"    - DELIMITER: String","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"    - SPLIT_POSITION: int","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"    - parserLogger: Logger","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"    +parse(): Command","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"    +splitInput(): String[]","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"    +getCommand(): Command","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"class \"ParameterParser\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"    - EMPTY_STRING: String","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"    - DELIMITER: String","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"    - SPLIT_POSITION: int","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"    - MINIMUM_TAG_LENGTH: int","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"    - parserLogger: Logger","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"    +parse()","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"    +checkMandatoryTagsExist()","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    +checkUnsupportedTagsNotExist()","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"    +checkDuplicateTagsNotExist()","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"    +checkParameterNotEmpty()","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"    +findMatchingTagAmongInputs(): boolean","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"    +findIfParameterTagAmongTags(): boolean","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"    +setCommand()","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"    +setParameter()","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"    +parseTypeTagForListing(): String","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    +parseTypeTagForAdding(): String","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"    +parseCategoryTag(): String","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"    +parseAmountTag(): int","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"    +parseDateTag(): LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"    +parseEntryTag(): int","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"    +parseHelpOptionTag(): boolean","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"    +parseStatsTypeTag(): String","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"    +containNumeric(): boolean","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"    +containAlphabet(): boolean","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"class \"{abstract}\\n Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"    + COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"    - type: String","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"    +getMandatoryTags()","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"Duke --\u003e \"CommandParser\"","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"\"CommandParser\" --\u003e \"ParameterParser\"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"\"CommandParser\" --\u003e \"{abstract}\\n Command\"","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"paullowse":76}},{"path":"docs/diagram/PurgeCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brian-vb"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"brian-vb"},"content":"!include Style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"class PurgeCommand {","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"+ COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"    +isEmpty(): TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"class \"{abstract}\\n Command\"{","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_WORD: String","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_DESCRIPTION: String","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_USAGE: String","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":"    + COMMAND_PARAMETERS_INFO: String","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"    - type: String","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"    - category: String","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"    - description: String","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"    - amount: int","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"    +{abstract}execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"\"{abstract}\\n Command\" \u003c|-- PurgeCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"brian-vb"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"brian-vb":35}},{"path":"docs/diagram/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"hide circle","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"hide footbox","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"wcwy":3}},{"path":"docs/diagram/Transaction.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"@startuml","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"!include Style.puml","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"class TransactionList {","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"class Transaction{","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    - category: String","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    - description: String","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    - amount: int","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    - date: LocalDate","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"class Income {","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    + TRANSACTION_NAME: String \u003d \"income\"{static}","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    + ICON_INCOME: String \u003d \"[+]\" {static}","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"class Expense {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    + TRANSACTION_NAME: String \u003d \"income\"{static}","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    + ICON_INCOME: String \u003d \"[+]\" {static}","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"Income -up-|\u003e Transaction","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"Expense -up-|\u003e Transaction","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"TransactionList -\u003e \"*\" Transaction : contains","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"@enduml","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"wcwy":1,"chydarren":28}},{"path":"docs/diagram/TransactionListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"!include Style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"actor Main","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"Participant \":Duke\" as duke","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"Participant \":Storage\" as storage","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"Participant \"storedTransactions:\\nTransactionList\" as storedList","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"Participant \"transactionList:\\nTransactionList\" as transactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"Participant \"transactionList:\\nTransactionList\" as emptyTransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"create duke","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"Main -\u003e duke:Duke()","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"activate duke","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    create storage","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    duke -\u003e storage:Storage()","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"        activate storage","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"        create storedList","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"        storage -\u003e storedList:TransactionList()","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"            activate storedList","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"        return :TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"    return :Storage","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    duke -\u003e storage:initializeFile()","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    activate storage","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"        storage -\u003e storedList:Add transactions","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"        note right","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"        Minimal notation.","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"        Details hidden for adding transactions","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"        from file read into storedTransactions.","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"        end note","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"    return stored:TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"    destroy storedList","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    note over storedList","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"        Due to UML tool limitation, the lifeline is not shown ended after the red cross","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    end note","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"    alt Successful initialization","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"        create transactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"        duke -\u003e transactionList:TransactionList(stored)","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"        activate transactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"        return transactionList:TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"    else File initialization failure","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"        create emptyTransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"        duke -\u003e emptyTransactionList:TransactionList()","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"        activate emptyTransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"        return transactionList:TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"    end","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"wcwy":50}},{"path":"docs/diagram/UiComponentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"hide circle","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"package \"UI Component\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    class Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"class Duke {","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    - parser:Parser","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    - transactions: TransactionList","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    - storage: Storage","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    + main()","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    + run()","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"class Ui {","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    - in: Scanner","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    - input: String","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    + printMessages(String... messages)","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    + readCommand(): String","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    + showErrorMessage(String errorMessage)","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    + showInfoMessage(String infoMessage)","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    + showGreeting()","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    + showHelp(String helpMessage)","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    + showExit()","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    + showTransactionAction(String infoMessage, String transactionDetails)","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    + showTransactionsList(String transactionsList, String listMessage)","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"package command \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"Duke -\u003e Ui","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"command -[dashed]left-\u003e Ui : uses \u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chydarren":38}},{"path":"docs/team/brianwongyunlong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brian-vb"},"content":"# Brian Wong Yun Long - Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"## Overview","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"brian-vb":6}},{"path":"docs/team/chiathinhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"Name: Chia Thin Hong","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"wcwy":1}},{"path":"docs/team/chuahanyongdarren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"# Chua Han Yong Darren - Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":5,"chydarren":1}},{"path":"docs/team/paullow.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"# Paul Solomon Low Si En - Project Portfolio Page","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"## Overview","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"paullowse":6}},{"path":"docs/team/yongchinhan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"# Yong Chin Han - Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"## Overview","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"Computer Engineering major  ","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"chinhan99":6}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import seedu.duke.parser.CommandParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    private Storage storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    private TransactionList transactions;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"    private Ui ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"    public Duke() { // TODO: Add a file path when implementing storage feature","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"            transactions \u003d new TransactionList(storage.initializeFile());","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"        } catch (MoolahException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"            Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"            transactions \u003d new TransactionList();","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"    public void run() {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"        while (!isExit) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"            try {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"                Command command \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"                command.execute(transactions, ui, storage);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"            } catch (MoolahException e) {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"                Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"        new Duke().run(); // TODO: Add a file path when implementing storage feature","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"chinhan99":15,"paullowse":28,"wcwy":2,"-":4}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.DateFormats;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.data.transaction.Transaction;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.StorageFileCorruptedException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.exception.StorageWriteErrorException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.parser.ParameterParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"import java.io.File;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.parser.CommandParser.getCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"public class Storage {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"    private static final String DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"    private static final int NUMBER_OF_STORED_PARAMETERS \u003d 5;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"    private static final int TENS \u003d 10;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"    private static final int HUNDREDS \u003d 100;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"    private static final int THOUSANDS \u003d 1000;","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"    private TransactionList storedTransactions;","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"    public Storage() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"        this.storedTransactions \u003d new TransactionList();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"     * Checks if duke.txt and the directory exists. If any of these does not exist, it would be created.","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"     * @return The duke.txt file which existed / is created.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"     * @throws IOException When there are issues creating the file.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"    private static File checkIfFileExist() throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"            directory.mkdir();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"chinhan99"},"content":"            Ui.printMessages(\"* Created new directory *\");","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"chinhan99"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"chinhan99"},"content":"            file.createNewFile();","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"chinhan99"},"content":"            Ui.printMessages(\"* Created new file for use *\");","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"chinhan99"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"chinhan99"},"content":"            Ui.printMessages(\"* Existing file detected *\");","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"chinhan99"},"content":"        return file;","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"chinhan99"},"content":"     * Initializes the duke.txt by checking its existence, then store the data values to the program.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"chinhan99"},"content":"     * @return The TransactionList storing entries which would be used in the program.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"chinhan99"},"content":"     * @throws StorageFileCorruptedException If there are errors due to corrupted duke.txt data.","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"chinhan99"},"content":"     * @throws StorageWriteErrorException     If the file could not be created or could not be written.","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"chinhan99"},"content":"    public TransactionList initializeFile() throws MoolahException {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"chinhan99"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"chinhan99"},"content":"            File file \u003d checkIfFileExist();","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"chinhan99"},"content":"            Scanner input \u003d new Scanner(file);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"chinhan99"},"content":"            storeFileValuesLocally(storedTransactions, input);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"chinhan99"},"content":"            Ui.printMessages(\"* duke.txt loaded successfully! *\");","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"chinhan99"},"content":"        } catch (MoolahException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"chinhan99"},"content":"            // Catch any parsing errors and throw the default StorageInputCorruptedException","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"chinhan99"},"content":"            throw new StorageFileCorruptedException();","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"chinhan99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"chinhan99"},"content":"            throw new StorageWriteErrorException();","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"chinhan99"},"content":"        return storedTransactions;","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"chinhan99"},"content":"     * Stores values from duke.txt to the program by parsing each line in the file.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"chinhan99"},"content":"     * @param storedTransactions The TransactionList to hold the stored values from the file.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"chinhan99"},"content":"     * @param input              The input from duke.txt to be processed.","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"chinhan99"},"content":"     * @throws MoolahException WHen there are parsing errors, due to corrupted data.","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"chinhan99"},"content":"    private void storeFileValuesLocally(TransactionList storedTransactions, Scanner input) throws MoolahException {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"chinhan99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DateFormats.DATE_STORAGE_OUTPUT_PATTERN.toString());","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"chinhan99"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"chinhan99"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"chinhan99"},"content":"            String line \u003d input.nextLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"chinhan99"},"content":"            String[] splits \u003d line.split(DELIMITER);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"chinhan99"},"content":"            if (splits.length !\u003d NUMBER_OF_STORED_PARAMETERS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"chinhan99"},"content":"                throw new StorageFileCorruptedException();","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"chinhan99"},"content":"            String type \u003d splits[0];","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"chinhan99"},"content":"            String category \u003d splits[1];","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"chinhan99"},"content":"            String amountString \u003d splits[2];","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"chinhan99"},"content":"            // Date has been formatted in duke.txt and must be synthesized into the correct string format before parsing","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"chinhan99"},"content":"            try {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"chinhan99"},"content":"                LocalDate date \u003d LocalDate.parse(splits[3], formatter);","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"chinhan99"},"content":"                String dateString \u003d synthesizeDateString(date);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"chinhan99"},"content":"                String description \u003d splits[4];","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"chinhan99"},"content":"                String parametersInput \u003d \"t/\" + type + \" c/\" + category + \" a/\" + amountString + \" d/\" + dateString","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"chinhan99"},"content":"                        + \" i/\" + description;","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"chinhan99"},"content":"                command \u003d getCommand(\"add\", parametersInput);","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"chinhan99"},"content":"                ParameterParser.parse(command, parametersInput);","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"chinhan99"},"content":"                // amount would be converted into an integer before being used in the addition of transaction locally","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"chinhan99"},"content":"                int amount \u003d Integer.parseInt(splits[2]);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"chinhan99"},"content":"                switch (type) {","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"chinhan99"},"content":"                case \"expense\":","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"chinhan99"},"content":"                    storedTransactions.addExpenseDuringStorage(description, amount, category, date);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"chinhan99"},"content":"                    break;","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"chinhan99"},"content":"                case \"income\":","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"chinhan99"},"content":"                    storedTransactions.addIncomeDuringStorage(description, amount, category, date);","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"chinhan99"},"content":"                    break;","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"chinhan99"},"content":"                default:","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"chinhan99"},"content":"                    throw new StorageFileCorruptedException();","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"chinhan99"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"chinhan99"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"chinhan99"},"content":"                // If the date format is incorrect, which is due to corrupted date information","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"chinhan99"},"content":"                throw new StorageFileCorruptedException();","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"chinhan99"},"content":"     * Synthesizes the date into dateString , which would be in the correct format to process.","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"chinhan99"},"content":"     * @param date which would be processed into a string.","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"chinhan99"},"content":"     * @return dateString, in the correct format to be parsed.","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"chinhan99"},"content":"    private String synthesizeDateString(LocalDate date) {","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"chinhan99"},"content":"        String dateOfMonth \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"chinhan99"},"content":"        String month \u003d String.valueOf(date.getMonthValue());","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"chinhan99"},"content":"        String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"chinhan99"},"content":"        if (date.getMonthValue() \u003c TENS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"chinhan99"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"chinhan99"},"content":"        if (date.getDayOfMonth() \u003c TENS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"chinhan99"},"content":"            dateOfMonth \u003d \"0\" + dateOfMonth;","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"chinhan99"},"content":"        if (date.getYear() \u003c TENS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"chinhan99"},"content":"            year \u003d \"000\" + year;","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"chinhan99"},"content":"        } else if (date.getYear() \u003c HUNDREDS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"chinhan99"},"content":"            year \u003d \"00\" + year;","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"chinhan99"},"content":"        } else if (date.getYear() \u003c THOUSANDS) {","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"chinhan99"},"content":"            year \u003d \"0\" + year;","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"chinhan99"},"content":"        String dateString \u003d dateOfMonth + month + year;","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"chinhan99"},"content":"        return dateString;","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"chinhan99"},"content":"     * The function called each time there are changes to the transactions Arraylist.","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"chinhan99"},"content":"     * @param transactions The updated Arraylist.","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"chinhan99"},"content":"     * @throws IOException If there are issues writing to the duke.txt file.","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"chinhan99"},"content":"    public void writeToFile(ArrayList\u003cTransaction\u003e transactions) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"chinhan99"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"chinhan99"},"content":"        String transactionEntry \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"chinhan99"},"content":"        for (Transaction transaction : transactions) {","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"chinhan99"},"content":"            transactionEntry \u003d transaction.getType() + \" | \" + transaction.getCategory() + \" | \"","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"chinhan99"},"content":"                    + transaction.getAmount() + \" | \" + transaction.getDate() + \" | \"","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"chinhan99"},"content":"                    + transaction.getDescription();","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"chinhan99"},"content":"            fileWriter.write(transactionEntry + System.lineSeparator());","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"chinhan99"},"content":"        fileWriter.close();","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chinhan99":193,"paullowse":5,"chydarren":1}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.DateFormats.DATE_OUTPUT_PATTERN;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_CURRENT_BUDGET;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.InfoMessages.INFO_DIVIDER;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.InfoMessages.INFO_GREET;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.InfoMessages.INFO_HELP_GREET;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.InfoMessages.INFO_HELP_PROMPT;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.InfoMessages.INFO_REMAINING_BUDGET;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"public class Ui {","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    private String input;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    private Scanner in;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"     * Prints each message from a variable messages string line by line into the output stream.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     * @param messages A string of variable arguments.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    public static void printMessages(String... messages) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"        System.out.println(INFO_DIVIDER);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"        // Prints the string of arguments line by line in a loop","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"        for (String message : messages) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"            System.out.println(message);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"        System.out.println(INFO_DIVIDER);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"     * Initialises the variables of the Ui class.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"    public Ui() {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"     * Reads the command from the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"     * @return The command from the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"    public String readCommand() {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"        return input;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"     * Prepares the error message to be displayed to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"     * @param message An error message when an exception is handled by the program.","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"    public static void showErrorMessage(String message) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"        printMessages(message);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"     * Prepares the information message to be displayed to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"     * @param message An information message that describes the functionality of the program.","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"    public static void showInfoMessage(String message) {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"        printMessages(message);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"     * Prepares the greeting messages to be displayed to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"    public static void showGreeting() {","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"        printMessages(INFO_GREET.toString(), INFO_CURRENT_BUDGET.toString() + Budget.getBudget(),","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"                INFO_HELP_PROMPT.toString()","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"chinhan99"},"content":"     * Prepares the help messages to be displayed to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"chinhan99"},"content":"     * @param message A message that specifies the details of how to use the program.","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"chinhan99"},"content":"    public static void showHelp(String message) {","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"chinhan99"},"content":"        printMessages(INFO_HELP_GREET.toString(), message);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"chinhan99"},"content":"     * Prepares the transaction list messages to be displayed to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"chinhan99"},"content":"     * @param list    A string containing the formatted transaction list.","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"chinhan99"},"content":"     * @param message A message that complements with the transactions list.","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"chinhan99"},"content":"    public static void showList(String list, String message) {","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"chinhan99"},"content":"        printMessages(message, list);","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"chinhan99"},"content":"     * Prepares the stats list messages to be displayed to the user.","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"chinhan99"},"content":"     * @param list    A string containing the formatted transaction list.","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"chinhan99"},"content":"     * @param message A message that complements with the transactions list.","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"chinhan99"},"content":"    public static void showStatsList(String list, String message, String incomeMessage,","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"chinhan99"},"content":"                                    String expenseMessage, String savingsMessage) {","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"chinhan99"},"content":"        printMessages(message, list, incomeMessage, expenseMessage, savingsMessage);","lastModifiedDate":"2022-10-22"},{"lineNumber":114,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"chinhan99"},"content":"     * Prepares the messages to be displayed to the user when add or delete has been performed on","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"chinhan99"},"content":"     * the transaction list.","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"chinhan99"},"content":"     * @param message            A message that describes the functionality of the program.","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"chinhan99"},"content":"     * @param transactionDetails Details of the action that has been performed on the transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"chinhan99"},"content":"     * @param budgetInfo         A message that contains the monthly budget information.","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"chinhan99"},"content":"    public static void showTransactionAction(String message, String transactionDetails, String budgetInfo) {","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"chinhan99"},"content":"        printMessages(message, transactionDetails, INFO_REMAINING_BUDGET + budgetInfo);","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"chinhan99"},"content":"    // A temporary overload method for backward-compatibility for delete command","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"chinhan99"},"content":"    public static void showTransactionAction(String message, String transactionDetails) {","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"chinhan99"},"content":"        printMessages(message, transactionDetails);","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"chinhan99"},"content":"     * Returns the today\u0027s date in MMM dd yyyy format.","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"chinhan99"},"content":"     * @return Formatted today\u0027s date","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"chinhan99"},"content":"    public static String showDateOfTheDay() {","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"chinhan99"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"chinhan99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_OUTPUT_PATTERN.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"chinhan99"},"content":"        return todayDate.format(formatter);","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"chinhan99":63,"paullowse":20,"wcwy":10,"chydarren":50}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.Budget;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Transaction;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Expense;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Income;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.InputTransactionInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.StorageWriteErrorException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.MaximumTransactionCountException;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_AMOUNT;","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DATE;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_TYPE;","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.Constants.MAX_TRANSACTIONS_COUNT;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.InfoMessages.INFO_ADD_EXPENSE;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.InfoMessages.INFO_ADD_INCOME;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":" * Represents an add command object that will execute the operations for Add command.","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_WORD \u003d \"ADD\";","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To add a new transaction entry, which could be \"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"            + \"either an \\\"income\\\" or an \\\"expense\\\" into the transaction list.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: add t/TYPE c/CATEGORY a/AMOUNT d/DATE i/DESCRIPTION\";","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"            + \"TYPE: The type of transaction. Only \\\"income\\\" or \\\"expense\\\" is accepted.\" + LINE_SEPARATOR","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"            + \"CATEGORY: A category for the transaction. Only string containing alphabets is accepted.\"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"            + \"AMOUNT: Value of the transaction in numerical form. Only integer within 0 and 10000000 is accepted.\"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"            + LINE_SEPARATOR + \"DATE: Date of the transaction. The format must be in \\\"yyyyMMdd\\\".\" + LINE_SEPARATOR","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chinhan99"},"content":"            + \"DESCRIPTION: More information regarding the transaction, written without any space.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chinhan99"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"chinhan99"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"chinhan99"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"chinhan99"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO + LINE_SEPARATOR;","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"chinhan99"},"content":"    private static final Logger addLogger \u003d Logger.getLogger(AddCommand.class.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    private String type;","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"    private String description;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"    private int amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"    private String category;","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"    private LocalDate date;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"    private Transaction transactionCreated;","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"    public AddCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"     * Initialises the variables of the AddCommand class.","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"    public AddCommand(String type, String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"     * Gets the mandatory tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all mandatory tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"    public String[] getMandatoryTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"        String[] mandatoryTags \u003d new String[]{","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_TYPE,","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_AMOUNT,","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_DATE,","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_DESCRIPTION","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"        return mandatoryTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"wcwy"},"content":"    public void setType(String type) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"wcwy"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"wcwy"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"wcwy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"wcwy"},"content":"    public void setAmount(int amount) {","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"wcwy"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"wcwy"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"wcwy"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"wcwy"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"wcwy"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":130,"author":{"gitId":"wcwy"},"content":"    public void setTransactionCreated(Transaction transaction) {","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"wcwy"},"content":"        this.transactionCreated \u003d transaction;","lastModifiedDate":"2022-10-22"},{"lineNumber":132,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"wcwy"},"content":"     * Executes the \"add\" command. Checks and parses the necessary parameters before adding transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"wcwy"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"wcwy"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"wcwy"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"wcwy"},"content":"     * @throws InputTransactionInvalidTypeException If the type of transaction is not recognised.","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"wcwy"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"chinhan99"},"content":"        //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"chinhan99"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"chinhan99"},"content":"            addLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"chinhan99"},"content":"            addLogger.log(Level.INFO, \"Add Command checks the type of the transaction \"","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"chinhan99"},"content":"                    + \"before adding into the transaction class.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"chinhan99"},"content":"            assert date !\u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":151,"author":{"gitId":"wcwy"},"content":"            //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"wcwy"},"content":"            checkTransactionCapacity(transactions);","lastModifiedDate":"2022-10-22"},{"lineNumber":153,"author":{"gitId":"wcwy"},"content":"            String messageBanner \u003d addTransaction(transactions);","lastModifiedDate":"2022-10-22"},{"lineNumber":154,"author":{"gitId":"wcwy"},"content":"            long addedMonthExpenseSum \u003d transactions.calculateMonthlyTotalExpense(date);","lastModifiedDate":"2022-10-22"},{"lineNumber":155,"author":{"gitId":"wcwy"},"content":"            String budgetLeft \u003d Budget.getBudgetLeft(addedMonthExpenseSum);","lastModifiedDate":"2022-10-22"},{"lineNumber":156,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":157,"author":{"gitId":"wcwy"},"content":"            Ui.showTransactionAction(messageBanner, transactionCreated.toString(), budgetLeft);","lastModifiedDate":"2022-10-22"},{"lineNumber":158,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":159,"author":{"gitId":"chinhan99"},"content":"            //@@author chinhan99","lastModifiedDate":"2022-10-22"},{"lineNumber":160,"author":{"gitId":"chinhan99"},"content":"            storage.writeToFile(transactions.getTransactions());","lastModifiedDate":"2022-10-22"},{"lineNumber":161,"author":{"gitId":"chinhan99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":162,"author":{"gitId":"chinhan99"},"content":"            throw new StorageWriteErrorException();","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"chinhan99"},"content":"        addLogger.log(Level.INFO, \"End of Add command.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":166,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"wcwy"},"content":"     * Checks if the number of transactions in the transaction list has reached the capacity.","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"wcwy"},"content":"     * This prevents the number of transactions added to the list to be more than the capacity.","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"wcwy"},"content":"     * \u003cp\u003eWith this, it is possible for the application to compute the maximum and minimum value budget difference","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"wcwy"},"content":"     * to prevent integer overflow.","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"wcwy"},"content":"     * @param transactions The list of transactions in the application.","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"wcwy"},"content":"     * @throws MaximumTransactionCountException If the transaction list capacity has been reached.","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"wcwy"},"content":"    private static void checkTransactionCapacity(TransactionList transactions) throws MaximumTransactionCountException {","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"wcwy"},"content":"        // The expected maximum number of transactions allowed to store is only one million.","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"wcwy"},"content":"        if (transactions.size() \u003d\u003d MAX_TRANSACTIONS_COUNT) {","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"wcwy"},"content":"            addLogger.log(Level.WARNING, \"A transaction is attempted to be stored beyond its capacity\");","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"wcwy"},"content":"            throw new MaximumTransactionCountException();","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"wcwy"},"content":"     * Adds the transaction into the transaction list based on the parameters stored by the AddCommand object.","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"wcwy"},"content":"     * \u003cp\u003eStore the transaction object created in transactionCreated and return the message banner based on the","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"wcwy"},"content":"     * transaction type created.","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"wcwy"},"content":"     * @param transactions The list of transactions in the application.","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"wcwy"},"content":"     * @returns A string containing the message banner based on the type of transaction created.","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"wcwy"},"content":"     * @throws InputTransactionInvalidTypeException If the type of the transactions","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"wcwy"},"content":"    private String addTransaction(TransactionList transactions) throws InputTransactionInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"wcwy"},"content":"        String messageBanner \u003d \"\";","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"wcwy"},"content":"        Transaction transaction;","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"wcwy"},"content":"        switch (type) {","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"wcwy"},"content":"        case Expense.TRANSACTION_NAME:","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"wcwy"},"content":"            transaction \u003d transactions.addExpense(description, amount, category, date);","lastModifiedDate":"2022-10-22"},{"lineNumber":203,"author":{"gitId":"wcwy"},"content":"            messageBanner \u003d INFO_ADD_EXPENSE.toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"wcwy"},"content":"            addLogger.log(Level.INFO, \"New expense transaction has been added \"","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"wcwy"},"content":"                    + \"and the UI should display acknowledgment message respectively.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"wcwy"},"content":"        case Income.TRANSACTION_NAME:","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"wcwy"},"content":"            transaction \u003d transactions.addIncome(description, amount, category, date);","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"wcwy"},"content":"            messageBanner \u003d INFO_ADD_INCOME.toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"wcwy"},"content":"            addLogger.log(Level.INFO, \"New income transaction has been added \"","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"wcwy"},"content":"                    + \"and the UI should display acknowledgment message respectively.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"wcwy"},"content":"        default:","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"wcwy"},"content":"            addLogger.log(Level.SEVERE, \"The parsed type of transaction stored in addCommand is unknown!\");","lastModifiedDate":"2022-10-22"},{"lineNumber":215,"author":{"gitId":"wcwy"},"content":"            throw new InputTransactionInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"wcwy"},"content":"        setTransactionCreated(transaction);","lastModifiedDate":"2022-10-22"},{"lineNumber":218,"author":{"gitId":"wcwy"},"content":"        return messageBanner;","lastModifiedDate":"2022-10-22"},{"lineNumber":219,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":222,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chinhan99":62,"paullowse":54,"wcwy":116}},{"path":"src/main/java/seedu/duke/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_EXIT;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":" * Represents a bye command object that will execute the operations for Bye command.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_WORD \u003d \"BYE\";","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To exit the application.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: bye\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information: -NIL-\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"     * Executes the \"bye\" command.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"        Ui.showInfoMessage(INFO_EXIT.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":57}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":" * Represents an object that can be inherited by other command objects.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"public abstract class Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"    public static String COMMAND_WORD;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"    public static String COMMAND_DESCRIPTION;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"    public static String COMMAND_USAGE;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    public static String COMMAND_PARAMETERS_INFO;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"     * Get the default mandatory tags of the command (no mandatory tag).","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"     * To be overridden by subclasses which the command requires mandatory tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all mandatory tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"    public String[] getMandatoryTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"        String[] mandatoryTags \u003d new String[0];","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"        return mandatoryTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"     * Gets the default optional tags of the command (no optional tag).","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"     * To be overridden by subclasses which the command requires optional tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all optional tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    public String[] getOptionalTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"        String[] optionalTags \u003d new String[0];","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"        return optionalTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"    public abstract void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    // Methods below are to be overridden by the subclass whenever applicable","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"    public void setType(String type) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"    public void setAmount(int amount) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"    public void setEntryNumber(int entryNumber) {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"    public void setIsDetailedOption(boolean isDetailed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"    public void setStatsType(String statsType) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"    public void setStatsMonth(int month) {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"    public void setStatsYear(int year) {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"    public void setStatsNumber(int number) {","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"    public void setStatsPeriod(String period) {","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chinhan99":12,"paullowse":81,"wcwy":10}},{"path":"src/main/java/seedu/duke/command/CommandTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"public class CommandTag {","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_TRANSACTION_TYPE \u003d \"t/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_TRANSACTION_CATEGORY \u003d \"c/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_TRANSACTION_AMOUNT \u003d \"a/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_TRANSACTION_DATE \u003d \"d/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_TRANSACTION_DESCRIPTION \u003d \"i/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_GLOBAL_ENTRY_NUMBER \u003d \"e/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_GLOBAL_MONTH \u003d \"m/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_GLOBAL_YEAR \u003d \"y/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_GLOBAL_NUMBER \u003d \"n/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_GLOBAL_PERIOD \u003d \"p/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_HELP_OPTION \u003d \"o/\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_TAG_STATS_TYPE \u003d \"s/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"wcwy":17}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.GlobalInvalidIndexException;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.StorageWriteErrorException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_ENTRY_NUMBER;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.common.InfoMessages.INFO_DELETE;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":" * Represents a delete command object that will execute the operations for Delete command.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_WORD \u003d \"DELETE\";","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To delete a specific entry in the list of transactions.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: delete e/ENTRY\";","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"brian-vb"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"brian-vb"},"content":"            + \"ENTRY: The entry number of the transaction. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"            + \"Type \\\"list\\\" to list all the entry numbers of transaction.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"brian-vb"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"brian-vb"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"brian-vb"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"brian-vb"},"content":"    // The optional tags that may exist in the user input","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"brian-vb"},"content":"    private static final Logger deleteLogger \u003d Logger.getLogger(DeleteCommand.class.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"brian-vb"},"content":"    private int entryNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"    public DeleteCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"     * Gets the mandatory tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all mandatory tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"    public String[] getMandatoryTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"        // The mandatory tags that must exist in the user input","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"        String[] mandatoryTags \u003d new String[]{COMMAND_TAG_GLOBAL_ENTRY_NUMBER};","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"        return mandatoryTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"    public void setEntryNumber(int entryNumber) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"        this.entryNumber \u003d entryNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"brian-vb"},"content":"     * Executes the \"delete\" command. Checks and parses the necessary parameters before deleting transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"brian-vb"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"brian-vb"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"brian-vb"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"brian-vb"},"content":"     * @throws GlobalInvalidIndexException If the index inputted is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"brian-vb"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"brian-vb"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"brian-vb"},"content":"        /*","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"brian-vb"},"content":"        Checks if userInput is in the correct input format by further parsing,","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"brian-vb"},"content":"        before adding entry to arraylist","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"brian-vb"},"content":"        */","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"brian-vb"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"brian-vb"},"content":"            deleteLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"brian-vb"},"content":"            deleteLogger.log(Level.INFO, \"Delete Command checks whether the index is valid \"","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"brian-vb"},"content":"                    + \"before executing the command.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"brian-vb"},"content":"            boolean isInputValid \u003d true;","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"brian-vb"},"content":"            int index \u003d entryNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"brian-vb"},"content":"            int numberOfTransactions;","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"brian-vb"},"content":"            numberOfTransactions \u003d transactions.size();","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"brian-vb"},"content":"            if ((index \u003e numberOfTransactions) || (index \u003c\u003d 0)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"brian-vb"},"content":"                isInputValid \u003d false;","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"brian-vb"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"brian-vb"},"content":"            assert index \u003e 0;","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"brian-vb"},"content":"            if (isInputValid) {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"brian-vb"},"content":"                String transaction \u003d transactions.deleteTransaction(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"brian-vb"},"content":"                Ui.showTransactionAction(INFO_DELETE.toString(), transaction);","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"brian-vb"},"content":"                deleteLogger.log(Level.INFO, \"The requested transaction has been deleted \"","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"brian-vb"},"content":"                        + \"and the UI should display the confirmation message respectively.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"brian-vb"},"content":"                storage.writeToFile(transactions.getTransactions());","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"brian-vb"},"content":"            } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"brian-vb"},"content":"                deleteLogger.log(Level.WARNING, \"InvalidIndexException thrown when the index \"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"brian-vb"},"content":"                        + \"is invalid.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"brian-vb"},"content":"                throw new GlobalInvalidIndexException();","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"brian-vb"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"brian-vb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"brian-vb"},"content":"            throw new StorageWriteErrorException();","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"brian-vb"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"brian-vb"},"content":"        deleteLogger.log(Level.INFO, \"This is the end of the delete command.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":36,"brian-vb":91}},{"path":"src/main/java/seedu/duke/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_ENTRY_NUMBER;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_TYPE;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DATE;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":" * Represents an edit command object that will execute the operations for Edit command.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_WORD \u003d \"EDIT\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To edit a specific entry in the list of transactions.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: \"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"            + \"edit e/ENTRY [t/TYPE] [c/CATEGORY] [a/AMOUNT] [d/DATE] [i/DESCRIPTION]\";","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"brian-vb"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"brian-vb"},"content":"            + \"ENTRY: The entry number of the transaction. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"            + \"Type \\\"list\\\" to list all the entry numbers of transaction.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"brian-vb"},"content":"            + \"(Optional) TYPE: The type of transaction. Only \\\"income\\\" or \\\"expense\\\" is accepted.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"brian-vb"},"content":"            + \"(Optional) CATEGORY: A category for the transaction. Only string containing alphabets is accepted.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"brian-vb"},"content":"            + \"(Optional) AMOUNT: Value of the transaction in numerical form. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"brian-vb"},"content":"            + \"Only integer within 0 and 10000000 is accepted.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"brian-vb"},"content":"            + \"(Optional) DATE: Date of the transaction. The format must be in \\\"yyyyMMdd\\\".\"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"brian-vb"},"content":"            + \"(Optional) DESCRIPTION: More information regarding the transaction, written without any space.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"brian-vb"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"brian-vb"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"brian-vb"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"    private int entryNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"    private String type;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"    private String description;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"    private int amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"    private String category;","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"    private LocalDate date;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"    public EditCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"     * Gets the mandatory tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all mandatory tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"    public String[] getMandatoryTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"        String[] mandatoryTags \u003d new String[]{COMMAND_TAG_GLOBAL_ENTRY_NUMBER};","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"        return mandatoryTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"     * Gets the optional tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all optional tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"    public String[] getOptionalTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"        String[] optionalTags \u003d new String[]{","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_TYPE,","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_AMOUNT,","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_DATE,","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_DESCRIPTION","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"        return optionalTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"    public void setEntryNumber(int entryNumber) {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"        this.entryNumber \u003d entryNumber;","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"    public void setType(String type) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"paullowse"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"    public void setAmount(int amount) {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"paullowse"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"paullowse"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"paullowse"},"content":"     * Executes the \"edit\" command.","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"paullowse"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"paullowse"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"paullowse"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"paullowse"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"paullowse"},"content":"        // Dummy output for test","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"paullowse"},"content":"        System.out.println(String.format(\"Entry number: %d\\nType: %s\\nDesc: %s\\n$: %d\\nCat: %s, Date: %s\",","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"paullowse"},"content":"                entryNumber,","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"paullowse"},"content":"                type,","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"paullowse"},"content":"                description,","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"paullowse"},"content":"                amount,","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"paullowse"},"content":"                category,","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"paullowse"},"content":"                date.toString()));","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":100,"brian-vb":51}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.FindTransactionMissingKeywordsException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.common.InfoMessages.INFO_LIST_FILTERED;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.common.InfoMessages.INFO_LIST_UNFILTERED;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":" * Represents a find command object that will execute the operations for Find command.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_WORD \u003d \"FIND\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To find specific transaction(s) based \"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"            + \"on any keywords inputted by the user.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: find KEYWORDS\";","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"            + \"KEYWORDS: Any partial or full keyword(s) that matches the details of the transaction, \"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"            + \"such as type, category, amount, date or description.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"    protected String keywords;","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the FindCommand class.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"     * @param keywords A string containing the keywords used in the search expression.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"     * Checks the format of find to ensure that it contains keywords used in the search expression.","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"     * @param keywords A string containing the keywords used in the search expression.","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"     * @throws FindTransactionMissingKeywordsException If a user does not enter a search expression for Find.","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"    public void checkFindFormat(String keywords) throws FindTransactionMissingKeywordsException {","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"        if (keywords.isBlank()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"            throw new FindTransactionMissingKeywordsException();","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"     * Executes the \"Find\" command. Checks that the input contain a search expression, i.e. keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"     * before performing any search on the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"        // Checks the format of find to ensure that it contains keywords used in the search expression","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"        checkFindFormat(keywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"        assert !keywords.isBlank();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"        String transactionsList \u003d transactions.findTransactions(keywords);","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"        if (transactionsList.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"            ui.showInfoMessage(INFO_LIST_UNFILTERED.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"        assert !transactionsList.isEmpty();","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"chydarren"},"content":"        ui.showList(transactionsList, INFO_LIST_FILTERED.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"paullowse":12,"chydarren":86}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_HELP_OPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":" * Represents a help command object that will execute the operations for Help command.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_WORD \u003d \"HELP\";","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To display a list of available commands \"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"            + \"with their respective expected parameters.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"            + \"Type \\\"help o/detailed\\\" for a detailed version of all parameters used.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: help [o/detailed]\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"            + \"(Optional) o/detailed - Detailed version of guide.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO + LINE_SEPARATOR;","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"    private boolean isDetailed;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"     * Instantiates the ListCommand class with required variables.","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"    public HelpCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"        this.isDetailed \u003d false;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"     * Sets a boolean value to indicate if the user chooses to display the help message in detail.","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"     * \u003cp\u003eWhen the boolean isDetailed is set to true, the help command will display the detailed help messages","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"     * to the user.","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"     * @param isDetailed A boolean indicating if the user chooses to display the help message in detail.","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"wcwy"},"content":"    public void setIsDetailedOption(boolean isDetailed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"wcwy"},"content":"        this.isDetailed \u003d isDetailed;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"wcwy"},"content":"     * Gets the optional tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"wcwy"},"content":"     * @return A string array containing all optional tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"wcwy"},"content":"    public String[] getOptionalTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"wcwy"},"content":"        String[] optionalTags \u003d new String[]{","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"wcwy"},"content":"            COMMAND_TAG_HELP_OPTION","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"wcwy"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"wcwy"},"content":"        return optionalTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"wcwy"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"wcwy"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"wcwy"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"wcwy"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"wcwy"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"wcwy"},"content":"        String helpMessage \u003d \"\";","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"wcwy"},"content":"        if (isDetailed) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"wcwy"},"content":"            helpMessage \u003d generateDetailedHelp();","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"wcwy"},"content":"        } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"wcwy"},"content":"            helpMessage \u003d generateBasicHelp();","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"wcwy"},"content":"        Ui.showHelp(helpMessage);","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"wcwy"},"content":"     * Consolidates all the basic help messages from the available commands and returns it.","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"wcwy"},"content":"     * @return A string containing all basic help messages of valid commands.","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"wcwy"},"content":"    private String generateBasicHelp() {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"wcwy"},"content":"        String helpMessage \u003d HelpCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"wcwy"},"content":"                + AddCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"wcwy"},"content":"                + ListCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"wcwy"},"content":"                + FindCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"wcwy"},"content":"                + StatsCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"wcwy"},"content":"                + EditCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"wcwy"},"content":"                + DeleteCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"wcwy"},"content":"                + PurgeCommand.COMMAND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"wcwy"},"content":"                + ByeCommand.COMMAND_HELP;","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"wcwy"},"content":"        return helpMessage;","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"wcwy"},"content":"     * Consolidates all the detailed help messages from the available commands and returns it.","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"wcwy"},"content":"     * @return A string containing all detailed help messages of valid commands.","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"wcwy"},"content":"    private String generateDetailedHelp() {","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"wcwy"},"content":"        String helpMessage \u003d HelpCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"wcwy"},"content":"                + AddCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"wcwy"},"content":"                + ListCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"wcwy"},"content":"                + FindCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"wcwy"},"content":"                + StatsCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"wcwy"},"content":"                + EditCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"wcwy"},"content":"                + DeleteCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"wcwy"},"content":"                + PurgeCommand.COMMAND_DETAILED_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"wcwy"},"content":"                + ByeCommand.COMMAND_DETAILED_HELP;","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"wcwy"},"content":"        return helpMessage;","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":19,"wcwy":117,"chydarren":4}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"import seedu.duke.exception.GlobalMissingTagException;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"import seedu.duke.exception.InputTransactionInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_TYPE;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DATE;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_MONTH;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_YEAR;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.common.InfoMessages.INFO_LIST;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"import static seedu.duke.common.InfoMessages.INFO_LIST_EMPTY;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":" * Represents a list command object that will execute the operations for List command.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_WORD \u003d \"LIST\";","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To list all or some transactions based on selection.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"            + \" Note that the tags will be joint in the filter based on the \u0027AND\u0027 operation.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: list [t/TYPE] [c/CATEGORY] [d/DATE] [m/MONTH] [y/YEAR]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            + \"(Optional) TYPE - The type of transaction. Only \\\"income\\\" or \\\"expense\\\" is accepted.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            + \"(Optional) CATEGORY: A category for the transaction. Only string containing alphabets is accepted.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            + \"(Optional) DATE: Date of the transaction. The format must be in \\\"yyyyMMdd\\\".\"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"            + \"(Optional) MONTH: Month of the transaction. Only integers within 1 to 12 are accepted. Note that\"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"            + \" month must be accompanied by a year.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"            + \"(Optional) YEAR: Year of the transaction. Only integers from 1000 onwards are accepted.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO + LINE_SEPARATOR;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"    private static final Logger listLogger \u003d Logger.getLogger(ListCommand.class.getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"    private String category;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"    private LocalDate date;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"    private String type;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"    private int month;","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    private int year;","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"     * Initialises the variables of the ListCommand class.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"    public ListCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"        category \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"        date \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"        type \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"        month \u003d -1;","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"        year \u003d -1;","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"     * Gets the optional tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all optional tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"    public String[] getOptionalTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"        String[] optionalTags \u003d new String[]{","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_TYPE,","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_TRANSACTION_DATE,","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_MONTH,","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_YEAR","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"        return optionalTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"    public void setType(String type) {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"    public void setStatsMonth(int month) {","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"        this.month \u003d month;","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"    public void setStatsYear(int year) {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"        this.year \u003d year;","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"chydarren"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"chydarren"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"chydarren"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"chydarren"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"        listLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"        listLogger.log(Level.INFO, \"Entering execution of the List command.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"        listTransactions(transactions, type, category, date, month, year);","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"chydarren"},"content":"     * List all or some transactions based on selection.","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"chydarren"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"chydarren"},"content":"     * @param type         The type of transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"chydarren"},"content":"     * @param category     A category for the transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"chydarren"},"content":"     * @param date         Date of the transaction with format in \"yyyyMMdd\".","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"chydarren"},"content":"     * @throws InputTransactionInvalidTypeException If class type cannot be found in the packages.","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"chydarren"},"content":"    private static void listTransactions(TransactionList transactions, String type, String category, LocalDate date,","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"chydarren"},"content":"                                         int month, int year)","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"chydarren"},"content":"            throws InputTransactionInvalidTypeException, GlobalMissingTagException {","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"chydarren"},"content":"        if (month !\u003d -1 \u0026\u0026 year \u003d\u003d -1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"chydarren"},"content":"            listLogger.log(Level.WARNING, \"An exception has been caught as a month was given without a year.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"chydarren"},"content":"            throw new GlobalMissingTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"chydarren"},"content":"        String transactionsList \u003d transactions.listTransactions(type, category, date, month, year);","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"chydarren"},"content":"        if (transactionsList.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"chydarren"},"content":"            listLogger.log(Level.INFO, \"Transactions list is empty as there are no transactions available.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"chydarren"},"content":"            Ui.showInfoMessage(INFO_LIST_EMPTY.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"chydarren"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"chydarren"},"content":"        assert !transactionsList.isEmpty();","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"chydarren"},"content":"        listLogger.log(Level.INFO, \"Transactions list is found to contain transaction records.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"chydarren"},"content":"        Ui.showList(transactionsList, INFO_LIST.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":86,"chydarren":92}},{"path":"src/main/java/seedu/duke/command/PurgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.StorageWriteErrorException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.common.InfoMessages.INFO_PURGE;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.common.InfoMessages.INFO_PURGE_ABORT;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.common.InfoMessages.INFO_PURGE_EMPTY;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"import static seedu.duke.common.InfoMessages.INFO_PURGE_WARNING;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":" * Represents a purge command object that will execute the operations for Purge command.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"public class PurgeCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_WORD \u003d \"PURGE\";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To purge a all entries in the list of transactions.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: purge\";","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"brian-vb"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:  -NIL-\";","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"brian-vb"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"brian-vb"},"content":"            + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"brian-vb"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"brian-vb"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"brian-vb"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"brian-vb"},"content":"    private static final Logger purgeLogger \u003d Logger.getLogger(AddCommand.class.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"    public PurgeCommand() {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"brian-vb"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"brian-vb"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"brian-vb"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"brian-vb"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"brian-vb"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"brian-vb"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"brian-vb"},"content":"        // Shows confirmation prompt before deleting all transactions","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"brian-vb"},"content":"        purgeLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"brian-vb"},"content":"        purgeLogger.log(Level.INFO, \"Purge Command checks if there are no transactions\"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"brian-vb"},"content":"                + \" to be purged. If so, the command is aborted.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"brian-vb"},"content":"        boolean check \u003d isEmpty(transactions);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"brian-vb"},"content":"        if (check) {","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"brian-vb"},"content":"            Ui.showInfoMessage(INFO_PURGE_EMPTY.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"brian-vb"},"content":"            purgeLogger.log(Level.INFO, \"The transactions list is found to be empty\"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"brian-vb"},"content":"                    + \" and the UI should display that information to the user respectively.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"brian-vb"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"brian-vb"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"brian-vb"},"content":"        Ui.showInfoMessage(INFO_PURGE_WARNING.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"brian-vb"},"content":"        purgeLogger.log(Level.INFO, \"The UI should display a confirmation prompt\"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"brian-vb"},"content":"                + \" for which the User would need to respond.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"brian-vb"},"content":"        String input \u003d ui.readCommand();","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"brian-vb"},"content":"        if (input.equals(\"Y\")) {","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"brian-vb"},"content":"            try {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"brian-vb"},"content":"                transactions.purgeTransactions();","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"brian-vb"},"content":"                assert PurgeCommand.isEmpty(transactions);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"brian-vb"},"content":"                Ui.showInfoMessage(INFO_PURGE.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"brian-vb"},"content":"                purgeLogger.log(Level.INFO, \"The transactions list is now empty\"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"brian-vb"},"content":"                        + \" and the UI should display that information to the user respectively.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"brian-vb"},"content":"                storage.writeToFile(transactions.getTransactions());","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"brian-vb"},"content":"                purgeLogger.log(Level.INFO, \"The end of the Purge Command.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"brian-vb"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"brian-vb"},"content":"                throw new StorageWriteErrorException();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"brian-vb"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"brian-vb"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"brian-vb"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"brian-vb"},"content":"        Ui.showInfoMessage(INFO_PURGE_ABORT.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"brian-vb"},"content":"        purgeLogger.log(Level.INFO, \"The user would have responded to not proceed with the command\"","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"brian-vb"},"content":"                + \" and the UI should display that information to abort the command respectively.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"brian-vb"},"content":"        purgeLogger.log(Level.INFO, \"The end of the Purge Command.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"brian-vb"},"content":"    public static boolean isEmpty(TransactionList transactions) {","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"brian-vb"},"content":"        int size \u003d transactions.size();","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"brian-vb"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"brian-vb"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"brian-vb"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"brian-vb"},"content":"        return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"paullowse":18,"brian-vb":98}},{"path":"src/main/java/seedu/duke/command/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import seedu.duke.data.transaction.Transaction;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.StatsInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_STATS_TYPE;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_MONTH;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_NUMBER;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_PERIOD;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_YEAR;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_CATEGORIES;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_EMPTY;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_EXPENSES;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_INCOME;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_SAVINGS;","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_SUMMARY_HEADER;","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_TIME;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":" * Represents a get command object that will execute the operations for Get command.","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    // The command word used to trigger the execution of Moolah Manager\u0027s operations","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_WORD \u003d \"STATS\";","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"    // The description for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_DESCRIPTION \u003d \"To get statistics of the transactions such \"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"            + \"as the total savings for each category, summary of expenditure, etc.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"    // The guiding information for the usage of command","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_USAGE \u003d \"Usage: stats s/STATISTICS_TYPE\";","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"    // The formatting information for the parameters used by the command","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_PARAMETERS_INFO \u003d \"Parameters information:\"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"            + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"            + \"STATISTICS_TYPE: The type of statistics to be generated. Only \\\"categories\\\" is accepted.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"    // Basic help description","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_HELP \u003d \"Command Word: \" + COMMAND_WORD + LINE_SEPARATOR","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"            + COMMAND_DESCRIPTION + LINE_SEPARATOR + COMMAND_USAGE + LINE_SEPARATOR;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"    // Detailed help description","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"    public static final String COMMAND_DETAILED_HELP \u003d COMMAND_HELP + COMMAND_PARAMETERS_INFO","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"    private static final Logger statsLogger \u003d Logger.getLogger(StatsCommand.class.getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"    private String statsType;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"    private int month \u003d -1;","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"    private int year \u003d -1;","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"    private String period \u003d null;","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"    private int number \u003d -1;","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"    public StatsCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"     * Gets the mandatory tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"     * @return A string array containing all mandatory tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"    public String[] getMandatoryTags() {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"        String[] mandatoryTags \u003d new String[]{COMMAND_TAG_STATS_TYPE};","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"        return mandatoryTags;","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"    public String[] getOptionalTags() {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"        String[] optionalTags \u003d new String[]{","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_MONTH,","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_YEAR,","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_NUMBER,","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"            COMMAND_TAG_GLOBAL_PERIOD,","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"        };","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"        return optionalTags;","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"    public void setStatsType(String statsType) {","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"        this.statsType \u003d statsType;","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"    public void setStatsMonth(int month) {","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"        this.month \u003d month;","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"    public void setStatsYear(int year) {","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"        this.year \u003d year;","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"    public void setStatsNumber(int number) {","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"        this.number \u003d number;","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"    public void setStatsPeriod(String period) {","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"    public int getStatsYear() {","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"        return year;","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"chydarren"},"content":"     * @param ui           An instance of the Ui class.","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"chydarren"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"chydarren"},"content":"     * @param storage      An instance of the Storage class.","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"chydarren"},"content":"    public void execute(TransactionList transactions, Ui ui, Storage storage) throws MoolahException {","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"chydarren"},"content":"        statsLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"        statsLogger.log(Level.INFO, \"Entering execution of the Stats command.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"        listStatsByStatsType(statsType, transactions, month, year, period, number);","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"     * Lists the statistics depending on the type of statistics requested.","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"chydarren"},"content":"     * @param statsType     The type of statistics that is needed.","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"chydarren"},"content":"     * @param transactions  An instance of the TransactionList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"chydarren"},"content":"     * @throws MoolahException If the type of statistics is not recognised.","lastModifiedDate":"2022-10-22"},{"lineNumber":142,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"chydarren"},"content":"    private static void listStatsByStatsType(String statsType, TransactionList transactions, int month,","lastModifiedDate":"2022-10-22"},{"lineNumber":144,"author":{"gitId":"chydarren"},"content":"                                             int year, String period, int number)","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"chydarren"},"content":"            throws MoolahException {","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"chydarren"},"content":"        switch (statsType) {","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"chydarren"},"content":"        case \"categories\":","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"chydarren"},"content":"            statsLogger.log(Level.INFO, \"Stats type has been detected for categorical savings.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"chydarren"},"content":"            statsTypeCategoricalSavings(transactions);","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"chydarren"},"content":"            statsLogger.log(Level.INFO, \"End of Stats command.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"paullowse"},"content":"        //@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"paullowse"},"content":"        case \"time\":","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"paullowse"},"content":"            statsLogger.log(Level.INFO, \"Stats type has been detected for monthly savings.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"paullowse"},"content":"            if (year \u003d\u003d -1 \u0026\u0026 month \u003d\u003d -1 \u0026\u0026 period !\u003d null \u0026\u0026 number !\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":156,"author":{"gitId":"paullowse"},"content":"                statsLogger.log(Level.INFO, \"Stats command uses lastNperiod.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":157,"author":{"gitId":"paullowse"},"content":"                statsTypeTimeSavings(transactions, year, month, period, number);","lastModifiedDate":"2022-10-22"},{"lineNumber":158,"author":{"gitId":"paullowse"},"content":"            } else if (year !\u003d -1 \u0026\u0026 period \u003d\u003d null \u0026\u0026 number \u003d\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":159,"author":{"gitId":"paullowse"},"content":"                statsLogger.log(Level.INFO, \"Stats command uses either monthly or yearly.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":160,"author":{"gitId":"paullowse"},"content":"                statsTypeTimeSavings(transactions, year, month, period, number);","lastModifiedDate":"2022-10-22"},{"lineNumber":161,"author":{"gitId":"paullowse"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":162,"author":{"gitId":"paullowse"},"content":"                statsLogger.log(Level.WARNING, \"An exception has been caught due to a missing tag\");","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"paullowse"},"content":"                throw new StatsInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"        //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"chydarren"},"content":"        default:","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"chydarren"},"content":"            statsLogger.log(Level.WARNING, \"An exception has been caught due to an invalid stats type.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"chydarren"},"content":"            throw new StatsInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"chydarren"},"content":"     * Display the statistics requested for current amount of savings in each category.","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"chydarren"},"content":"     * @param transactions An instance of the TransactionList class.","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"chydarren"},"content":"    public static void statsTypeCategoricalSavings(TransactionList transactions) {","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"chydarren"},"content":"        String categoricalSavingsList \u003d transactions.listCategoricalSavings();","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"chydarren"},"content":"        if (categoricalSavingsList.isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"chydarren"},"content":"            statsLogger.log(Level.INFO, \"Categorical savings list is empty as there are no transactions available.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"chydarren"},"content":"            Ui.showInfoMessage(INFO_STATS_EMPTY.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"chydarren"},"content":"            return;","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":188,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":189,"author":{"gitId":"chydarren"},"content":"        assert !categoricalSavingsList.isEmpty();","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"chydarren"},"content":"        statsLogger.log(Level.INFO, \"Categorical savings list is found to contain categories-amount pairs.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"chydarren"},"content":"        Ui.showList(categoricalSavingsList, INFO_STATS_CATEGORIES.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"paullowse"},"content":"     * Calls transactions to get the necessary transaction list, convert the parameters into a String for output.","lastModifiedDate":"2022-10-22"},{"lineNumber":198,"author":{"gitId":"paullowse"},"content":"     * Produces info strings, list of categories and summary statistics.","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"paullowse"},"content":"     * @param transactions  An instance of the TransactionList class.","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"paullowse"},"content":"     * @param year          A specified year.","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"paullowse"},"content":"     * @param month         A specified month.","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"paullowse"},"content":"     * @param period        A specified period of time.","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"paullowse"},"content":"     * @param number        A specified number of periods.","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"paullowse"},"content":"     * @throws MoolahException If the type of statistics is not recognised.","lastModifiedDate":"2022-10-22"},{"lineNumber":206,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":207,"author":{"gitId":"paullowse"},"content":"    public static void statsTypeTimeSavings(TransactionList transactions, int year, int month,","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"paullowse"},"content":"                                            String period, int number) throws MoolahException {","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"paullowse"},"content":"        ArrayList\u003cTransaction\u003e timeTransactions;","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"paullowse"},"content":"        // only year","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"paullowse"},"content":"        if (period !\u003d null \u0026\u0026 number !\u003d -1 \u0026\u0026 period \u003d\u003d \"weeks\") {","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"paullowse"},"content":"            timeTransactions \u003d transactions.getTransactionsByWeekRange(LocalDate.now(), number);","lastModifiedDate":"2022-10-23"},{"lineNumber":214,"author":{"gitId":"paullowse"},"content":"        } else if (period !\u003d null \u0026\u0026 number !\u003d -1 \u0026\u0026 period \u003d\u003d \"months\") {","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"paullowse"},"content":"            timeTransactions \u003d transactions.getTransactionsByMonthRange(LocalDate.now(), number);","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"paullowse"},"content":"        } else if (month \u003d\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":217,"author":{"gitId":"paullowse"},"content":"            timeTransactions \u003d transactions.getTransactionsByYear(year);","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"paullowse"},"content":"        } else if (year !\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":219,"author":{"gitId":"paullowse"},"content":"            timeTransactions \u003d transactions.getTransactionsByMonth(year, month);","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"paullowse"},"content":"        } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":221,"author":{"gitId":"paullowse"},"content":"            statsLogger.log(Level.WARNING, \"An exception has been caught due to a missing tag\");","lastModifiedDate":"2022-10-22"},{"lineNumber":222,"author":{"gitId":"paullowse"},"content":"            throw new StatsInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"paullowse"},"content":"        String timeSavingsList \u003d transactions.listTimeStats(timeTransactions, year, month, period, number);","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"paullowse"},"content":"        if (timeSavingsList.isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"paullowse"},"content":"            statsLogger.log(Level.INFO, \"Categorical savings list is empty as there are no transactions available.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"paullowse"},"content":"            Ui.showInfoMessage(INFO_STATS_EMPTY.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"paullowse"},"content":"            return;","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":231,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"paullowse"},"content":"        // summary values","lastModifiedDate":"2022-10-22"},{"lineNumber":233,"author":{"gitId":"paullowse"},"content":"        ArrayList\u003cString\u003e amounts;","lastModifiedDate":"2022-10-22"},{"lineNumber":234,"author":{"gitId":"paullowse"},"content":"        amounts \u003d transactions.processTimeSummaryStats(timeTransactions);","lastModifiedDate":"2022-10-22"},{"lineNumber":235,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":236,"author":{"gitId":"paullowse"},"content":"        String incomeMessage \u003d INFO_STATS_SUMMARY_HEADER + LINE_SEPARATOR","lastModifiedDate":"2022-10-22"},{"lineNumber":237,"author":{"gitId":"paullowse"},"content":"                + INFO_STATS_INCOME.toString() + amounts.get(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":238,"author":{"gitId":"paullowse"},"content":"        String expensesMessage \u003d INFO_STATS_EXPENSES.toString() + amounts.get(1);","lastModifiedDate":"2022-10-22"},{"lineNumber":239,"author":{"gitId":"paullowse"},"content":"        String savingsMessage \u003d INFO_STATS_SAVINGS.toString() + amounts.get(2);","lastModifiedDate":"2022-10-22"},{"lineNumber":240,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":241,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":242,"author":{"gitId":"paullowse"},"content":"        assert !timeSavingsList.isEmpty();","lastModifiedDate":"2022-10-21"},{"lineNumber":243,"author":{"gitId":"paullowse"},"content":"        statsLogger.log(Level.INFO, \"Monthly savings list is found to contain categories-amount pairs.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":244,"author":{"gitId":"paullowse"},"content":"        Ui.showStatsList(timeSavingsList, INFO_STATS_TIME.toString(), incomeMessage, expensesMessage, savingsMessage);","lastModifiedDate":"2022-10-22"},{"lineNumber":245,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":246,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":247,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-21"},{"lineNumber":248,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":249,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":250,"author":{"gitId":"paullowse"},"content":"     * Enables the program to exit when the Bye command is issued.","lastModifiedDate":"2022-10-11"},{"lineNumber":251,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"paullowse"},"content":"     * @return A boolean value that indicates whether the program shall exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":255,"author":{"gitId":"paullowse"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-08"},{"lineNumber":256,"author":{"gitId":"paullowse"},"content":"        return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":257,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":258,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"paullowse":178,"chydarren":80}},{"path":"src/main/java/seedu/duke/common/Constants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":" * Represents all the constant settings of the application.","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":" * Developers should update the constant in this file to allow for different limits for the application.","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":" *","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":" * \u003cp\u003eNote that altering the values in this folder may result in integer overflow in the program in extreme cases.","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"public class Constants {","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"    /*","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"        WARNING: Editing the values below may result in integer overflow in","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"        1. TransactionList.calculateMonthlyTotalExpense()","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"        2. Budget.getBudgetLeft()","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"    // One million transactions is the capacity allowed","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    public static int MAX_TRANSACTIONS_COUNT \u003d 1000000;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    // The amount of one transaction is allowed to be in the range or 0 \u003c\u003d x \u003c\u003d 10000000","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"    public static int MIN_AMOUNT_VALUE \u003d 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"    public static int MAX_AMOUNT_VALUE \u003d 10000000;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    // The amount of transaction is allowed to be in the range or 0 \u003c\u003d x \u003c\u003d 10000000","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"    public static int MIN_BUDGET_VALUE \u003d 1;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    public static long MAX_BUDGET_VALUE \u003d Long.valueOf(MAX_TRANSACTIONS_COUNT) * Long.valueOf(MAX_AMOUNT_VALUE);","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"wcwy":27}},{"path":"src/main/java/seedu/duke/common/DateFormats.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":" * Provides enum variables for the approved date formats for input and output.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public enum DateFormats {","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"    DATE_INPUT_PATTERN(\"ddMMyyyy\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"    DATE_OUTPUT_PATTERN(\"MMM dd yyyy\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    DATE_STORAGE_OUTPUT_PATTERN(\"yyyy-MM-dd\");","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    public final String message;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"     * Instantiates a new date format when application initialises a new instance of this enum.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"     * @param message A string containing the date format.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"    DateFormats(String message) {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"     * Gets the date format as a string.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the date format.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"        return message;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"wcwy":31}},{"path":"src/main/java/seedu/duke/common/ErrorMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides enum variables for storing custom program error messages.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public enum ErrorMessages {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_COMMAND(\"Invalid command, please enter \u003chelp\u003e if you need the list of commands.\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_DUPLICATE_TAG(\"Duplicate tag(s) detected, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_MISSING_TAG(\"Mandatory tag(s) missing, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_UNSUPPORTED_TAG(\"Not supported tag(s) detected, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_EMPTY_PARAMETER(\"Parameter behind tag(s) is found to be empty, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_INDEX(\"Invalid index, please ensure your index is correct!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_MONTH(\"Invalid month, please check your input! Note: Month should be between 1 to 12.\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_YEAR(\"Invalid year, please check your input! Note: Year should be 1000 onwards.\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_PERIOD(\"Type of period given is invalid, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_INVALID_NUMBER(\"Number for period stats given is invalid, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    ERROR_GLOBAL_NUMBER_NOT_NUMERIC(\"Non-integer detected, please enter a numerical integer!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    ERROR_TRANSACTION_INVALID_AMOUNT(\"Invalid amount, \"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"            + \"please ensure your amount is in positive numerals ($10000000 or less) only!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    ERROR_TRANSACTION_INVALID_CATEGORY(\"Invalid category, please ensure your category is correct!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    ERROR_TRANSACTION_INVALID_DATE(\"Invalid date, please ensure your date format is correct!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    ERROR_TRANSACTION_INVALID_TYPE(\"Type of transaction given is invalid, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    ERROR_FIND_COMMAND_MISSING_KEYWORDS(\"Keyword(s) for your search expression missing, please check your input!\"),","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    ERROR_STATS_COMMAND_INVALID_TYPE(\"Type of statistics given is invalid, please check your input!\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"    ERROR_UNKNOWN_HELP_OPTION(\"The parameter used for help option is unknown, please check your input!\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    ERROR_STORAGE_FILE_CORRUPTED(\"Duke.txt corrupted. \"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"            + \"To preserve data, please STOP the program and edit your data file correctly.\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"    ERROR_STORAGE_WRITE(\"Unable to write to Duke.txt. Please save your current Duke.txt file and restart Moolah\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"    ERROR_MAXIMUM_TRANSACTION_COUNT_REACHED(\"Unable to add transaction. \"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"            + \"The maximum allowed transaction size (1000000) has been reached.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public final String message;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new error message when user initialises a new instance of this enum.","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"     * @param message A string containing the message.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"    ErrorMessages(String message) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"     * Gets the error message as a string.","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the message.","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"        return message;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"chinhan99":2,"wcwy":5,"chydarren":45}},{"path":"src/main/java/seedu/duke/common/InfoMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides enum variables for storing custom program information messages.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public enum InfoMessages {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    INFO_DIVIDER(\"____________________________________________________________\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    INFO_ADD_EXPENSE(\"I have added the following Expense transaction:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    INFO_ADD_INCOME(\"I have added the following Income transaction:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    INFO_DELETE(\"I have deleted the following transaction:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    INFO_EXIT(\"Goodbye and see you soon.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    INFO_GREET(\"Hello! I\u0027m Moo and I will help you to manage your finances.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    INFO_HELP_GREET(\"Gotcha! Here are the commands that you may use:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    INFO_HELP_PROMPT(\"Enter \u003chelp\u003e if you need the list of commands.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    INFO_LIST(\"Here are your transaction records:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    INFO_LIST_EMPTY(\"There are no transaction records found.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    INFO_LIST_FILTERED(\"Here are the transaction records that match your search expression:\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    INFO_LIST_UNFILTERED(\"There are no transaction records that match your search expression.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    INFO_STATS_EMPTY(\"There are no statistics available yet for the given statistics type.\"),","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    INFO_STATS_CATEGORIES(\"Here are the total savings for each category:\"),","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_TIME(\"Here are the total savings and expenses for\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_INCOME(\"Total Income \u003d \"),","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_EXPENSES(\"Total Expenses \u003d \"),","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_SAVINGS(\"Total Savings \u003d \"),","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_CATEGORIES_HEADER(\"-----CATGORIES-----\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"    INFO_STATS_SUMMARY_HEADER(\"-----SUMMARY-----\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    INFO_PURGE(\"All your transactions have been purged.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    INFO_PURGE_ABORT(\"Purging has been aborted. All transactions records are retained.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"brian-vb"},"content":"    INFO_PURGE_EMPTY(\"The command is aborted as the transactions list is empty.\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"    INFO_PURGE_WARNING(\"Are you sure you want to proceed with this command? Please enter \u0027Y\u0027 to confirm.\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"    INFO_CURRENT_BUDGET(\"Monthly budget set as: $\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"    INFO_REMAINING_BUDGET(\"Budget remained for the month of transaction: $\"),","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"    INFO_TODAY_DATE(\"Today is \");","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public final String message;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new information message when user initialises a new instance of this enum.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     * @param message A string containing the message.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"    InfoMessages(String message) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"     * Gets the information message as a string.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the message.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"        return message;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"paullowse":6,"brian-vb":2,"wcwy":4,"chydarren":43}},{"path":"src/main/java/seedu/duke/data/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.Constants.MAX_TRANSACTIONS_COUNT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.Constants.MAX_AMOUNT_VALUE;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.Constants.MIN_BUDGET_VALUE;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":" * Represents the user\u0027s budget for the current month.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":" *","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":" * \u003cp\u003eThe default budget value is $1000, or the value read from the file storage.","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":" * Operations related to the budgets are also defined under this class.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"public class Budget {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    // Default value of the monthly budget is $1000","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    private static int budget \u003d 1000;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"     * Retrieves the budget value set for the current month.","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"     * @return The budget value set by the user.","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"    public static int getBudget() {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"        return budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"     * Updates the budget value set for the current month.","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"     * @param budget The new value for budget.","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"    public static void setBudget(int budget) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"        Budget.budget \u003d budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"     * Returns the amount of budget left in the month, as a string.","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"     * \u003cp\u003eIf the total amount of expenses is higher than the budget, a negative value in string will be returned.","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"     * @param totalMonthlyExpense The long value representing the total sum of a monthly expense.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"     * @return A string value representing the amount of budget left.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"    public static String getBudgetLeft(long totalMonthlyExpense) {","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"        /*","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"            Since the maximum number of transaction is 1000000, maximum amount of expense is 10000000,","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"            and minimum is 1, the lowest possible budget left value is","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"            1 - (10^6 * 10^7) \u003d -10^15 + 1 \u003e Long.MIN_VALUE (approx -9.22 * 10^18)","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"            Thus, this function is safe from integer overflow UNLESS the values in common.Constants.java is altered.","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"        assert (Long.valueOf(MAX_AMOUNT_VALUE) * Long.valueOf(MAX_TRANSACTIONS_COUNT) \u003e 0);","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"wcwy"},"content":"        assert (Long.valueOf(MAX_AMOUNT_VALUE) * Long.valueOf(MAX_TRANSACTIONS_COUNT) \u003e Long.valueOf(MAX_AMOUNT_VALUE));","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"wcwy"},"content":"        assert (MIN_BUDGET_VALUE \u003e 0);","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"wcwy"},"content":"        return Long.toString(budget - totalMonthlyExpense);","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"wcwy":58}},{"path":"src/main/java/seedu/duke/data/TransactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.data;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Expense;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Income;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Transaction;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.InputTransactionInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import java.time.Year;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.Constants.MAX_AMOUNT_VALUE;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.Constants.MAX_TRANSACTIONS_COUNT;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.InfoMessages.INFO_STATS_CATEGORIES_HEADER;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":" * Represents a list of transactions added by the user into the application.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":" * Operations related to modifying the list of transactions are defined under this class.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":" * These operations include adding, listing, modifying, deleting and purging.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"public class TransactionList {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    private static final String PREFIX_CATEGORY \u003d \"[\";","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    private static final String POSTFIX_CATEGORY \u003d \"]\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    private static final String SYMBOL_DOLLAR \u003d \"$\";","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    private static final int START \u003d 0;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    private static final int END \u003d 1;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"    private static ArrayList\u003cTransaction\u003e transactions;","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"    public TransactionList(TransactionList transactionList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"        transactions \u003d transactionList.getTransactions();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"    public ArrayList\u003cTransaction\u003e getTransactions() {","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"        return transactions;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"     * Initialises the variables of the TransactionList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"    public TransactionList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"        this.transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"brian-vb"},"content":"     * Gets a specific entry from the transactions list, to be used by other classes.","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"brian-vb"},"content":"     * @param index An index of the transaction that is to be retrieved.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"brian-vb"},"content":"     * @return The transaction entry from the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"brian-vb"},"content":"    public Transaction getEntry(int index) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"brian-vb"},"content":"        return transactions.get(index);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"brian-vb"},"content":"     * Gets the number of transactions in the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"brian-vb"},"content":"     * @return An integer value that indicates the number of transactions.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"brian-vb"},"content":"    public int size() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"brian-vb"},"content":"        return transactions.size();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"brian-vb"},"content":"     * Deletes a transaction from the transactions list based on the specified index.","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"brian-vb"},"content":"     * @param index An index of the transaction that is to be retrieved.","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"brian-vb"},"content":"     * @return A string tht states the details of the deleted transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"brian-vb"},"content":"    public String deleteTransaction(int index) {","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"brian-vb"},"content":"        Transaction transaction \u003d transactions.get(index - 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"brian-vb"},"content":"        transactions.remove(index - 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"brian-vb"},"content":"        return transaction.toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"wcwy"},"content":"     * Adds a transaction of class type Expense into the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"wcwy"},"content":"     * @param description More information regarding the transaction, written without any space.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"wcwy"},"content":"     * @param amount      Value of the transaction in numerical form.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"wcwy"},"content":"     * @param category    A category for the transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"wcwy"},"content":"     * @param date        Date of the transaction with format in \"yyyyMMdd\".","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"wcwy"},"content":"     * @return The expense object created and added to the list.","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"wcwy"},"content":"    public Expense addExpense(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"wcwy"},"content":"        Expense expense \u003d new Expense(description, amount, category, date);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"wcwy"},"content":"        transactions.add(expense);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"wcwy"},"content":"        return expense;","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"wcwy"},"content":"     * Adds a transaction of class type Income into the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"wcwy"},"content":"     * @param description More information regarding the transaction, written without any space.","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"wcwy"},"content":"     * @param amount      Value of the transaction in numerical form.","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"wcwy"},"content":"     * @param category    A category for the transaction.","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"wcwy"},"content":"     * @param date        Date of the transaction with format in \"yyyyMMdd\".","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"wcwy"},"content":"     * @return The income object created and added to the transaction list.","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"wcwy"},"content":"    public Income addIncome(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"wcwy"},"content":"        Income income \u003d new Income(description, amount, category, date);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"wcwy"},"content":"        transactions.add(income);","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"wcwy"},"content":"        return income;","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"chinhan99"},"content":"    public void addIncomeDuringStorage(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"chinhan99"},"content":"        Income income \u003d new Income(description, amount, category, date);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"chinhan99"},"content":"        transactions.add(income);","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"chinhan99"},"content":"    public void addExpenseDuringStorage(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"chinhan99"},"content":"        Expense expense \u003d new Expense(description, amount, category, date);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"chinhan99"},"content":"        transactions.add(expense);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"     * Checks whether the transaction belongs to the Income or Expense class type.","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"chydarren"},"content":"     * @param transaction The transaction record from the transactions list.","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"     * @param classType   The transaction class type that is either Income or Expense.","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"chydarren"},"content":"     * @return A boolean value indicating whether transaction record belongs to the given class type.","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"chydarren"},"content":"     * @throws InputTransactionInvalidTypeException If class type cannot be found in the packages.","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"chydarren"},"content":"    public boolean isTransactionInstance(Object transaction, String classType) throws ClassNotFoundException {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"chydarren"},"content":"        return Class.forName(classType).isInstance(transaction);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"chydarren"},"content":"     * Checks whether a transaction fulfills the given filter criteria.","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"chydarren"},"content":"     * @param transaction The transaction record from the transactions list.","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"chydarren"},"content":"     * @param type        The type of transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"chydarren"},"content":"     * @param category    A category for the transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"chydarren"},"content":"     * @param date        Date of the transaction with format in \"yyyyMMdd\".","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the formatted transaction list.","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"chydarren"},"content":"     * @throws InputTransactionInvalidTypeException If class type cannot be found in the packages.","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"chydarren"},"content":"    public boolean isMatchListFilters(Transaction transaction, String type, String category,","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"chydarren"},"content":"                                      LocalDate date) throws InputTransactionInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"chydarren"},"content":"        boolean isMatch;","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"chydarren"},"content":"            isMatch \u003d ((type.isEmpty() || isTransactionInstance(transaction, type))","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"chydarren"},"content":"                    \u0026\u0026 (category.isEmpty() || transaction.getCategory().equals(category))","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"chydarren"},"content":"                    \u0026\u0026 (date \u003d\u003d null || transaction.getDate().equals(date)));","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"chydarren"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"chydarren"},"content":"            throw new InputTransactionInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"chydarren"},"content":"        return isMatch;","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"chydarren"},"content":"     * Lists all or some transactions based on selection.","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"chydarren"},"content":"     * @param type     The type of transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"chydarren"},"content":"     * @param category A category for the transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"chydarren"},"content":"     * @param date     Date of the transaction with format in \"yyyyMMdd\".","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"chydarren"},"content":"     * @param year     A specified year.","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"chydarren"},"content":"     * @param month    A specified month within the year.","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the formatted transaction list.","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"chydarren"},"content":"     * @throws InputTransactionInvalidTypeException If class type cannot be found in the packages.","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"chydarren"},"content":"    public String listTransactions(String type, String category, LocalDate date, int month, int year)","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"chydarren"},"content":"            throws InputTransactionInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"chydarren"},"content":"        ArrayList\u003cTransaction\u003e timeTransactions;","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"chydarren"},"content":"        // Filters the transactions list by month or/and year first","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"chydarren"},"content":"        if (year !\u003d -1 \u0026\u0026 month !\u003d -1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"chydarren"},"content":"            timeTransactions \u003d getTransactionsByMonth(year, month);","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"chydarren"},"content":"        } else if (year !\u003d -1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"chydarren"},"content":"            assert month \u003d\u003d -1;","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"chydarren"},"content":"            timeTransactions \u003d getTransactionsByYear(year);","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"chydarren"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"chydarren"},"content":"            // No filter month or/and year filter applied","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"chydarren"},"content":"            timeTransactions \u003d transactions;","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"chydarren"},"content":"        String transactionsList \u003d \"\";","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"chydarren"},"content":"        // Loops each transaction from the time transactions list","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"chydarren"},"content":"        for (Transaction transaction : timeTransactions) {","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"chydarren"},"content":"            // Applies generic filter against each time transaction entry","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"chydarren"},"content":"            if (isMatchListFilters(transaction, type, category, date)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"chydarren"},"content":"                transactionsList +\u003d transaction.toString() + LINE_SEPARATOR;","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"chydarren"},"content":"        return transactionsList;","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"chydarren"},"content":"     * Finds specific transaction(s) based on any keywords inputted by the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"chydarren"},"content":"     * @param keywords Any partial or full keyword(s) that matches the details of the transaction.","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the formatted transaction list.","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"chydarren"},"content":"    public String findTransactions(String keywords) {","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"chydarren"},"content":"        String transactionsList \u003d \"\";","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"chydarren"},"content":"        // Loops each transaction from the transactions list","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"chydarren"},"content":"        for (Transaction transaction : transactions) {","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"chydarren"},"content":"            // Includes only transactions that contain the keywords used in the search expression","lastModifiedDate":"2022-10-07"},{"lineNumber":217,"author":{"gitId":"chydarren"},"content":"            if (transaction.toString().contains(keywords)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":218,"author":{"gitId":"chydarren"},"content":"                transactionsList +\u003d transaction.toString() + LINE_SEPARATOR;","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":220,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":221,"author":{"gitId":"chydarren"},"content":"        return transactionsList;","lastModifiedDate":"2022-10-07"},{"lineNumber":222,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":223,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":224,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"chydarren"},"content":"     * Reads the transactions list and adds each amount to the categories in categorical savings hashmap.","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"chydarren"},"content":"     * @param categoricalSavings A hashmap containing all category-amount pair for total savings.","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"chydarren"},"content":"     * @return A hashmap containing all category-amount pair for total savings.","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"chydarren"},"content":"    public HashMap\u003cString, Integer\u003e processCategoricalSavings(HashMap\u003cString, Integer\u003e categoricalSavings) {","lastModifiedDate":"2022-10-21"},{"lineNumber":231,"author":{"gitId":"chydarren"},"content":"        for (Transaction transaction : transactions) {","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"chydarren"},"content":"            String category \u003d transaction.getCategory();","lastModifiedDate":"2022-10-21"},{"lineNumber":233,"author":{"gitId":"chydarren"},"content":"            int amount \u003d transaction.getAmount();","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"chydarren"},"content":"            // Creates a new category with starter amount if category not exists in hashmap","lastModifiedDate":"2022-10-21"},{"lineNumber":235,"author":{"gitId":"chydarren"},"content":"            if (!categoricalSavings.containsKey(category)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":236,"author":{"gitId":"chydarren"},"content":"                categoricalSavings.put(category, amount);","lastModifiedDate":"2022-10-21"},{"lineNumber":237,"author":{"gitId":"chydarren"},"content":"                continue;","lastModifiedDate":"2022-10-21"},{"lineNumber":238,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":239,"author":{"gitId":"chydarren"},"content":"            categoricalSavings.put(category, categoricalSavings.get(category) + amount);","lastModifiedDate":"2022-10-21"},{"lineNumber":240,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":241,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"chydarren"},"content":"        return categoricalSavings;","lastModifiedDate":"2022-10-21"},{"lineNumber":243,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":244,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":245,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":246,"author":{"gitId":"chydarren"},"content":"     * Calculates and stores total savings for each transaction category into a hashmap.","lastModifiedDate":"2022-10-21"},{"lineNumber":247,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":248,"author":{"gitId":"chydarren"},"content":"     * @return A hashmap containing all category-amount pair for total savings.","lastModifiedDate":"2022-10-21"},{"lineNumber":249,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":250,"author":{"gitId":"chydarren"},"content":"    public String listCategoricalSavings() {","lastModifiedDate":"2022-10-21"},{"lineNumber":251,"author":{"gitId":"chydarren"},"content":"        String categoricalSavingsList \u003d \"\";","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"chydarren"},"content":"        HashMap\u003cString, Integer\u003e categoricalSavings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"chydarren"},"content":"        // Adds each amount from transactions list to the categories in categorical savings hashmap","lastModifiedDate":"2022-10-21"},{"lineNumber":254,"author":{"gitId":"chydarren"},"content":"        categoricalSavings \u003d processCategoricalSavings(categoricalSavings);","lastModifiedDate":"2022-10-21"},{"lineNumber":255,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":256,"author":{"gitId":"chydarren"},"content":"        // Formats every entry in the hashmap into a categorical savings list","lastModifiedDate":"2022-10-21"},{"lineNumber":257,"author":{"gitId":"chydarren"},"content":"        for (HashMap.Entry\u003cString, Integer\u003e entry : categoricalSavings.entrySet()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":258,"author":{"gitId":"chydarren"},"content":"            categoricalSavingsList +\u003d String.format(\"%s%s%s %s%s%s\", PREFIX_CATEGORY, entry.getKey(),","lastModifiedDate":"2022-10-21"},{"lineNumber":259,"author":{"gitId":"chydarren"},"content":"                    POSTFIX_CATEGORY, SYMBOL_DOLLAR, entry.getValue(), LINE_SEPARATOR);","lastModifiedDate":"2022-10-21"},{"lineNumber":260,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":261,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":262,"author":{"gitId":"chydarren"},"content":"        return categoricalSavingsList;","lastModifiedDate":"2022-10-21"},{"lineNumber":263,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":264,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":265,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":266,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":267,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":268,"author":{"gitId":"paullowse"},"content":"     * Produces Categorical saving list for timeTransactions.","lastModifiedDate":"2022-10-23"},{"lineNumber":269,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":270,"author":{"gitId":"paullowse"},"content":"     * @param timeTransactions  An instance of the TransactionList class.","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"paullowse"},"content":"     * @param year              A specified year.","lastModifiedDate":"2022-10-23"},{"lineNumber":272,"author":{"gitId":"paullowse"},"content":"     * @param month             A specified month.","lastModifiedDate":"2022-10-23"},{"lineNumber":273,"author":{"gitId":"paullowse"},"content":"     * @param period            A specified period of time.","lastModifiedDate":"2022-10-23"},{"lineNumber":274,"author":{"gitId":"paullowse"},"content":"     * @param number            A specified number of periods.","lastModifiedDate":"2022-10-23"},{"lineNumber":275,"author":{"gitId":"paullowse"},"content":"     * @return String output of transactions for the time period.","lastModifiedDate":"2022-10-23"},{"lineNumber":276,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":277,"author":{"gitId":"paullowse"},"content":"    public String listTimeStats(ArrayList\u003cTransaction\u003e timeTransactions, int year, int month, String period,","lastModifiedDate":"2022-10-22"},{"lineNumber":278,"author":{"gitId":"paullowse"},"content":"                                int number) {","lastModifiedDate":"2022-10-22"},{"lineNumber":279,"author":{"gitId":"paullowse"},"content":"        String timeSavingsList \u003d \"\";","lastModifiedDate":"2022-10-21"},{"lineNumber":280,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":281,"author":{"gitId":"paullowse"},"content":"        if (period !\u003d null \u0026\u0026 number !\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":282,"author":{"gitId":"paullowse"},"content":"            timeSavingsList +\u003d \"The past \" + number + \" \" + period + \": \" + LINE_SEPARATOR + LINE_SEPARATOR","lastModifiedDate":"2022-10-22"},{"lineNumber":283,"author":{"gitId":"paullowse"},"content":"                    + INFO_STATS_CATEGORIES_HEADER + LINE_SEPARATOR;","lastModifiedDate":"2022-10-22"},{"lineNumber":284,"author":{"gitId":"paullowse"},"content":"        } else if (month \u003d\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"paullowse"},"content":"            timeSavingsList +\u003d \"Year: \" + year + LINE_SEPARATOR + LINE_SEPARATOR + INFO_STATS_CATEGORIES_HEADER","lastModifiedDate":"2022-10-22"},{"lineNumber":286,"author":{"gitId":"paullowse"},"content":"                    + LINE_SEPARATOR;","lastModifiedDate":"2022-10-22"},{"lineNumber":287,"author":{"gitId":"paullowse"},"content":"        } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":288,"author":{"gitId":"paullowse"},"content":"            timeSavingsList +\u003d \"Year: \" + year + \", Month: \" + month","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"paullowse"},"content":"                    + LINE_SEPARATOR + LINE_SEPARATOR + INFO_STATS_CATEGORIES_HEADER + LINE_SEPARATOR;","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":291,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":292,"author":{"gitId":"paullowse"},"content":"        // Formats every entry in the hashmap into a categorical savings list","lastModifiedDate":"2022-10-21"},{"lineNumber":293,"author":{"gitId":"paullowse"},"content":"        for (Transaction entry : timeTransactions) {","lastModifiedDate":"2022-10-21"},{"lineNumber":294,"author":{"gitId":"paullowse"},"content":"            timeSavingsList +\u003d String.format(\"%s%s%s %s%s%s\", PREFIX_CATEGORY, entry.getCategory(),","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"paullowse"},"content":"                    POSTFIX_CATEGORY, SYMBOL_DOLLAR, entry.getAmount(), LINE_SEPARATOR);","lastModifiedDate":"2022-10-21"},{"lineNumber":296,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":297,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"paullowse"},"content":"        return timeSavingsList;","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"paullowse"},"content":"     * Produces Expense, Income and Savings statistics.","lastModifiedDate":"2022-10-23"},{"lineNumber":303,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":304,"author":{"gitId":"paullowse"},"content":"     * @param timeTransactions  An instance of the TransactionList class.","lastModifiedDate":"2022-10-22"},{"lineNumber":305,"author":{"gitId":"paullowse"},"content":"     * @return An amount arraylist of Expense and Income.","lastModifiedDate":"2022-10-23"},{"lineNumber":306,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":307,"author":{"gitId":"paullowse"},"content":"    public ArrayList\u003cString\u003e processTimeSummaryStats(ArrayList\u003cTransaction\u003e timeTransactions) {","lastModifiedDate":"2022-10-22"},{"lineNumber":308,"author":{"gitId":"paullowse"},"content":"        int timeExpense \u003d 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":309,"author":{"gitId":"paullowse"},"content":"        int timeIncome \u003d 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":310,"author":{"gitId":"paullowse"},"content":"        for (Transaction entry : timeTransactions) {","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"paullowse"},"content":"            String category \u003d entry.getType();","lastModifiedDate":"2022-10-22"},{"lineNumber":312,"author":{"gitId":"paullowse"},"content":"            if (category \u003d\u003d \"expense\") {","lastModifiedDate":"2022-10-22"},{"lineNumber":313,"author":{"gitId":"paullowse"},"content":"                timeExpense +\u003d entry.getAmount();","lastModifiedDate":"2022-10-22"},{"lineNumber":314,"author":{"gitId":"paullowse"},"content":"            } else if (category \u003d\u003d \"income\") {","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"paullowse"},"content":"                timeIncome +\u003d entry.getAmount();","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":317,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":318,"author":{"gitId":"paullowse"},"content":"        int timeSavings \u003d timeIncome - timeExpense;","lastModifiedDate":"2022-10-22"},{"lineNumber":319,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":320,"author":{"gitId":"paullowse"},"content":"        ArrayList\u003cString\u003e amounts \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":321,"author":{"gitId":"paullowse"},"content":"        amounts.add(Integer.toString(timeIncome));","lastModifiedDate":"2022-10-22"},{"lineNumber":322,"author":{"gitId":"paullowse"},"content":"        amounts.add(Integer.toString(timeExpense));","lastModifiedDate":"2022-10-22"},{"lineNumber":323,"author":{"gitId":"paullowse"},"content":"        amounts.add(Integer.toString(timeSavings));","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"paullowse"},"content":"        return amounts;","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":327,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":328,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":329,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"chydarren"},"content":"     * Gets all transactions recorded in between specified weeks, backdated from given date.","lastModifiedDate":"2022-10-23"},{"lineNumber":331,"author":{"gitId":"chydarren"},"content":"     * E.g. If the date is 21 October 2022 to backdate 2 weeks, the range will be 3 October to 16 October 2022.","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"chydarren"},"content":"     * @param date          A specified date to backdate N weeks from occurring week.","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"chydarren"},"content":"     * @param numberOfWeeks N number of weeks to backdate, must be minimum 1 week.","lastModifiedDate":"2022-10-23"},{"lineNumber":335,"author":{"gitId":"chydarren"},"content":"     * @return An array list containing all transactions recorded in specified weeks.","lastModifiedDate":"2022-10-23"},{"lineNumber":336,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"chydarren"},"content":"    public static ArrayList\u003cTransaction\u003e getTransactionsByWeekRange(LocalDate date, int numberOfWeeks) {","lastModifiedDate":"2022-10-23"},{"lineNumber":338,"author":{"gitId":"chydarren"},"content":"        ArrayList\u003cTransaction\u003e transactionsByWeekRange \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":339,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":340,"author":{"gitId":"chydarren"},"content":"        // Solution below adapted from https://stackoverflow.com/a/51356522","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"chydarren"},"content":"        // Gets the range of dates for the last N number of weeks from occurring week","lastModifiedDate":"2022-10-23"},{"lineNumber":342,"author":{"gitId":"chydarren"},"content":"        int dayOfWeek \u003d date.getDayOfWeek().getValue();","lastModifiedDate":"2022-10-21"},{"lineNumber":343,"author":{"gitId":"chydarren"},"content":"        LocalDate from \u003d date.minusDays((dayOfWeek - 1) + (numberOfWeeks * 7));","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"chydarren"},"content":"        LocalDate to \u003d date.minusDays(dayOfWeek);","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"chydarren"},"content":"        transactionsByWeekRange \u003d getTransactionsByDateRange(new LocalDate[]{from, to}, transactionsByWeekRange);","lastModifiedDate":"2022-10-23"},{"lineNumber":347,"author":{"gitId":"chydarren"},"content":"        return transactionsByWeekRange;","lastModifiedDate":"2022-10-23"},{"lineNumber":348,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":349,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"chydarren"},"content":"     * Gets all transactions recorded in between specified months, backdated from given date.","lastModifiedDate":"2022-10-23"},{"lineNumber":352,"author":{"gitId":"chydarren"},"content":"     * E.g. If the date is 21 October 2022 to backdate 2 months, the range will be 1 August to 30 September 2022.","lastModifiedDate":"2022-10-21"},{"lineNumber":353,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":354,"author":{"gitId":"chydarren"},"content":"     * @param date           A specified date to backdate N months from occurring month.","lastModifiedDate":"2022-10-21"},{"lineNumber":355,"author":{"gitId":"chydarren"},"content":"     * @param numberOfMonths N number of months to backdate, must be minimum 1 month.","lastModifiedDate":"2022-10-23"},{"lineNumber":356,"author":{"gitId":"chydarren"},"content":"     * @return An array list containing all transactions recorded in specified months.","lastModifiedDate":"2022-10-23"},{"lineNumber":357,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":358,"author":{"gitId":"chydarren"},"content":"    public static ArrayList\u003cTransaction\u003e getTransactionsByMonthRange(LocalDate date, int numberOfMonths) {","lastModifiedDate":"2022-10-23"},{"lineNumber":359,"author":{"gitId":"chydarren"},"content":"        ArrayList\u003cTransaction\u003e transactionsByMonthRange \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":360,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":361,"author":{"gitId":"chydarren"},"content":"        // Solution below adapted from https://stackoverflow.com/a/51356522","lastModifiedDate":"2022-10-21"},{"lineNumber":362,"author":{"gitId":"chydarren"},"content":"        // Gets the range of dates for the last N number of months from occurring month","lastModifiedDate":"2022-10-23"},{"lineNumber":363,"author":{"gitId":"chydarren"},"content":"        LocalDate lastMonth \u003d date.minusMonths(1);","lastModifiedDate":"2022-10-21"},{"lineNumber":364,"author":{"gitId":"chydarren"},"content":"        LocalDate from \u003d date.minusMonths(numberOfMonths).withDayOfMonth(1);","lastModifiedDate":"2022-10-21"},{"lineNumber":365,"author":{"gitId":"chydarren"},"content":"        LocalDate to \u003d lastMonth.withDayOfMonth(lastMonth.getMonth().maxLength());","lastModifiedDate":"2022-10-21"},{"lineNumber":366,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":367,"author":{"gitId":"chydarren"},"content":"        transactionsByMonthRange \u003d getTransactionsByDateRange(new LocalDate[]{from, to}, transactionsByMonthRange);","lastModifiedDate":"2022-10-23"},{"lineNumber":368,"author":{"gitId":"chydarren"},"content":"        return transactionsByMonthRange;","lastModifiedDate":"2022-10-23"},{"lineNumber":369,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":370,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":371,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":372,"author":{"gitId":"chydarren"},"content":"     * Gets all transactions recorded on a specific year.","lastModifiedDate":"2022-10-21"},{"lineNumber":373,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":374,"author":{"gitId":"chydarren"},"content":"     * @param year A specified year.","lastModifiedDate":"2022-10-21"},{"lineNumber":375,"author":{"gitId":"chydarren"},"content":"     * @return An array list containing all transactions recorded on a specific year.","lastModifiedDate":"2022-10-21"},{"lineNumber":376,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":377,"author":{"gitId":"chydarren"},"content":"    public ArrayList\u003cTransaction\u003e getTransactionsByYear(int year) {","lastModifiedDate":"2022-10-21"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        //@@author chydarren-reused","lastModifiedDate":"2022-10-21"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/a/69440139","lastModifiedDate":"2022-10-21"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-10-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        ArrayList\u003cTransaction\u003e transactionsByYear \u003d (ArrayList\u003cTransaction\u003e) transactions.stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                .filter(transaction -\u003e Year.from(transaction.getDate()).equals(Year.of(year)))","lastModifiedDate":"2022-10-21"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-21"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-10-21"},{"lineNumber":385,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":386,"author":{"gitId":"chydarren"},"content":"        return transactionsByYear;","lastModifiedDate":"2022-10-21"},{"lineNumber":387,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":388,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":389,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":390,"author":{"gitId":"chydarren"},"content":"     * Gets all transactions recorded on a specific month.","lastModifiedDate":"2022-10-21"},{"lineNumber":391,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":392,"author":{"gitId":"chydarren"},"content":"     * @param year  A specified year.","lastModifiedDate":"2022-10-21"},{"lineNumber":393,"author":{"gitId":"chydarren"},"content":"     * @param month A specified month within the year.","lastModifiedDate":"2022-10-21"},{"lineNumber":394,"author":{"gitId":"chydarren"},"content":"     * @return An array list containing all transactions recorded on a specific month.","lastModifiedDate":"2022-10-21"},{"lineNumber":395,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":396,"author":{"gitId":"chydarren"},"content":"    public ArrayList\u003cTransaction\u003e getTransactionsByMonth(int year, int month) {","lastModifiedDate":"2022-10-21"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        //@@author chydarren-reused","lastModifiedDate":"2022-10-21"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/a/69440139","lastModifiedDate":"2022-10-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        ArrayList\u003cTransaction\u003e transactionsByMonth \u003d (ArrayList\u003cTransaction\u003e) transactions.stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                .filter(transaction -\u003e YearMonth.from(transaction.getDate()).equals(YearMonth.of(year, month)))","lastModifiedDate":"2022-10-21"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-10-21"},{"lineNumber":403,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":404,"author":{"gitId":"chydarren"},"content":"        return transactionsByMonth;","lastModifiedDate":"2022-10-21"},{"lineNumber":405,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":406,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":407,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":408,"author":{"gitId":"chydarren"},"content":"     * Gets all transactions recorded on the last N weeks or months.","lastModifiedDate":"2022-10-21"},{"lineNumber":409,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":410,"author":{"gitId":"chydarren"},"content":"     * @param dateRange A specified range of dates.","lastModifiedDate":"2022-10-23"},{"lineNumber":411,"author":{"gitId":"chydarren"},"content":"     * @return An array list containing all transactions recorded on the last N number of weeks or months.","lastModifiedDate":"2022-10-21"},{"lineNumber":412,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":413,"author":{"gitId":"chydarren"},"content":"    public static ArrayList\u003cTransaction\u003e getTransactionsByDateRange(LocalDate[] dateRange,","lastModifiedDate":"2022-10-23"},{"lineNumber":414,"author":{"gitId":"chydarren"},"content":"                                                                    ArrayList\u003cTransaction\u003e transactionsByDateRange) {","lastModifiedDate":"2022-10-23"},{"lineNumber":415,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":416,"author":{"gitId":"chydarren"},"content":"        for (Transaction transaction : transactions) {","lastModifiedDate":"2022-10-21"},{"lineNumber":417,"author":{"gitId":"chydarren"},"content":"            LocalDate transactionDate \u003d transaction.getDate();","lastModifiedDate":"2022-10-21"},{"lineNumber":418,"author":{"gitId":"chydarren"},"content":"            // Transaction is added into the filtered array list if it falls within the expected date range","lastModifiedDate":"2022-10-21"},{"lineNumber":419,"author":{"gitId":"chydarren"},"content":"            if (!(transactionDate.isBefore(dateRange[START]) || transactionDate.isAfter(dateRange[END]))) {","lastModifiedDate":"2022-10-21"},{"lineNumber":420,"author":{"gitId":"chydarren"},"content":"                transactionsByDateRange.add(transaction);","lastModifiedDate":"2022-10-23"},{"lineNumber":421,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":422,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":423,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":424,"author":{"gitId":"chydarren"},"content":"        return transactionsByDateRange;","lastModifiedDate":"2022-10-23"},{"lineNumber":425,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":426,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":427,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":428,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":429,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":430,"author":{"gitId":"brian-vb"},"content":"     * Purges all records in the transactions list.","lastModifiedDate":"2022-10-11"},{"lineNumber":431,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":432,"author":{"gitId":"brian-vb"},"content":"    public void purgeTransactions() {","lastModifiedDate":"2022-10-18"},{"lineNumber":433,"author":{"gitId":"brian-vb"},"content":"        transactions.clear();","lastModifiedDate":"2022-10-07"},{"lineNumber":434,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":435,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":436,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-22"},{"lineNumber":437,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":438,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":439,"author":{"gitId":"wcwy"},"content":"     * Calculates the total expenses spent in the month and year of the provided date, and returns the sum as a long.","lastModifiedDate":"2022-10-22"},{"lineNumber":440,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":441,"author":{"gitId":"wcwy"},"content":"     * @param date A date object in which the monthly total expenses calculated is based on.","lastModifiedDate":"2022-10-22"},{"lineNumber":442,"author":{"gitId":"wcwy"},"content":"     * @return A long value indicating the amount of expenses spent in the month.","lastModifiedDate":"2022-10-22"},{"lineNumber":443,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":444,"author":{"gitId":"wcwy"},"content":"    public long calculateMonthlyTotalExpense(LocalDate date) {","lastModifiedDate":"2022-10-22"},{"lineNumber":445,"author":{"gitId":"wcwy"},"content":"        long totalExpense \u003d 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":446,"author":{"gitId":"wcwy"},"content":"        int month \u003d date.getMonthValue();","lastModifiedDate":"2022-10-22"},{"lineNumber":447,"author":{"gitId":"wcwy"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2022-10-22"},{"lineNumber":448,"author":{"gitId":"wcwy"},"content":"        for (Transaction transaction : transactions) {","lastModifiedDate":"2022-10-22"},{"lineNumber":449,"author":{"gitId":"wcwy"},"content":"            if (transaction.getDate().getMonthValue() \u003d\u003d month \u0026\u0026 transaction.getDate().getYear() \u003d\u003d year) {","lastModifiedDate":"2022-10-22"},{"lineNumber":450,"author":{"gitId":"wcwy"},"content":"                /*","lastModifiedDate":"2022-10-22"},{"lineNumber":451,"author":{"gitId":"wcwy"},"content":"                    Since the maximum number of transaction is 1000000 and maximum amount of expense is 10000000,","lastModifiedDate":"2022-10-22"},{"lineNumber":452,"author":{"gitId":"wcwy"},"content":"                    the highest possible expense value is 10^6 * 10^7 \u003d 10^15 \u003c Long.MAX_VALUE (approx 9.22 * 10^18)","lastModifiedDate":"2022-10-22"},{"lineNumber":453,"author":{"gitId":"wcwy"},"content":"                    Therefore, this function is safe from integer overflow UNLESS the max values in","lastModifiedDate":"2022-10-22"},{"lineNumber":454,"author":{"gitId":"wcwy"},"content":"                    common.Constants.java is altered.","lastModifiedDate":"2022-10-22"},{"lineNumber":455,"author":{"gitId":"wcwy"},"content":"                 */","lastModifiedDate":"2022-10-22"},{"lineNumber":456,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":457,"author":{"gitId":"wcwy"},"content":"                assert (Long.valueOf(MAX_AMOUNT_VALUE) * Long.valueOf(MAX_TRANSACTIONS_COUNT) \u003e 0);","lastModifiedDate":"2022-10-22"},{"lineNumber":458,"author":{"gitId":"wcwy"},"content":"                assert (Long.valueOf(MAX_AMOUNT_VALUE) * Long.valueOf(MAX_TRANSACTIONS_COUNT)","lastModifiedDate":"2022-10-22"},{"lineNumber":459,"author":{"gitId":"wcwy"},"content":"                        \u003e Long.valueOf(MAX_AMOUNT_VALUE));","lastModifiedDate":"2022-10-22"},{"lineNumber":460,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":461,"author":{"gitId":"wcwy"},"content":"                totalExpense +\u003d transaction.getAmount();","lastModifiedDate":"2022-10-22"},{"lineNumber":462,"author":{"gitId":"wcwy"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":463,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":464,"author":{"gitId":"wcwy"},"content":"        return totalExpense;","lastModifiedDate":"2022-10-22"},{"lineNumber":465,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":466,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"chinhan99":24,"paullowse":63,"brian-vb":42,"wcwy":90,"-":13,"chydarren":234}},{"path":"src/main/java/seedu/duke/data/transaction/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.data.transaction;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"public class Category {","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"    private static final String PREFIX_CATEGORY \u003d \"[\";","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"    private static final String POSTFIX_CATEGORY \u003d \"]\";","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    private static final String SYMBOL_DOLLAR \u003d \"$\";","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    private String category;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    private int amount;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    public Category(String category) {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    public String getCategory() {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"        return category;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    public int getAmount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"        return amount;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    public void setAmount(int amount) {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        return String.format(\"%s%s%s %s%d\", PREFIX_CATEGORY, category, POSTFIX_CATEGORY,","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"                SYMBOL_DOLLAR, amount);","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"chydarren":37}},{"path":"src/main/java/seedu/duke/data/transaction/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.data.transaction;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":" * Represents the expense of the user added to the application.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":" * Records the amount, category and the date of spending.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"public class Expense extends Transaction {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"    public static final String TRANSACTION_NAME \u003d \"expense\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    private static String ICON_EXPENSE \u003d \"[-]\";","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    public Expense(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"        super(description, amount, category, date);","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    public String getType() {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"        return TRANSACTION_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"    public String getIcon() {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"        return ICON_EXPENSE;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"        return getIcon() + super.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"wcwy":30}},{"path":"src/main/java/seedu/duke/data/transaction/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.data.transaction;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":" * Represents the income of the user added to the application.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":" * Records the amount, category and date of the income.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"public class Income extends Transaction {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"    public static final String TRANSACTION_NAME \u003d \"income\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    private static final String ICON_INCOME \u003d \"[+]\";","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    public Income(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"        super(description, amount, category, date);","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"wcwy"},"content":"    public String getType() {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wcwy"},"content":"        return TRANSACTION_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":"    public String getIcon() {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":"        return ICON_INCOME;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"        return getIcon() + super.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"wcwy":30}},{"path":"src/main/java/seedu/duke/data/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.data.transaction;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.common.DateFormats.DATE_OUTPUT_PATTERN;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":" * Represents a transaction made by the user, which could be either an income or an expense.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"public abstract class Transaction {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    private static final String PREFIX_CATEGORY \u003d \"[\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    private static final String POSTFIX_CATEGORY \u003d \"]\";","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    private static final String SYMBOL_DOLLAR \u003d \"$\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    private static final String SYMBOL_PIPE \u003d \"|\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    private static final String TEXT_AT \u003d \"at\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    private static final String TEXT_DESCRIPTION \u003d \"Description:\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"    private String category;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"    private String description;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"    private int amount;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"    private LocalDate date;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"    public Transaction(String description, int amount, String category, LocalDate date) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"    public abstract String getType();","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"        return description;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"    public int getAmount() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"        return amount;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"    public void setAmount(int amount) {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"    public String getCategory() {","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"        return category;","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"chinhan99"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"chinhan99"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"chinhan99"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"chinhan99"},"content":"        return date;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"chinhan99"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"chinhan99"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"wcwy"},"content":"     * Returns the date of transaction in MMM dd yyyy format.","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"wcwy"},"content":"     * @return Formatted date of the transaction","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"wcwy"},"content":"    public String printFormattedDate() {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"wcwy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_OUTPUT_PATTERN.toString());","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"wcwy"},"content":"        return date.format(formatter);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"wcwy"},"content":"    public String printFormattedCategory() {","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"wcwy"},"content":"        return PREFIX_CATEGORY + category + POSTFIX_CATEGORY;","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"wcwy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"wcwy"},"content":"        return String.format(\"%s %s%d %s %s %s %s %s\", printFormattedCategory(), SYMBOL_DOLLAR,","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"wcwy"},"content":"                amount, TEXT_AT, printFormattedDate(), SYMBOL_PIPE, TEXT_DESCRIPTION, description);","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"chinhan99":48,"wcwy":32,"chydarren":8}},{"path":"src/main/java/seedu/duke/exception/FindTransactionMissingKeywordsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class FindTransactionMissingKeywordsException extends MoolahException {","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"        return ErrorMessages.ERROR_FIND_COMMAND_MISSING_KEYWORDS.toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"chydarren":16}},{"path":"src/main/java/seedu/duke/exception/GlobalDuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public class GlobalDuplicateTagException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"        return ErrorMessages.ERROR_GLOBAL_DUPLICATE_TAG.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"paullowse":2,"wcwy":14}},{"path":"src/main/java/seedu/duke/exception/GlobalEmptyParameterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class GlobalEmptyParameterException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_GLOBAL_EMPTY_PARAMETER.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"chinhan99":16}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.common.ErrorMessages.ERROR_GLOBAL_INVALID_COMMAND;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"public class GlobalInvalidCommandException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"        return ERROR_GLOBAL_INVALID_COMMAND.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"paullowse":14,"chydarren":2}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"public class GlobalInvalidIndexException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"        return ErrorMessages.ERROR_GLOBAL_INVALID_INDEX.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"paullowse":2,"brian-vb":14}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidMonthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class GlobalInvalidMonthException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"        return ErrorMessages.ERROR_GLOBAL_INVALID_MONTH.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"paullowse":2,"chydarren":14}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"public class GlobalInvalidNumberException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"        return ErrorMessages.ERROR_GLOBAL_INVALID_NUMBER.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chinhan99":2,"brian-vb":14}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidPeriodException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"public class GlobalInvalidPeriodException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"        return ErrorMessages.ERROR_GLOBAL_INVALID_PERIOD.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chinhan99":2,"paullowse":14}},{"path":"src/main/java/seedu/duke/exception/GlobalInvalidYearException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"public class GlobalInvalidYearException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"        return ErrorMessages.ERROR_GLOBAL_INVALID_YEAR.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paullowse":16}},{"path":"src/main/java/seedu/duke/exception/GlobalMissingTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public class GlobalMissingTagException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"        return ErrorMessages.ERROR_GLOBAL_MISSING_TAG.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"paullowse":2,"wcwy":14}},{"path":"src/main/java/seedu/duke/exception/GlobalNumberNotNumericException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"public class GlobalNumberNotNumericException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"        return ErrorMessages.ERROR_GLOBAL_NUMBER_NOT_NUMERIC.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"brian-vb":14,"chydarren":2}},{"path":"src/main/java/seedu/duke/exception/GlobalUnsupportedTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class GlobalUnsupportedTagException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_GLOBAL_UNSUPPORTED_TAG.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"chinhan99":16}},{"path":"src/main/java/seedu/duke/exception/HelpUnknownOptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public class HelpUnknownOptionException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"        return ErrorMessages.ERROR_UNKNOWN_HELP_OPTION.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chinhan99":2,"wcwy":15}},{"path":"src/main/java/seedu/duke/exception/InputTransactionInvalidAmountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class InputTransactionInvalidAmountException extends MoolahException {","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_TRANSACTION_INVALID_AMOUNT.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"chinhan99":17}},{"path":"src/main/java/seedu/duke/exception/InputTransactionInvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class InputTransactionInvalidCategoryException extends MoolahException {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_TRANSACTION_INVALID_CATEGORY.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chinhan99":15,"wcwy":2}},{"path":"src/main/java/seedu/duke/exception/InputTransactionInvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public class InputTransactionInvalidDateException extends MoolahException {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"        return ErrorMessages.ERROR_TRANSACTION_INVALID_DATE.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chinhan99":2,"wcwy":15}},{"path":"src/main/java/seedu/duke/exception/InputTransactionInvalidTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class InputTransactionInvalidTypeException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"        return ErrorMessages.ERROR_TRANSACTION_INVALID_TYPE.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chinhan99":2,"chydarren":14}},{"path":"src/main/java/seedu/duke/exception/MaximumTransactionCountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"public class MaximumTransactionCountException extends MoolahException {","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"        return ErrorMessages.ERROR_MAXIMUM_TRANSACTION_COUNT_REACHED.toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"chinhan99":2,"wcwy":14}},{"path":"src/main/java/seedu/duke/exception/MoolahException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":" * Represents the base class of the exceptions defined for Moolah Manager.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"public abstract class MoolahException extends Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"    public abstract String getMessage();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"wcwy":15}},{"path":"src/main/java/seedu/duke/exception/StatsInvalidTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class StatsInvalidTypeException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"        return ErrorMessages.ERROR_STATS_COMMAND_INVALID_TYPE.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"chinhan99":2,"chydarren":15}},{"path":"src/main/java/seedu/duke/exception/StorageFileCorruptedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class StorageFileCorruptedException extends MoolahException {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_STORAGE_FILE_CORRUPTED.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"chinhan99":18}},{"path":"src/main/java/seedu/duke/exception/StorageWriteErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"import seedu.duke.common.ErrorMessages;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"public class StorageWriteErrorException extends MoolahException {","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * Returns the error message of the exception to alert user of the exception.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     * @return A string containing the error message","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        return ErrorMessages.ERROR_STORAGE_WRITE.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"chinhan99":16}},{"path":"src/main/java/seedu/duke/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.ByeCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.StatsCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.PurgeCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalInvalidCommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"wcwy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":" * Represents a parser that parses the user input into a Command object ready for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"wcwy"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"wcwy"},"content":" * \u003cp\u003eThe CommandParser will check that the user input calls a valid command,","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"wcwy"},"content":" * then create the corresponding command object and call ParameterParser to further parse the parameter portion","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"wcwy"},"content":" * of the user input and set the parameters inside the command object,","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"wcwy"},"content":" * such that the command object will be ready for an execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"wcwy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"wcwy"},"content":"public class CommandParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    private static final int SPLIT_POSITION \u003d 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    private static final Logger parserLogger \u003d Logger.getLogger(ParameterParser.class.getName());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"     * Parses the user input into Command class based on the command word.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"wcwy"},"content":"     * @param fullCommandInput A line of input entered by the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"wcwy"},"content":"     * @return IS_EXIT If input equals \"bye\", else return IS_CONTINUE.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"wcwy"},"content":"     * @throws MoolahException Any command input exceptions captured by Moolah Manager.","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"wcwy"},"content":"    public static Command parse(String fullCommandInput) throws MoolahException {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"wcwy"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"wcwy"},"content":"        String[] inputTokens \u003d splitInput(fullCommandInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"wcwy"},"content":"        assert inputTokens.length \u003d\u003d 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"wcwy"},"content":"        String commandWordInput \u003d inputTokens[0];","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"        String parametersInput \u003d inputTokens[1];","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"        // Parses the command word from user input","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"        command \u003d getCommand(commandWordInput, parametersInput);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"wcwy"},"content":"        // TODO: To remove this if statement once a solution is found for managing parameter that allows space","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"wcwy"},"content":"        if (command instanceof FindCommand) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"wcwy"},"content":"            return command;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"wcwy"},"content":"        // Parses the parameters from user input to set up the parameters for the command","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"wcwy"},"content":"        assert command !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"wcwy"},"content":"        ParameterParser.parse(command, parametersInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"wcwy"},"content":"        return command;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"     * Splits the user input into two parts, i.e. the command word and the parameter(s).","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"     * @param fullCommandInput A line of input entered by the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"     * @return A string array of input tokens.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"    public static String[] splitInput(String fullCommandInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"        String[] inputTokens;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"        // Separates the command word and the parameters into an array of size two","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"        if (fullCommandInput.contains(DELIMITER)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"            inputTokens \u003d fullCommandInput.split(DELIMITER, SPLIT_POSITION);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"            inputTokens \u003d new String[]{fullCommandInput, \"\"};","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"        return inputTokens;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"     * Creates a Command object based on the command word entered by user.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"     * @param commandWordInput The command word entered by user.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"     * @return Command object created.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"     * @throws GlobalInvalidCommandException If the command word is not supported by the application.","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"    public static Command getCommand(String commandWordInput, String parameterInput) throws","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"            GlobalInvalidCommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"        // TODO: Remove parameter input once a solution is found for managing parameter that allows space","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"        switch (commandWordInput.toUpperCase()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"            command \u003d new AddCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"            command \u003d new EditCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"            command \u003d new FindCommand(parameterInput);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"            command \u003d new StatsCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"        case PurgeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"            command \u003d new PurgeCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"paullowse"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"paullowse"},"content":"            command \u003d new DeleteCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"paullowse"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"paullowse"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"paullowse"},"content":"            break;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"paullowse"},"content":"        default:","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid command error is caught in this command\");","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"paullowse"},"content":"            throw new GlobalInvalidCommandException();","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"paullowse"},"content":"        return command;","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"paullowse":51,"wcwy":55,"chydarren":26}},{"path":"src/main/java/seedu/duke/parser/ParameterParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Expense;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"import seedu.duke.data.transaction.Income;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"//@@author chydarren","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalEmptyParameterException;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalInvalidMonthException;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalInvalidNumberException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalInvalidPeriodException;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalInvalidYearException;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalNumberNotNumericException;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalDuplicateTagException;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalMissingTagException;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":"//@@author brian-vb","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.InputTransactionInvalidAmountException;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.InputTransactionInvalidCategoryException;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.InputTransactionInvalidDateException;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.InputTransactionInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.GlobalUnsupportedTagException;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.StatsInvalidTypeException;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.MoolahException;","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.exception.HelpUnknownOptionException;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"wcwy"},"content":"//@@author wcwy","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"wcwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"wcwy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"wcwy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"wcwy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"wcwy"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"wcwy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"wcwy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"wcwy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"//@@author paullowse","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_HELP_OPTION;","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_ENTRY_NUMBER;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_STATS_TYPE;","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_MONTH;","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_NUMBER;","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_PERIOD;","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_GLOBAL_YEAR;","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_AMOUNT;","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_CATEGORY;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_DESCRIPTION;","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.command.CommandTag.COMMAND_TAG_TRANSACTION_TYPE;","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"chinhan99"},"content":"//@@author chinhan99","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.Constants.MAX_AMOUNT_VALUE;","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.Constants.MIN_AMOUNT_VALUE;","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"chinhan99"},"content":"import static seedu.duke.common.DateFormats.DATE_INPUT_PATTERN;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"chinhan99"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"chinhan99"},"content":" * Parses the parameter portion of the user input and set the parameters into the Command object.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"chinhan99"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"chinhan99"},"content":" * \u003cp\u003eThe ParameterParser will check that the parameter input portion contains only the supported tags,","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"chinhan99"},"content":" * for each of the supported tag, parses the parameter into the valid form required by the Command object","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"chinhan99"},"content":" * and to store the parsed value inside the command object.","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"chinhan99"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"chinhan99"},"content":"public class ParameterParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"    private static final int SPLIT_POSITION \u003d 2;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"    private static final int MINIMUM_TAG_LENGTH \u003d 2;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"    private static final String CLASS_TYPE_EXPENSE \u003d \"seedu.duke.data.transaction.Expense\";","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"    private static final String CLASS_TYPE_INCOME \u003d \"seedu.duke.data.transaction.Income\";","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"    private static final String CATEGORIES \u003d \"categories\";","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"    private static final String TIME \u003d \"time\";","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"    private static final String WEEKS \u003d \"weeks\";","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"    private static final String MONTHS \u003d \"months\";","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"wcwy"},"content":"    private static final Logger parserLogger \u003d Logger.getLogger(ParameterParser.class.getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"chinhan99"},"content":"     * Parses the parameters input into proper parameters of the command object.","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"chinhan99"},"content":"     * \u003cp\u003eThe parameters will go through the following checks during the parsing:","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"chinhan99"},"content":"     * 1. Check that the user input contains all mandatory tags of the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"chinhan99"},"content":"     * 2. Check that the user input does not contain tags not supported by the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"chinhan99"},"content":"     * 3. Check that the user input does not contain a same tag more than once.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"chinhan99"},"content":"     * 4. Check that the user input does not contain a tag without parameter.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"chinhan99"},"content":"     * 5. For each parameter, check that the format of the parameter is correct.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"chinhan99"},"content":"     * @param command A command object created based on the command word given by user.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"chinhan99"},"content":"     * @throws MoolahException If Moolah Manager captures any command input exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"chinhan99"},"content":"    public static void parse(Command command, String parametersInput) throws MoolahException {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"chinhan99"},"content":"        parserLogger.setLevel(Level.SEVERE);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"chinhan99"},"content":"        assert command !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"chinhan99"},"content":"        String[] splits \u003d parametersInput.split(DELIMITER);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"chinhan99"},"content":"        // Might throw InputMissingTagException","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"chinhan99"},"content":"        checkMandatoryTagsExist(command, splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"chinhan99"},"content":"        /*","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"chinhan99"},"content":"        An empty parameterInput suggests that no tag is provided by user. Since it passes the check","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"chinhan99"},"content":"        for mandatory check, it also means that the command does not have a mandatory tag. Therefore,","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"chinhan99"},"content":"        there is no more need to further check and set the parameters for empty parameters input.","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"chinhan99"},"content":"        */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"chinhan99"},"content":"        if (!parametersInput.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"chinhan99"},"content":"            // Might throw InputUnsupportedTagException","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"chinhan99"},"content":"            checkUnsupportedTagsNotExist(command, splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"chinhan99"},"content":"            // Might throw InputDuplicateTagException","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"chinhan99"},"content":"            checkDuplicateTagsNotExist(splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"chinhan99"},"content":"            // Might throw InputEmptyParameterException","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"chinhan99"},"content":"            checkParameterNotEmpty(splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"chinhan99"},"content":"            // The parameters input contains only the supported tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"chinhan99"},"content":"            // For each tag, check that the parameter is correct and set it inside the command.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"chinhan99"},"content":"            setCommand(command, splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"chinhan99"},"content":"        parserLogger.log(Level.INFO, \"Parameter parsed successfully: \" + command + parametersInput);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"wcwy"},"content":"     * Checks if all the mandatory tags exists in the split user inputs.","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"wcwy"},"content":"     * @param command A command object created based on the command word given by user.","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"wcwy"},"content":"     * @param splits  The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"wcwy"},"content":"     * @throws GlobalMissingTagException If there is a missing mandatory tag.","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"wcwy"},"content":"    public static void checkMandatoryTagsExist(Command command, String[] splits) throws GlobalMissingTagException {","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"wcwy"},"content":"        String[] tags \u003d command.getMandatoryTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"wcwy"},"content":"        for (String tag : tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"wcwy"},"content":"            boolean found \u003d findMatchingTagAmongInputs(tag, splits);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"wcwy"},"content":"            if (!found) {","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"wcwy"},"content":"                parserLogger.log(Level.WARNING, \"A missing tag error is caught for the given tag: \" + tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"wcwy"},"content":"                throw new GlobalMissingTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"wcwy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"chinhan99"},"content":"     * Checks if the split user inputs contains any unsupported tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"chinhan99"},"content":"     * @param command A command object created based on the command word given by user.","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"chinhan99"},"content":"     * @param splits  The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"chinhan99"},"content":"     * @throws GlobalUnsupportedTagException If there is an extra tag that is not recognised.","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"chinhan99"},"content":"    public static void checkUnsupportedTagsNotExist(Command command, String[] splits)","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"chinhan99"},"content":"            throws GlobalUnsupportedTagException {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"chinhan99"},"content":"        String[] mandatoryTags \u003d command.getMandatoryTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"chinhan99"},"content":"        String[] optionalTags \u003d command.getOptionalTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"chinhan99"},"content":"        for (String split : splits) {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"chinhan99"},"content":"            if (split.length() \u003c MINIMUM_TAG_LENGTH) {","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"chinhan99"},"content":"                // None of the tags is shorter than two characters","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"chinhan99"},"content":"                parserLogger.log(Level.WARNING, \"An unsupported tag error is caught for the given tag: \" + split);","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"chinhan99"},"content":"                throw new GlobalUnsupportedTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"chinhan99"},"content":"            boolean hasFoundAmongMandatoryTag \u003d findIfParameterTagAmongTags(split, mandatoryTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"chinhan99"},"content":"            boolean hasFoundAmongOptionalTag \u003d findIfParameterTagAmongTags(split, optionalTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"chinhan99"},"content":"            if (hasFoundAmongMandatoryTag || hasFoundAmongOptionalTag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"chinhan99"},"content":"                continue;","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"chinhan99"},"content":"            // Found a tag entered by the user but does not exist in the supported tag for the command","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"chinhan99"},"content":"            parserLogger.log(Level.WARNING, \"An unsupported tag error is caught for the given tag: \" + split);","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"chinhan99"},"content":"            throw new GlobalUnsupportedTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"wcwy"},"content":"     * Checks if the split user inputs contains a tag multiple times.","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"wcwy"},"content":"     * @param splits The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"wcwy"},"content":"     * @throws GlobalDuplicateTagException If there is an extra of the same tag.","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"wcwy"},"content":"    public static void checkDuplicateTagsNotExist(String[] splits) throws GlobalDuplicateTagException {","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"wcwy"},"content":"        HashMap\u003cString, Integer\u003e tagOccurenceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"wcwy"},"content":"        for (String split : splits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"wcwy"},"content":"            assert split.length() \u003e\u003d MINIMUM_TAG_LENGTH;","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"wcwy"},"content":"            String tag \u003d split.substring(0, SPLIT_POSITION);","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"wcwy"},"content":"            // The duplicated tag can be found in the hash map","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"wcwy"},"content":"            if (tagOccurenceMap.containsKey(tag)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"wcwy"},"content":"                parserLogger.log(Level.WARNING, \"An duplicate tag error is caught for the given tag: \" + tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"wcwy"},"content":"                throw new GlobalDuplicateTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"wcwy"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"wcwy"},"content":"            tagOccurenceMap.put(tag, 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":203,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"chinhan99"},"content":"     * Checks if there are missing parameter within the user input.","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"chinhan99"},"content":"     * If the split.length() is \u003c\u003d 2, it means that only the tag exists , and there is no parameter after the tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"chinhan99"},"content":"     * @param splits The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"chinhan99"},"content":"     * @throws GlobalEmptyParameterException If there exists a tag without parameter.","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"chinhan99"},"content":"    public static void checkParameterNotEmpty(String[] splits) throws GlobalEmptyParameterException {","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"chinhan99"},"content":"        for (String split : splits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"chinhan99"},"content":"            if (split.length() \u003d\u003d 2) {","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"chinhan99"},"content":"                parserLogger.log(Level.WARNING, \"An empty parameter error is caught for the \"","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"chinhan99"},"content":"                        + \"given tag input: \" + split);","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"chinhan99"},"content":"                throw new GlobalEmptyParameterException();","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":221,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"wcwy"},"content":"     * Returns a boolean value on whether a tag can be found among the split user inputs.","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"wcwy"},"content":"     * @param tag    A specific tag used to locate the command parameter.","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"wcwy"},"content":"     * @param splits The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"wcwy"},"content":"     * @return Whether the tag is found within the split inputs.","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"wcwy"},"content":"    private static boolean findMatchingTagAmongInputs(String tag, String[] splits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"wcwy"},"content":"        boolean hasFound \u003d false;","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"wcwy"},"content":"        for (String split : splits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"wcwy"},"content":"            hasFound \u003d split.startsWith(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"wcwy"},"content":"            if (hasFound) {","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"wcwy"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"wcwy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"wcwy"},"content":"        return hasFound;","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":242,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"chinhan99"},"content":"     * Returns a boolean value on whether a tag can be found among the split user inputs.","lastModifiedDate":"2022-10-11"},{"lineNumber":244,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"chinhan99"},"content":"     * @param parameter A user parameter input entered after the command word.","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"chinhan99"},"content":"     * @param tags      An array of tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"chinhan99"},"content":"     * @return Whether the tag is found within the split inputs.","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":249,"author":{"gitId":"chinhan99"},"content":"    private static boolean findIfParameterTagAmongTags(String parameter, String[] tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":250,"author":{"gitId":"chinhan99"},"content":"        assert parameter.length() \u003e\u003d MINIMUM_TAG_LENGTH;","lastModifiedDate":"2022-10-11"},{"lineNumber":251,"author":{"gitId":"chinhan99"},"content":"        boolean hasFound \u003d false;","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"chinhan99"},"content":"        String parameterTag \u003d parameter.substring(0, SPLIT_POSITION);","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"chinhan99"},"content":"        for (String tag : tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"chinhan99"},"content":"            hasFound \u003d tag.equals(parameterTag);","lastModifiedDate":"2022-10-11"},{"lineNumber":256,"author":{"gitId":"chinhan99"},"content":"            if (hasFound) {","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"chinhan99"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":258,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"chinhan99"},"content":"        return hasFound;","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-15"},{"lineNumber":264,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"paullowse"},"content":"     * For each split parameters, split it into tag and parameter, then check and set the parameters into the Command.","lastModifiedDate":"2022-10-11"},{"lineNumber":267,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":268,"author":{"gitId":"paullowse"},"content":"     * @param command A command object created based on the command word given by user.","lastModifiedDate":"2022-10-11"},{"lineNumber":269,"author":{"gitId":"paullowse"},"content":"     * @param splits  The user input after the command word, split into a list for every space found.","lastModifiedDate":"2022-10-11"},{"lineNumber":270,"author":{"gitId":"paullowse"},"content":"     * @throws MoolahException If Moolah Manager captures any command input exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":272,"author":{"gitId":"paullowse"},"content":"    public static void setCommand(Command command, String[] splits) throws MoolahException {","lastModifiedDate":"2022-10-16"},{"lineNumber":273,"author":{"gitId":"paullowse"},"content":"        assert command !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"paullowse"},"content":"        for (String split : splits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":275,"author":{"gitId":"paullowse"},"content":"            String tag \u003d split.substring(0, SPLIT_POSITION);","lastModifiedDate":"2022-10-11"},{"lineNumber":276,"author":{"gitId":"paullowse"},"content":"            String parameter \u003d split.substring(SPLIT_POSITION);","lastModifiedDate":"2022-10-11"},{"lineNumber":277,"author":{"gitId":"paullowse"},"content":"            setParameter(command, tag, parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":278,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":279,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":280,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":281,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":282,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"wcwy"},"content":"     * Sets the parsed parameter for each valid tag of the command.","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":286,"author":{"gitId":"wcwy"},"content":"     * \u003cp\u003eThe parameters set will be parsed into a correct format/data type before storing into a parameter","lastModifiedDate":"2022-10-19"},{"lineNumber":287,"author":{"gitId":"wcwy"},"content":"     * within the Command object given. This ensures that the execution of the command will not encounter","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"wcwy"},"content":"     * any unformatted input or unsupported data type issue, as far as possible.","lastModifiedDate":"2022-10-19"},{"lineNumber":289,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":290,"author":{"gitId":"wcwy"},"content":"     * @param command   A command object created based on the command word given by user.","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"wcwy"},"content":"     * @param tag       The tag used before the parameter to indicate the type of the parameter provided.","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"wcwy"},"content":"     * @param parameter The value of a parameter given by the user for the chosen command.","lastModifiedDate":"2022-10-19"},{"lineNumber":293,"author":{"gitId":"wcwy"},"content":"     * @throws MoolahException If an error is found when the parameter is parsed.","lastModifiedDate":"2022-10-19"},{"lineNumber":294,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":295,"author":{"gitId":"wcwy"},"content":"    private static void setParameter(Command command, String tag, String parameter) throws MoolahException {","lastModifiedDate":"2022-10-11"},{"lineNumber":296,"author":{"gitId":"wcwy"},"content":"        switch (tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":297,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_TRANSACTION_TYPE:","lastModifiedDate":"2022-10-11"},{"lineNumber":298,"author":{"gitId":"wcwy"},"content":"            // TODO: To standardise the format for transaction type for add and list","lastModifiedDate":"2022-10-11"},{"lineNumber":299,"author":{"gitId":"wcwy"},"content":"            if (command instanceof ListCommand) {","lastModifiedDate":"2022-10-11"},{"lineNumber":300,"author":{"gitId":"wcwy"},"content":"                command.setType(parseTypeTagForListing(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":301,"author":{"gitId":"wcwy"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":302,"author":{"gitId":"wcwy"},"content":"                command.setType(parseTypeTagForAdding(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":303,"author":{"gitId":"wcwy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":304,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":305,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_TRANSACTION_CATEGORY:","lastModifiedDate":"2022-10-11"},{"lineNumber":306,"author":{"gitId":"wcwy"},"content":"            command.setCategory(parseCategoryTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":307,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":308,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_TRANSACTION_AMOUNT:","lastModifiedDate":"2022-10-11"},{"lineNumber":309,"author":{"gitId":"wcwy"},"content":"            command.setAmount(parseAmountTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":310,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":311,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_TRANSACTION_DATE:","lastModifiedDate":"2022-10-11"},{"lineNumber":312,"author":{"gitId":"wcwy"},"content":"            command.setDate(parseDateTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":313,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":314,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_TRANSACTION_DESCRIPTION:","lastModifiedDate":"2022-10-11"},{"lineNumber":315,"author":{"gitId":"wcwy"},"content":"            command.setDescription(parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":316,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":317,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_GLOBAL_ENTRY_NUMBER:","lastModifiedDate":"2022-10-23"},{"lineNumber":318,"author":{"gitId":"wcwy"},"content":"            command.setEntryNumber(parseEntryTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":319,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":320,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_HELP_OPTION:","lastModifiedDate":"2022-10-11"},{"lineNumber":321,"author":{"gitId":"wcwy"},"content":"            command.setIsDetailedOption(parseHelpOptionTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":322,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":323,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_STATS_TYPE:","lastModifiedDate":"2022-10-23"},{"lineNumber":324,"author":{"gitId":"wcwy"},"content":"            command.setStatsType(parseStatsTypeTag(parameter));","lastModifiedDate":"2022-10-11"},{"lineNumber":325,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-11"},{"lineNumber":326,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_GLOBAL_MONTH:","lastModifiedDate":"2022-10-23"},{"lineNumber":327,"author":{"gitId":"wcwy"},"content":"            command.setStatsMonth(parseMonthTag(parameter));","lastModifiedDate":"2022-10-23"},{"lineNumber":328,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_GLOBAL_YEAR:","lastModifiedDate":"2022-10-23"},{"lineNumber":330,"author":{"gitId":"wcwy"},"content":"            command.setStatsYear(parseYearTag(parameter));","lastModifiedDate":"2022-10-23"},{"lineNumber":331,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_GLOBAL_NUMBER:","lastModifiedDate":"2022-10-23"},{"lineNumber":333,"author":{"gitId":"wcwy"},"content":"            command.setStatsNumber(parseNumberTag(parameter));","lastModifiedDate":"2022-10-23"},{"lineNumber":334,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"wcwy"},"content":"        case COMMAND_TAG_GLOBAL_PERIOD:","lastModifiedDate":"2022-10-23"},{"lineNumber":336,"author":{"gitId":"wcwy"},"content":"            command.setStatsPeriod(parsePeriodTag(parameter));","lastModifiedDate":"2022-10-23"},{"lineNumber":337,"author":{"gitId":"wcwy"},"content":"            break;","lastModifiedDate":"2022-10-22"},{"lineNumber":338,"author":{"gitId":"wcwy"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":339,"author":{"gitId":"wcwy"},"content":"            parserLogger.log(Level.WARNING, \"An unsupported tag exception is caught: \" + tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":340,"author":{"gitId":"wcwy"},"content":"            throw new GlobalUnsupportedTagException();","lastModifiedDate":"2022-10-23"},{"lineNumber":341,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":342,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":343,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":344,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":345,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":346,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":347,"author":{"gitId":"chydarren"},"content":"     * Parses the user parameter input for the description and returns it.","lastModifiedDate":"2022-10-10"},{"lineNumber":348,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":349,"author":{"gitId":"chydarren"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":350,"author":{"gitId":"chydarren"},"content":"     * @return The class type if no exceptions are thrown.","lastModifiedDate":"2022-10-10"},{"lineNumber":351,"author":{"gitId":"chydarren"},"content":"     * @throws InputTransactionInvalidTypeException If the transaction type provided is not supported.","lastModifiedDate":"2022-10-23"},{"lineNumber":352,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":353,"author":{"gitId":"chydarren"},"content":"    public static String parseTypeTagForListing(String parameter) throws InputTransactionInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":354,"author":{"gitId":"chydarren"},"content":"        switch (parameter) {","lastModifiedDate":"2022-10-10"},{"lineNumber":355,"author":{"gitId":"chydarren"},"content":"        case \"expense\":","lastModifiedDate":"2022-10-10"},{"lineNumber":356,"author":{"gitId":"chydarren"},"content":"            return CLASS_TYPE_EXPENSE;","lastModifiedDate":"2022-10-10"},{"lineNumber":357,"author":{"gitId":"chydarren"},"content":"        case \"income\":","lastModifiedDate":"2022-10-10"},{"lineNumber":358,"author":{"gitId":"chydarren"},"content":"            return CLASS_TYPE_INCOME;","lastModifiedDate":"2022-10-10"},{"lineNumber":359,"author":{"gitId":"chydarren"},"content":"        default:","lastModifiedDate":"2022-10-10"},{"lineNumber":360,"author":{"gitId":"chydarren"},"content":"            parserLogger.log(Level.WARNING, \"An invalid type error \"","lastModifiedDate":"2022-10-21"},{"lineNumber":361,"author":{"gitId":"chydarren"},"content":"                    + \"is caught for the given parameter: \" + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":362,"author":{"gitId":"chydarren"},"content":"            throw new InputTransactionInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":363,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":364,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":365,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":366,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":367,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":368,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":369,"author":{"gitId":"wcwy"},"content":"     * Checks if the type parameter is a valid transaction type and returns the parameter if it is valid.","lastModifiedDate":"2022-10-19"},{"lineNumber":370,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":371,"author":{"gitId":"wcwy"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":372,"author":{"gitId":"wcwy"},"content":"     * @return The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":373,"author":{"gitId":"wcwy"},"content":"     * @throws InputTransactionInvalidTypeException If the transaction type provided is not supported.","lastModifiedDate":"2022-10-23"},{"lineNumber":374,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":375,"author":{"gitId":"wcwy"},"content":"    public static String parseTypeTagForAdding(String parameter) throws InputTransactionInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":376,"author":{"gitId":"wcwy"},"content":"        boolean isExpense \u003d parameter.equals(Expense.TRANSACTION_NAME);","lastModifiedDate":"2022-10-11"},{"lineNumber":377,"author":{"gitId":"wcwy"},"content":"        boolean isIncome \u003d parameter.equals(Income.TRANSACTION_NAME);","lastModifiedDate":"2022-10-11"},{"lineNumber":378,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":379,"author":{"gitId":"wcwy"},"content":"        if (!isExpense \u0026\u0026 !isIncome) {","lastModifiedDate":"2022-10-11"},{"lineNumber":380,"author":{"gitId":"wcwy"},"content":"            parserLogger.log(Level.WARNING, \"An invalid type error \"","lastModifiedDate":"2022-10-21"},{"lineNumber":381,"author":{"gitId":"wcwy"},"content":"                    + \"is caught for the given parameter: \" + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":382,"author":{"gitId":"wcwy"},"content":"            throw new InputTransactionInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":383,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":385,"author":{"gitId":"wcwy"},"content":"        return parameter;","lastModifiedDate":"2022-10-11"},{"lineNumber":386,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":387,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":388,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":389,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":390,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":391,"author":{"gitId":"chinhan99"},"content":"     * Parses the user parameter input for the description and returns it.","lastModifiedDate":"2022-10-10"},{"lineNumber":392,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":393,"author":{"gitId":"chinhan99"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":394,"author":{"gitId":"chinhan99"},"content":"     * @return The category parameter if no exceptions are thrown.","lastModifiedDate":"2022-10-10"},{"lineNumber":395,"author":{"gitId":"chinhan99"},"content":"     * @throws InputTransactionInvalidCategoryException If the category provided contains numeric or symbols.","lastModifiedDate":"2022-10-11"},{"lineNumber":396,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":397,"author":{"gitId":"chinhan99"},"content":"    public static String parseCategoryTag(String parameter) throws InputTransactionInvalidCategoryException {","lastModifiedDate":"2022-10-10"},{"lineNumber":398,"author":{"gitId":"chinhan99"},"content":"        Pattern specialSymbols \u003d Pattern.compile(\"[!@#$%\u0026*()_+\u003d|\u003c\u003e?{}\\\\[\\\\]~-]\");","lastModifiedDate":"2022-10-10"},{"lineNumber":399,"author":{"gitId":"chinhan99"},"content":"        Matcher hasSpecialSymbols \u003d specialSymbols.matcher(parameter);","lastModifiedDate":"2022-10-10"},{"lineNumber":400,"author":{"gitId":"chinhan99"},"content":"        if (containNumeric(parameter) || hasSpecialSymbols.find()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":401,"author":{"gitId":"chinhan99"},"content":"            parserLogger.log(Level.WARNING, \"An invalid category error is caught for the given parameter: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":402,"author":{"gitId":"chinhan99"},"content":"                    + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":403,"author":{"gitId":"chinhan99"},"content":"            throw new InputTransactionInvalidCategoryException();","lastModifiedDate":"2022-10-10"},{"lineNumber":404,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":405,"author":{"gitId":"chinhan99"},"content":"        return parameter;","lastModifiedDate":"2022-10-10"},{"lineNumber":406,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":407,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":408,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":409,"author":{"gitId":"chinhan99"},"content":"     * Parses the user parameter input for the amount and returns it.","lastModifiedDate":"2022-10-11"},{"lineNumber":410,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":411,"author":{"gitId":"chinhan99"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":412,"author":{"gitId":"chinhan99"},"content":"     * @return The amount integer if no exceptions are thrown.","lastModifiedDate":"2022-10-11"},{"lineNumber":413,"author":{"gitId":"chinhan99"},"content":"     * @throws InputTransactionInvalidAmountException If the transaction amount given is not a valid accepted integer.","lastModifiedDate":"2022-10-22"},{"lineNumber":414,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":415,"author":{"gitId":"chinhan99"},"content":"    private static int parseAmountTag(String parameter) throws InputTransactionInvalidAmountException {","lastModifiedDate":"2022-10-21"},{"lineNumber":416,"author":{"gitId":"chinhan99"},"content":"        Pattern specialSymbols \u003d Pattern.compile(\"[!@#$%\u0026*()_+\u003d|\u003c\u003e?{}\\\\[\\\\]~-]\");","lastModifiedDate":"2022-10-11"},{"lineNumber":417,"author":{"gitId":"chinhan99"},"content":"        Matcher hasSpecialSymbols \u003d specialSymbols.matcher(parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":418,"author":{"gitId":"chinhan99"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":419,"author":{"gitId":"chinhan99"},"content":"            if (containAlphabet(parameter) || hasSpecialSymbols.find()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":420,"author":{"gitId":"chinhan99"},"content":"                parserLogger.log(Level.WARNING, \"An invalid amount error is caught for the given parameter: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":421,"author":{"gitId":"chinhan99"},"content":"                        + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":422,"author":{"gitId":"chinhan99"},"content":"                throw new InputTransactionInvalidAmountException();","lastModifiedDate":"2022-10-21"},{"lineNumber":423,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":424,"author":{"gitId":"chinhan99"},"content":"            int amount \u003d Integer.parseInt(parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":425,"author":{"gitId":"chinhan99"},"content":"            if (amount \u003c MIN_AMOUNT_VALUE || amount \u003e MAX_AMOUNT_VALUE) {","lastModifiedDate":"2022-10-21"},{"lineNumber":426,"author":{"gitId":"chinhan99"},"content":"                parserLogger.log(Level.WARNING, \"An invalid amount error is caught for the given parameter: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":427,"author":{"gitId":"chinhan99"},"content":"                        + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":428,"author":{"gitId":"chinhan99"},"content":"                throw new InputTransactionInvalidAmountException();","lastModifiedDate":"2022-10-21"},{"lineNumber":429,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":430,"author":{"gitId":"chinhan99"},"content":"            return amount;","lastModifiedDate":"2022-10-11"},{"lineNumber":431,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":432,"author":{"gitId":"chinhan99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":433,"author":{"gitId":"chinhan99"},"content":"            parserLogger.log(Level.WARNING, \"An invalid amount error is caught for the given parameter: \" + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":434,"author":{"gitId":"chinhan99"},"content":"            throw new InputTransactionInvalidAmountException();","lastModifiedDate":"2022-10-21"},{"lineNumber":435,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":436,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":437,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":438,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":439,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":440,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":441,"author":{"gitId":"wcwy"},"content":"     * Parses the user parameter input for date into a LocalDate object and returns it.","lastModifiedDate":"2022-10-10"},{"lineNumber":442,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":443,"author":{"gitId":"wcwy"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":444,"author":{"gitId":"wcwy"},"content":"     * @return The LocalDate object parsed from user input given.","lastModifiedDate":"2022-10-10"},{"lineNumber":445,"author":{"gitId":"wcwy"},"content":"     * @throws InputTransactionInvalidDateException If the format of the transaction date provided is incorrect.","lastModifiedDate":"2022-10-11"},{"lineNumber":446,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":447,"author":{"gitId":"wcwy"},"content":"    public static LocalDate parseDateTag(String parameter) throws InputTransactionInvalidDateException {","lastModifiedDate":"2022-10-10"},{"lineNumber":448,"author":{"gitId":"wcwy"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":449,"author":{"gitId":"wcwy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_INPUT_PATTERN.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":450,"author":{"gitId":"wcwy"},"content":"            LocalDate date \u003d LocalDate.parse(parameter, formatter);","lastModifiedDate":"2022-10-10"},{"lineNumber":451,"author":{"gitId":"wcwy"},"content":"            return date;","lastModifiedDate":"2022-10-10"},{"lineNumber":452,"author":{"gitId":"wcwy"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-10-10"},{"lineNumber":453,"author":{"gitId":"wcwy"},"content":"            parserLogger.log(Level.WARNING, \"An invalid date error \"","lastModifiedDate":"2022-10-21"},{"lineNumber":454,"author":{"gitId":"wcwy"},"content":"                    + \"is caught for the given parameter: \" + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":455,"author":{"gitId":"wcwy"},"content":"            throw new InputTransactionInvalidDateException();","lastModifiedDate":"2022-10-10"},{"lineNumber":456,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":457,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":458,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":459,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":460,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":461,"author":{"gitId":"brian-vb"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":462,"author":{"gitId":"brian-vb"},"content":"     * Parses the user parameter input for entry number into an integer and returns it.","lastModifiedDate":"2022-10-11"},{"lineNumber":463,"author":{"gitId":"brian-vb"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":464,"author":{"gitId":"brian-vb"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":465,"author":{"gitId":"brian-vb"},"content":"     * @return The valid integer for list index parsed from user input given.","lastModifiedDate":"2022-10-11"},{"lineNumber":466,"author":{"gitId":"brian-vb"},"content":"     * @throws MoolahException If the entry number provided is not parsable into integer.","lastModifiedDate":"2022-10-11"},{"lineNumber":467,"author":{"gitId":"brian-vb"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":468,"author":{"gitId":"brian-vb"},"content":"    public static int parseEntryTag(String parameter) throws MoolahException {","lastModifiedDate":"2022-10-11"},{"lineNumber":469,"author":{"gitId":"brian-vb"},"content":"        int index;","lastModifiedDate":"2022-10-11"},{"lineNumber":470,"author":{"gitId":"brian-vb"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":471,"author":{"gitId":"brian-vb"},"content":"            index \u003d Integer.parseInt(parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":472,"author":{"gitId":"brian-vb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":473,"author":{"gitId":"brian-vb"},"content":"            parserLogger.log(Level.WARNING, \"An invalid entry number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":474,"author":{"gitId":"brian-vb"},"content":"                    + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":475,"author":{"gitId":"brian-vb"},"content":"            throw new GlobalNumberNotNumericException();","lastModifiedDate":"2022-10-23"},{"lineNumber":476,"author":{"gitId":"brian-vb"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":477,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":478,"author":{"gitId":"brian-vb"},"content":"        return index;","lastModifiedDate":"2022-10-11"},{"lineNumber":479,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":480,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":481,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":482,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":483,"author":{"gitId":"wcwy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":484,"author":{"gitId":"wcwy"},"content":"     * Return a boolean value indicating if the option selected by user is \"detailed\".","lastModifiedDate":"2022-10-11"},{"lineNumber":485,"author":{"gitId":"wcwy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":486,"author":{"gitId":"wcwy"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":487,"author":{"gitId":"wcwy"},"content":"     * @return A boolean value indicating if the option selected by user is \"detailed\"","lastModifiedDate":"2022-10-11"},{"lineNumber":488,"author":{"gitId":"wcwy"},"content":"     * @throws HelpUnknownOptionException If the help option parameter selected is not \u0027detailed\u0027.","lastModifiedDate":"2022-10-23"},{"lineNumber":489,"author":{"gitId":"wcwy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":490,"author":{"gitId":"wcwy"},"content":"    public static boolean parseHelpOptionTag(String parameter) throws HelpUnknownOptionException {","lastModifiedDate":"2022-10-23"},{"lineNumber":491,"author":{"gitId":"wcwy"},"content":"        boolean isValidHelpOption \u003d parameter.equals(\"detailed\");","lastModifiedDate":"2022-10-11"},{"lineNumber":492,"author":{"gitId":"wcwy"},"content":"        if (isValidHelpOption) {","lastModifiedDate":"2022-10-11"},{"lineNumber":493,"author":{"gitId":"wcwy"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":494,"author":{"gitId":"wcwy"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":495,"author":{"gitId":"wcwy"},"content":"            parserLogger.log(Level.WARNING, \"An invalid help option error is caught for the given parameter: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":496,"author":{"gitId":"wcwy"},"content":"                    + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":497,"author":{"gitId":"wcwy"},"content":"            throw new HelpUnknownOptionException();","lastModifiedDate":"2022-10-23"},{"lineNumber":498,"author":{"gitId":"wcwy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":499,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":500,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":501,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":502,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":503,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":504,"author":{"gitId":"chydarren"},"content":"     * Checks if the type parameter is a valid statistic type and returns the parameter if it is valid.","lastModifiedDate":"2022-10-23"},{"lineNumber":505,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":506,"author":{"gitId":"chydarren"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":507,"author":{"gitId":"chydarren"},"content":"     * @return The statistic type.","lastModifiedDate":"2022-10-11"},{"lineNumber":508,"author":{"gitId":"chydarren"},"content":"     * @throws StatsInvalidTypeException If the statistic type given is not supported.","lastModifiedDate":"2022-10-23"},{"lineNumber":509,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":510,"author":{"gitId":"chydarren"},"content":"    public static String parseStatsTypeTag(String parameter) throws StatsInvalidTypeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":511,"author":{"gitId":"chydarren"},"content":"        switch (parameter) {","lastModifiedDate":"2022-10-11"},{"lineNumber":512,"author":{"gitId":"chydarren"},"content":"        case CATEGORIES:","lastModifiedDate":"2022-10-23"},{"lineNumber":513,"author":{"gitId":"chydarren"},"content":"            return CATEGORIES;","lastModifiedDate":"2022-10-23"},{"lineNumber":514,"author":{"gitId":"chydarren"},"content":"        case TIME:","lastModifiedDate":"2022-10-23"},{"lineNumber":515,"author":{"gitId":"chydarren"},"content":"            return TIME;","lastModifiedDate":"2022-10-23"},{"lineNumber":516,"author":{"gitId":"chydarren"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":517,"author":{"gitId":"chydarren"},"content":"            parserLogger.log(Level.WARNING, \"An invalid statistic type error is caught for the given parameter: \"","lastModifiedDate":"2022-10-18"},{"lineNumber":518,"author":{"gitId":"chydarren"},"content":"                    + parameter);","lastModifiedDate":"2022-10-11"},{"lineNumber":519,"author":{"gitId":"chydarren"},"content":"            throw new StatsInvalidTypeException();","lastModifiedDate":"2022-10-23"},{"lineNumber":520,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":521,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":522,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":523,"author":{"gitId":"paullowse"},"content":"    //@@author paullowse","lastModifiedDate":"2022-10-21"},{"lineNumber":524,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":525,"author":{"gitId":"paullowse"},"content":"    public static int parseMonthTag(String parameter) throws GlobalInvalidMonthException,","lastModifiedDate":"2022-10-23"},{"lineNumber":526,"author":{"gitId":"paullowse"},"content":"            GlobalNumberNotNumericException {","lastModifiedDate":"2022-10-23"},{"lineNumber":527,"author":{"gitId":"paullowse"},"content":"        int month;","lastModifiedDate":"2022-10-21"},{"lineNumber":528,"author":{"gitId":"paullowse"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":529,"author":{"gitId":"paullowse"},"content":"            month \u003d Integer.parseInt(parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":530,"author":{"gitId":"paullowse"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":531,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-23"},{"lineNumber":532,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":533,"author":{"gitId":"paullowse"},"content":"            throw new GlobalNumberNotNumericException();","lastModifiedDate":"2022-10-23"},{"lineNumber":534,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":535,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":536,"author":{"gitId":"paullowse"},"content":"        if (month \u003e 12 || month \u003c\u003d 0) {","lastModifiedDate":"2022-10-23"},{"lineNumber":537,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid month number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":538,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":539,"author":{"gitId":"paullowse"},"content":"            throw new GlobalInvalidMonthException();","lastModifiedDate":"2022-10-23"},{"lineNumber":540,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":541,"author":{"gitId":"paullowse"},"content":"        return month;","lastModifiedDate":"2022-10-21"},{"lineNumber":542,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":543,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":544,"author":{"gitId":"paullowse"},"content":"    public static int parseYearTag(String parameter) throws GlobalInvalidYearException,","lastModifiedDate":"2022-10-23"},{"lineNumber":545,"author":{"gitId":"paullowse"},"content":"            GlobalNumberNotNumericException {","lastModifiedDate":"2022-10-23"},{"lineNumber":546,"author":{"gitId":"paullowse"},"content":"        int year;","lastModifiedDate":"2022-10-21"},{"lineNumber":547,"author":{"gitId":"paullowse"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":548,"author":{"gitId":"paullowse"},"content":"            year \u003d Integer.parseInt(parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":549,"author":{"gitId":"paullowse"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":550,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-23"},{"lineNumber":551,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":552,"author":{"gitId":"paullowse"},"content":"            throw new GlobalNumberNotNumericException();","lastModifiedDate":"2022-10-23"},{"lineNumber":553,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":554,"author":{"gitId":"paullowse"},"content":"        if (year \u003c\u003d 999) {","lastModifiedDate":"2022-10-23"},{"lineNumber":555,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid year number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":556,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-21"},{"lineNumber":557,"author":{"gitId":"paullowse"},"content":"            throw new GlobalInvalidYearException();","lastModifiedDate":"2022-10-23"},{"lineNumber":558,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":559,"author":{"gitId":"paullowse"},"content":"        return year;","lastModifiedDate":"2022-10-21"},{"lineNumber":560,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":561,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":562,"author":{"gitId":"paullowse"},"content":"    public static String parsePeriodTag(String parameter) throws GlobalInvalidPeriodException {","lastModifiedDate":"2022-10-23"},{"lineNumber":563,"author":{"gitId":"paullowse"},"content":"        String period;","lastModifiedDate":"2022-10-22"},{"lineNumber":564,"author":{"gitId":"paullowse"},"content":"        switch (parameter) {","lastModifiedDate":"2022-10-22"},{"lineNumber":565,"author":{"gitId":"paullowse"},"content":"        case WEEKS:","lastModifiedDate":"2022-10-22"},{"lineNumber":566,"author":{"gitId":"paullowse"},"content":"            return WEEKS;","lastModifiedDate":"2022-10-23"},{"lineNumber":567,"author":{"gitId":"paullowse"},"content":"        case MONTHS:","lastModifiedDate":"2022-10-22"},{"lineNumber":568,"author":{"gitId":"paullowse"},"content":"            return MONTHS;","lastModifiedDate":"2022-10-23"},{"lineNumber":569,"author":{"gitId":"paullowse"},"content":"        default:","lastModifiedDate":"2022-10-22"},{"lineNumber":570,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid period error is caught for the given parameter: \"","lastModifiedDate":"2022-10-23"},{"lineNumber":571,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-22"},{"lineNumber":572,"author":{"gitId":"paullowse"},"content":"            throw new GlobalInvalidPeriodException();","lastModifiedDate":"2022-10-23"},{"lineNumber":573,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":574,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":575,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":576,"author":{"gitId":"paullowse"},"content":"    public static int parseNumberTag(String parameter) throws GlobalNumberNotNumericException,","lastModifiedDate":"2022-10-23"},{"lineNumber":577,"author":{"gitId":"paullowse"},"content":"            GlobalInvalidNumberException {","lastModifiedDate":"2022-10-23"},{"lineNumber":578,"author":{"gitId":"paullowse"},"content":"        int statsNumber;","lastModifiedDate":"2022-10-22"},{"lineNumber":579,"author":{"gitId":"paullowse"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":580,"author":{"gitId":"paullowse"},"content":"            statsNumber \u003d Integer.parseInt(parameter);","lastModifiedDate":"2022-10-22"},{"lineNumber":581,"author":{"gitId":"paullowse"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":582,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-23"},{"lineNumber":583,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-22"},{"lineNumber":584,"author":{"gitId":"paullowse"},"content":"            throw new GlobalNumberNotNumericException();","lastModifiedDate":"2022-10-23"},{"lineNumber":585,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":586,"author":{"gitId":"paullowse"},"content":"        if (statsNumber \u003c 0) {","lastModifiedDate":"2022-10-22"},{"lineNumber":587,"author":{"gitId":"paullowse"},"content":"            parserLogger.log(Level.WARNING, \"An invalid year number error is caught for the given parameter: \"","lastModifiedDate":"2022-10-22"},{"lineNumber":588,"author":{"gitId":"paullowse"},"content":"                    + parameter);","lastModifiedDate":"2022-10-22"},{"lineNumber":589,"author":{"gitId":"paullowse"},"content":"            throw new GlobalInvalidNumberException();","lastModifiedDate":"2022-10-23"},{"lineNumber":590,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":591,"author":{"gitId":"paullowse"},"content":"        return statsNumber;","lastModifiedDate":"2022-10-22"},{"lineNumber":592,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":593,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":594,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":595,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":596,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":597,"author":{"gitId":"chinhan99"},"content":"     * Checks if the parameter contains numeric characters.","lastModifiedDate":"2022-10-11"},{"lineNumber":598,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":599,"author":{"gitId":"chinhan99"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":600,"author":{"gitId":"chinhan99"},"content":"     * @return A boolean value indicating whether there are numeric characters within the parameter.","lastModifiedDate":"2022-10-11"},{"lineNumber":601,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":602,"author":{"gitId":"chinhan99"},"content":"    public static boolean containNumeric(String parameter) {","lastModifiedDate":"2022-10-11"},{"lineNumber":603,"author":{"gitId":"chinhan99"},"content":"        char[] characters \u003d parameter.toCharArray();","lastModifiedDate":"2022-10-11"},{"lineNumber":604,"author":{"gitId":"chinhan99"},"content":"        for (char character : characters) {","lastModifiedDate":"2022-10-11"},{"lineNumber":605,"author":{"gitId":"chinhan99"},"content":"            if (Character.isDigit(character)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":606,"author":{"gitId":"chinhan99"},"content":"                return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":607,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":608,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":609,"author":{"gitId":"chinhan99"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":610,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":611,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":612,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":613,"author":{"gitId":"chinhan99"},"content":"     * Checks if the parameter contains alphabetical characters.","lastModifiedDate":"2022-10-11"},{"lineNumber":614,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":615,"author":{"gitId":"chinhan99"},"content":"     * @param parameter The user input after the user tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":616,"author":{"gitId":"chinhan99"},"content":"     * @return true if there are alphabetical characters within the parameter.","lastModifiedDate":"2022-10-11"},{"lineNumber":617,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":618,"author":{"gitId":"chinhan99"},"content":"    public static boolean containAlphabet(String parameter) {","lastModifiedDate":"2022-10-11"},{"lineNumber":619,"author":{"gitId":"chinhan99"},"content":"        char[] characters \u003d parameter.toCharArray();","lastModifiedDate":"2022-10-11"},{"lineNumber":620,"author":{"gitId":"chinhan99"},"content":"        for (char character : characters) {","lastModifiedDate":"2022-10-11"},{"lineNumber":621,"author":{"gitId":"chinhan99"},"content":"            if (Character.isAlphabetic(character)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":622,"author":{"gitId":"chinhan99"},"content":"                return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":623,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":624,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":625,"author":{"gitId":"chinhan99"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":626,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":627,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"chinhan99":221,"brian-vb":32,"paullowse":98,"wcwy":209,"chydarren":67}},{"path":"src/test/java/seedu/duke/command/PurgeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brian-vb"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"brian-vb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"brian-vb"},"content":"import seedu.duke.data.TransactionList;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"brian-vb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"brian-vb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"brian-vb"},"content":"public class PurgeCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"brian-vb"},"content":"    //@@author brian-vb","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"brian-vb"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"brian-vb"},"content":"    public void purge_IfEmpty_ReturnTrue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"brian-vb"},"content":"        TransactionList transactions \u003d new TransactionList();","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"brian-vb"},"content":"        boolean testOutputWithoutEntries \u003d PurgeCommand.isEmpty(transactions);","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"brian-vb"},"content":"        assertTrue(testOutputWithoutEntries);","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"brian-vb"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"brian-vb"},"content":"    public void purge_IfNotEmpty_ReturnFalse() {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"brian-vb"},"content":"        TransactionList transactions \u003d new TransactionList();","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"brian-vb"},"content":"        LocalDate date \u003d LocalDate.of(2022, 1, 1);","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"brian-vb"},"content":"        transactions.addExpense(\"Maggi\", 10, \"Food\", date);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"brian-vb"},"content":"        boolean testOutputWithEntries \u003d PurgeCommand.isEmpty(transactions);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"brian-vb"},"content":"        assertFalse(testOutputWithEntries);","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"brian-vb"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"brian-vb"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"brian-vb":28}},{"path":"src/test/java/seedu/duke/common/UtilitiesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.common;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"import static seedu.duke.parser.ParameterParser.containNumeric;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"public class UtilitiesTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    public void containNumeric_IfContainsNumeric_ReturnTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"        boolean testOutputContainsNumber \u003d containNumeric(\"Food1\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        assertTrue(testOutputContainsNumber);","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"    public void containNumeric_IfDoesNotContainNumeric_ReturnFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"        boolean testOutputWithoutNumber \u003d containNumeric(\"Food\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"        assertFalse(testOutputWithoutNumber);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"chinhan99":13,"wcwy":1,"chydarren":8}},{"path":"src/test/java/seedu/duke/data/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package seedu.duke.data.transaction;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"brian-vb"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"brian-vb"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"public class TransactionTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    //@@author chydarren","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    LocalDate date \u003d LocalDate.of(2022, 1, 1);","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    Transaction transaction \u003d new Income(\"Milked cows in the farm\", 50,","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"            \"Salary\", date);","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    public void testGetDescription() {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"        assertEquals(\"Milked cows in the farm\", transaction.getDescription());","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    public void testSetDescription() {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"        transaction.setDescription(\"Helped the cows to wash their ass\");","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        assertEquals(\"Helped the cows to wash their ass\", transaction.getDescription());","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    public void testGetAmount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"        assertEquals(50, transaction.getAmount());","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    public void testSetAmount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"        transaction.setAmount(500);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        assertEquals(500, transaction.getAmount());","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    public void testGetCategory() {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"        assertEquals(\"Salary\", transaction.getCategory());","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"    public void testSetCategory() {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"        transaction.setCategory(\"Love\");","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"        assertEquals(\"Love\", transaction.getCategory());","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"brian-vb":2,"chydarren":45}},{"path":"src/test/java/seedu/duke/parser/ParameterParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wcwy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"wcwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wcwy"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.InputTransactionInvalidAmountException;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.InputTransactionInvalidCategoryException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wcwy"},"content":"import seedu.duke.exception.InputTransactionInvalidDateException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import seedu.duke.exception.GlobalEmptyParameterException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"wcwy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wcwy"},"content":"public class ParameterParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"    //@@author chinhan99","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"    public void execute_InvalidCategory_ExpectedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"        String parametersInput \u003d \"t/expense c/f0od a/20 d/13092022 i/yummy\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"        assertThrows(","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"            InputTransactionInvalidCategoryException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"            () -\u003e ParameterParser.parse(addCommand, parametersInput)","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"    public void execute_InvalidNegativeAmount_ExpectedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"        String parametersInput \u003d \"t/expense c/food a/-20 d/13092022 i/isThisAnIncome\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"        assertThrows(","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"            InputTransactionInvalidAmountException.class,","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"            () -\u003e ParameterParser.parse(addCommand, parametersInput)","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"    public void execute_InvalidAmountInput_ExpectedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"        String parametersInput \u003d \"t/income c/bonus a/one_dollar d/13092022 i/thank_you_boss\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"        assertThrows(","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"            InputTransactionInvalidAmountException.class,","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"            () -\u003e ParameterParser.parse(addCommand, parametersInput)","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"wcwy"},"content":"    //@@author wcwy","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"wcwy"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"wcwy"},"content":"    public void parse_AddCommandEmptyDate_ExpectedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"wcwy"},"content":"        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"wcwy"},"content":"        String parametersInput \u003d \"t/income c/bonus a/1 d/ i/thank_you_boss\";","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"wcwy"},"content":"        assertThrows(","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"wcwy"},"content":"            GlobalEmptyParameterException.class,","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"wcwy"},"content":"            () -\u003e ParameterParser.parse(addCommand, parametersInput)","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"wcwy"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"wcwy"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"wcwy"},"content":"    public void parse_AddCommandInvalidDateFormat_ExpectedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"wcwy"},"content":"        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"wcwy"},"content":"        String parametersInput \u003d \"t/income c/bonus a/1 d/2020-01-01 i/thank_you_boss\";","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"wcwy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"wcwy"},"content":"        assertThrows(","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"wcwy"},"content":"            InputTransactionInvalidDateException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"wcwy"},"content":"            () -\u003e ParameterParser.parse(addCommand, parametersInput)","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"wcwy"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"wcwy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"wcwy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"chinhan99":35,"wcwy":35,"chydarren":1}}]
